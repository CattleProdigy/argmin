var N=null,E="",T="t",U="u",searchIndex={};
var R=["argmin","Executor","argmin::prelude","Calculation of the Jacobian J(x) of a vector function `fs`…","Calculation of the product of the Jacobian J(x) of a…","Calculation of the product of the Hessian H(x) of a…","Hessian","Jacobian","result","error","Computes the Hessian at the given parameters","argminiterdata","iterstate","opwrapper","terminationreason","Set the initial step length","Compute the l2-norm (`U`) of `self`","argmin::prelude::ArgminError","(Pointwise) Divide a `T` by `self`","decomposition","arraybase","ownedrepr","argmin::prelude::modcholesky","Dot/scalar product of `T` and `self`","operator","Subtract a `T` from `self`","Return zero(s)","argminkv","Add a `T` scaled by an `U` to `self`","(Pointwise) Multiply a `T` with `self`","Subtract a `T` scaled by an `U` from `self`","jacobian","cost_func_count","grad_func_count","hessian_func_count","jacobian_func_count","modify_func_count","Add a `T` to `self`","argmin::solver::conjugategradient","Constructor","argmin::solver","argmin::solver::gaussnewton","argmin::solver::linesearch","set gamma","set alpha limits","set sigma","Newton Methods","argmin::solver::newton","References:","argmin::solver::quasinewton","hessian","argmin::solver::trustregion","max_iters","set radius","Ackley test function","Rastrigin test function","argmin::prelude::executor","argmin::prelude::finitediff","to_owned","clone_into","try_from","borrow_mut","try_into","type_id","borrow","typeid","to_string","string","argmin::solver::conjugategradient::cg","argmin::solver::conjugategradient::nonlinear_cg","argmin::solver::conjugategradient::beta","argmin::solver::gaussnewton::gaussnewton_linesearch","argmin::solver::gaussnewton::gaussnewton_method","argmin::solver::gradientdescent::steepestdescent","argmin::solver::landweber","argmin::solver::linesearch::backtracking","argmin::solver::linesearch::condition","argmin::solver::linesearch::hagerzhang","argmin::solver::linesearch::morethuente","argmin::solver::neldermead","argmin::solver::newton::newton_cg","argmin::solver::newton::newton_method","argmin::solver::particleswarm","argmin::solver::quasinewton::bfgs","argmin::solver::quasinewton::dfp","argmin::solver::quasinewton::lbfgs","argmin::solver::quasinewton::sr1","argmin::solver::quasinewton::sr1_trustregion","argmin::solver::simulatedannealing","argmin::solver::trustregion::cauchypoint","argmin::solver::trustregion::dogleg","argmin::solver::trustregion::steihaug","argmin::solver::trustregion::trustregion_method","formatter","serialize","executor","writetofile","deserialize","argminresult","minimalnooperator","checkpointmode","argmincheckpoint","nooperator","writetofileserializer","observermode","serializer","observe_init","observe_iter","ordering","gradient","Do nothing, really.","partial_cmp","default","backtrace","perturbationvector","requires_cur_grad","cauchypoint","steihaug","conjugategradient","fletcherreeves","polakribiere","polakribiereplus","hestenesstiefel","landweber","satempfunc","gaussnewton","armijocondition","wolfecondition","strongwolfecondition","goldsteincondition","neldermead","next_iter","terminate","Perform one iteration of SA algorithm","set_search_direction","set_init_alpha","Set search direction","Set initial alpha value","set_radius","target_cost","Set Hessian","Set Jacobian","termination_reason","argminsloglogger","observer","Attempts to downcast this `Error` to a particular `Fail`…","best_param","best_cost","last_best_iter","get_param","get_termination_reason","get_hessian","get_jacobian","terminated","FiniteDiff","PerturbationVector","ArgminLineSearch","ArgminTrustRegion","ArgminNLCGBetaUpdate","ArgminNorm","ArgminSlogKV","ArgminEye","WriteToFileSerializer","CheckpointMode","TerminationReason","ArgminError","ArgminDiv","ModCholeskySE90","ModCholeskyGMW81","Decomposition","ModCholeskySE99","GershgorinCircles","ArgminZero","ArgminDot","OpWrapper","ArgminInv","ArgminResult","ArgminMinMax","ArgminSub","ArgminZeroLike","ArgminWeightedDot","ArgminScaledAdd","ArgminMul","ArgminScaledSub","IterState","ArgminTranspose","ArgminRandom","ArgminAdd","ObserverMode","ConjugateGradient","NonlinearConjugateGradient","FletcherReeves","PolakRibiere","PolakRibierePlus","HestenesStiefel","GaussNewtonLS","GaussNewton","SteepestDescent","Landweber","BacktrackingLineSearch","LineSearchCondition","ArmijoCondition","WolfeCondition","StrongWolfeCondition","GoldsteinCondition","HagerZhangLineSearch","MoreThuenteLineSearch","NelderMead","ParticleSwarm","SR1TrustRegion","SATempFunc","SimulatedAnnealing","CauchyPoint","TrustRegion","ArgminIterData","ArgminSlogLogger","NoOperator","WriteToFile","ArgminCheckpoint","MinimalNoOperator"];

searchIndex[R[0]]={"doc":"A pure Rust optimization framework","i":[[0,"prelude",R[0],"Definition of all relevant traits and types # Re-export of…",N,N],[0,"macros",R[2],"Macros # Macros",N,N],[0,R[95],E,R[1],N,N],[3,R[1],R[56],E,N,N],[0,"finitediff",R[2],"Finite Differentiation",N,N],[8,R[154],R[57],E,N,N],[16,R[7],E,E,0,N],[16,R[6],E,E,0,N],[16,"OperatorOutput",E,E,0,N],[10,"forward_diff",E,"Forward difference calculated as",0,[[["fn"],["self"]],["self"]]],[10,"central_diff",E,"Central difference calculated as",0,[[["fn"],["self"]],["self"]]],[10,"forward_jacobian",E,R[3],0,[[["fn"],["self"]]]],[10,"central_jacobian",E,R[3],0,[[["fn"],["self"]]]],[10,"forward_jacobian_vec_prod",E,R[4],0,[[["fn"],["self"]],["self"]]],[10,"central_jacobian_vec_prod",E,R[4],0,[[["fn"],["self"]],["self"]]],[10,"forward_jacobian_pert",E,E,0,[[["fn"],["self"],["vec"]]]],[10,"central_jacobian_pert",E,E,0,[[["fn"],["self"],["vec"]]]],[10,"forward_hessian",E,"Calculation of the Hessian using forward differences",0,[[["fn"],["self"]]]],[10,"central_hessian",E,"Calculation of the Hessian using central differences",0,[[["fn"],["self"]]]],[10,"forward_hessian_vec_prod",E,R[5],0,[[["fn"],["self"]],["self"]]],[10,"central_hessian_vec_prod",E,R[5],0,[[["fn"],["self"]],["self"]]],[10,"forward_hessian_nograd",E,"Calculation of the Hessian using forward differences…",0,[[["fn"],["self"]]]],[10,"forward_hessian_nograd_sparse",E,"Calculation of a sparse Hessian using forward differences…",0,[[["vec"],["fn"],["self"]]]],[3,R[155],E,"Perturbation Vector for the accelerated computation of the…",N,N],[12,"x_idx",E,"x indices",1,N],[12,"r_idx",E,"correspoding function indices",1,N],[6,"PerturbationVectors",E,"A collection of `PerturbationVector`s",N,N],[8,"ArgminOp",R[2],"This trait needs to be implemented for every operator/cost…",N,N],[16,"Param",E,"Type of the parameter vector",2,N],[16,"Output",E,"Output of the operator",2,N],[16,R[6],E,"Type of Hessian",2,N],[16,R[7],E,"Type of Jacobian",2,N],[11,"apply",E,"Applies the operator/cost function to parameters",2,[[["self"]],[[R[8],[R[9]]],[R[9]]]]],[11,R[109],E,"Computes the gradient at the given parameters",2,[[["self"]],[[R[8],[R[9]]],[R[9]]]]],[11,R[50],E,R[10],2,[[["self"]],[[R[8],[R[9]]],[R[9]]]]],[11,R[31],E,R[10],2,[[["self"]],[[R[8],[R[9]]],[R[9]]]]],[11,"modify",E,"Modifies a parameter vector. Comes with a variable that…",2,[[["f64"],["self"]],[[R[8],[R[9]]],[R[9]]]]],[8,"Solver",E,E,N,N],[18,"NAME",E,E,3,N],[10,R[131],E,"Computes one iteration of the algorithm.",3,[[[R[12]],["self"],[R[13]]],[[R[8],[R[11],R[9]]],[R[9]],[R[11]]]]],[11,"init",E,"Initializes the algorithm",3,[[[R[12]],["self"],[R[13]]],[[R[8],["option",R[9]]],[R[9]],["option",[R[11]]]]]],[11,"terminate_internal",E,"Checks whether basic termination reasons apply.",3,[[[R[12]],["self"]],[R[14]]]],[11,R[132],E,"Checks whether the algorithm must be terminated",3,[[[R[12]],["self"]],[R[14]]]],[3,R[214],E,"The datastructure which is returned by the `next_iter`…",N,N],[8,R[156],E,"Defines a common interface for line search methods.",N,N],[10,R[134],E,"Set the search direction",4,[[["self"],["p"]]]],[10,R[135],E,R[15],4,[[["self"],["f64"]],[[R[9]],[R[8],[R[9]]]]]],[8,R[157],E,"Defines a common interface to methods which calculate…",N,N],[10,R[138],E,R[15],5,[[["self"],["f64"]]]],[8,R[158],E,"Common interface for beta update methods (Nonlinear-CG)",N,N],[10,"update",E,"Update beta Parameter 1: \\nabla f_k Parameter 2: \\nabla…",6,[[[T],["self"]],["f64"]]],[3,R[215],E,"A logger based on `slog`",N,N],[8,R[159],E,R[16],N,N],[10,"norm",E,R[16],7,[[["self"]],[U]]],[3,R[160],E,"This type is necessary in order to be able to implement…",N,N],[12,"kv",E,E,8,N],[14,"check_param",E,"Release an `T` from an `Option<T>` if it is not `None`. If…",N,N],[8,R[161],E,E,N,N],[10,"eye",E,E,9,[[["usize"]],["self"]]],[10,"eye_like",E,E,9,[[["self"]],["self"]]],[4,R[162],E,E,N,N],[13,"Bincode",E,E,10,N],[13,"JSON",E,E,10,N],[4,R[163],E,E,N,N],[13,"Never",E,E,11,N],[13,"Every",E,E,11,N],[13,"Always",E,E,11,N],[4,R[164],E,"Indicates why the optimization algorithm stopped",N,N],[13,"NotTerminated",E,"In case it has not terminated yet",12,N],[13,"MaxItersReached",E,"Maximum number of iterations reached",12,N],[13,"TargetCostReached",E,"Target cost function value reached",12,N],[13,"TargetPrecisionReached",E,"Target precision reached",12,N],[13,"NoChangeInCost",E,"Cost function value did not change",12,N],[13,"AcceptedStallIterExceeded",E,"Acceped stall iter exceeded",12,N],[13,"BestStallIterExceeded",E,"Best stall iter exceeded",12,N],[13,"LineSearchConditionMet",E,"Condition for Line search met",12,N],[13,"TargetToleranceReached",E,"Target tolerance reached",12,N],[13,"Aborted",E,"Aborted",12,N],[4,R[165],E,E,N,N],[13,"InvalidParameter",E,"Indicates and invalid parameter",13,N],[12,"text",R[17],E,13,N],[13,"NotImplemented",R[2],"Indicates that a function is not implemented",13,N],[12,"text",R[17],E,13,N],[13,"NotInitialized",R[2],"Indicates that a function is not initialized",13,N],[12,"text",R[17],E,13,N],[13,"ConditionViolated",R[2],"Indicates that a condition is violated",13,N],[12,"text",R[17],E,13,N],[13,"CheckpointNotFound",R[2],"Checkpoint was not found",13,N],[12,"text",R[17],E,13,N],[13,"ImpossibleError",R[2],"Indicates an impossible error",13,N],[12,"text",R[17],E,13,N],[8,R[166],R[2],R[18],N,N],[10,"div",E,R[18],14,[[[T],["self"]],[U]]],[0,"modcholesky",E,"Modified Cholesky decompositions Modified Cholesky…",N,N],[8,R[167],R[22],"Schnabel & Eskow algorithm (1990)",N,N],[11,"mod_cholesky_se90",E,"Computes the modified Cholesky decomposition with the SE90…",15,[[["self"]],[R[19]]]],[8,R[168],E,"Gill, Murray and Wright (1981)",N,N],[11,"mod_cholesky_gmw81",E,"Computes the modified Cholesky decomposition with the…",16,[[["self"]],[R[19]]]],[3,R[169],E,E,N,N],[12,"l",E,E,17,N],[12,"e",E,E,17,N],[12,"p",E,E,17,N],[8,R[170],E,"Schnabel & Eskow algorithm (1999)",N,N],[11,"mod_cholesky_se99",E,"Computes the modified Cholesky decomposition with the SE99…",18,[[["self"]],[R[19]]]],[0,"utils",E,"Utility functions",N,N],[5,"eigenvalues_2x2","argmin::prelude::modcholesky::utils","Computes the Eigenvalues of a 2x2 matrix",N,[[[R[20]]]]],[5,"swap_columns",E,"Swaps columns `idx1` and `idx2` of matrix `mat`",N,[[[R[20]],["usize"]]]],[5,"swap_rows",E,"Swaps rows `idx1` and `idx2` of matrix `mat`",N,[[[R[20]],["usize"]]]],[5,"index_of_largest",E,"Returns the index of the largest element in a 1D array",N,[[[R[20]]],["usize"]]],[5,"index_of_largest_abs",E,"Returns the index of the element with the largest absolute…",N,[[[R[20]]],["usize"]]],[5,"index_to_permutation_mat",E,"Returns the permutation matrix for a vector of permuted…",N,[[],[["dim"],[R[21],["f64"]],[R[20],[R[21],"dim"]]]]],[5,"diag_mat_from_arr",E,"Builds a diagonal matrix from a 1D slice",N,[[],[["dim"],[R[20],[R[21],"dim"]],[R[21]]]]],[5,"random_householder",E,"Returns a random Householder matrix of dimension `dim` and…",N,[[["u8"],["usize"]],[["dim"],[R[21],["f64"]],[R[20],[R[21],"dim"]]]]],[5,"random_diagonal",E,"Returns a random diagonal matrix with Eigenvalues…",N,[[["u8"],["usize"]],[["dim"],[R[21],["f64"]],[R[20],[R[21],"dim"]]]]],[8,R[171],R[22],"Gershgorin circles",N,N],[10,"gershgorin_circles",E,"Computes the Gershgorin Circles of a matrix",19,[[["self"]],["vec"]]],[14,"make_kv",R[2],"Creates an `ArgminKV` at compile time in order to avoid…",N,N],[8,R[172],E,"Return param vector of all zeros (for now, this is a hack.…",N,N],[10,"zero",E,R[26],20,[[],["self"]]],[3,R[216],E,"Fake Operators for testing No-op operator with free choice…",N,N],[8,R[173],E,R[23],N,N],[10,"dot",E,R[23],21,[[[T],["self"]],[U]]],[3,R[174],E,"This wraps an operator and keeps track of how often the…",N,N],[12,R[32],E,E,22,N],[12,R[33],E,E,22,N],[12,R[34],E,E,22,N],[12,R[35],E,E,22,N],[12,R[36],E,E,22,N],[8,R[175],E,"Compute the inverse (`T`) of `self`",N,N],[10,"inv",E,E,23,[[["self"]],[[R[9]],[R[8],[R[9]]]]]],[3,R[176],E,"This is returned by the `Executor` after the solver is run…",N,N],[12,R[24],E,R[24],24,N],[12,"state",E,"iteration state",24,N],[3,R[217],E,E,N,N],[8,R[177],E,E,N,N],[10,"min",E,"Select piecewise minimum / maximum",25,[[["self"]],["self"]]],[10,"max",E,E,25,[[["self"]],["self"]]],[3,"Observer",E,"Container for observers which acts just like a single…",N,N],[8,R[178],E,R[25],N,N],[10,"sub",E,R[25],26,[[[T],["self"]],[U]]],[8,R[179],E,"Zero for dynamically sized objects",N,N],[10,"zero_like",E,R[26],27,[[["self"]],["self"]]],[3,"ArgminKV",E,"A simple key-value storage",N,N],[12,"kv",E,"The actual key value storage",28,N],[8,"Observe",E,"Defines the interface every Observer needs to expose",N,N],[11,R[106],E,"Called once at the beginning of the execution of the solver.",29,[[["str"],["self"],[R[27]]],[[R[9]],[R[8],[R[9]]]]]],[11,R[107],E,"Called at every iteration of the solver",29,[[[R[12]],["self"],[R[27]]],[[R[9]],[R[8],[R[9]]]]]],[3,"Error",E,"The `Error` type, which can contain any failure.",N,N],[0,"slog_logger",E,"Loggers based on the `slog` crate",N,N],[8,R[180],E,"Dot/scalar product of `T` and `self` weighted by W (p^TWv)",N,N],[10,"weighted_dot",E,R[23],30,[[[T],["self"],["v"]],[U]]],[14,"trait_bound",E,"Reuse a list of trait bounds by giving it a name, e.g.…",N,N],[3,R[218],E,E,N,N],[8,R[181],E,R[28],N,N],[10,"scaled_add",E,R[28],31,[[[U],[T],["self"]],["v"]]],[8,R[182],E,R[29],N,N],[10,"mul",E,R[29],32,[[[T],["self"]],[U]]],[5,"load_checkpoint",E,E,N,[[["p"]],[[R[9]],[R[8],[R[9]]]]]],[3,R[219],E,E,N,N],[8,R[183],E,R[30],N,N],[10,"scaled_sub",E,R[30],33,[[[U],[T],["self"]],["v"]]],[3,R[184],E,E,N,N],[12,"param",E,"Current parameter vector",34,N],[12,"prev_param",E,"Previous parameter vector",34,N],[12,R[146],E,"Current best parameter vector",34,N],[12,"prev_best_param",E,"Previous best parameter vector",34,N],[12,"cost",E,"Current cost function value",34,N],[12,"prev_cost",E,"Previous cost function value",34,N],[12,R[147],E,"Current best cost function value",34,N],[12,"prev_best_cost",E,"Previous best cost function value",34,N],[12,R[139],E,"Target cost function value",34,N],[12,"grad",E,"Current gradient",34,N],[12,"prev_grad",E,"Previous gradient",34,N],[12,R[50],E,"Current Hessian",34,N],[12,"prev_hessian",E,"Previous Hessian",34,N],[12,R[31],E,"Current Jacobian",34,N],[12,"prev_jacobian",E,"Previous Jacobian",34,N],[12,"iter",E,"Current iteration",34,N],[12,R[148],E,"Iteration number of last best cost",34,N],[12,R[52],E,"Maximum number of iterations",34,N],[12,R[32],E,"Number of cost function evaluations so far",34,N],[12,R[33],E,"Number of gradient evaluations so far",34,N],[12,R[34],E,"Number of Hessian evaluations so far",34,N],[12,R[35],E,"Number of Jacobian evaluations so far",34,N],[12,R[36],E,"Number of modify evaluations so far",34,N],[12,"time",E,"Time required so far",34,N],[12,R[142],E,"Reason of termination",34,N],[8,R[185],E,E,N,N],[10,T,E,E,35,[[],["self"]]],[0,"file",E,"Output parameter vectors to file",N,N],[8,R[186],E,E,N,N],[10,"rand_from_range",E,"Get a random element between min and max,",36,[[["self"]],["self"]]],[8,R[187],E,R[37],N,N],[10,"add",E,R[37],37,[[[T],["self"]],[U]]],[4,R[188],E,"This is used to indicate how often the observer will…",N,N],[13,"Never",E,E,38,N],[13,"Always",E,E,38,N],[13,"Every",E,E,38,N],[13,"NewBest",E,E,38,N],[0,"solver",R[0],"Solvers",N,N],[0,R[118],R[40],"Conjugate Gradient methods",N,N],[0,"cg",R[38],"Conjugate gradient method # References:",N,N],[3,R[189],R[68],"The conjugate gradient method is a solver for systems of…",N,N],[11,"new",E,R[39],39,[[["p"]],[[R[9]],[R[8],[R[9]]]]]],[11,"p",E,"Return the current search direction (This is needed by…",39,[[["self"]],["p"]]],[11,"p_prev",E,"Return the previous search direction (This is needed by…",39,[[["self"]],["p"]]],[11,"residual",E,"Return the current residual (This is needed by NewtonCG…",39,[[["self"]],["p"]]],[0,"nonlinear_cg",R[38],"Nonlinear conjugate gradient method Important TODO: Find…",N,N],[3,R[190],R[69],"The nonlinear conjugate gradient is a generalization of…",N,N],[11,"new",E,"Constructor (Polak Ribiere Conjugate Gradient (PR-CG))",40,[[["l"],["b"]],[[R[9]],[R[8],[R[9]]]]]],[11,"restart_iters",E,"Specifiy the number of iterations after which a restart…",40,[[["u64"]],["self"]]],[11,"restart_orthogonality",E,"Set the value for the orthogonality measure. Setting this…",40,[[["f64"]],["self"]]],[0,"beta",R[38],"Beta update methods for nonlinear CG # Beta update methods",N,N],[3,R[191],R[70],"Fletcher and Reeves (FR) method TODO: Reference",N,N],[3,R[192],E,"Polak and Ribiere (PR) method TODO: Reference",N,N],[3,R[193],E,"Polak and Ribiere Plus (PR+) method TODO: Reference",N,N],[3,R[194],E,"Hestenes and Stiefel (HS) method TODO: Reference",N,N],[11,"new",E,R[39],41,[[],["self"]]],[11,"new",E,R[39],42,[[],["self"]]],[11,"new",E,R[39],43,[[],["self"]]],[11,"new",E,R[39],44,[[],["self"]]],[0,R[125],R[40],R[46],N,N],[0,"gaussnewton_linesearch",R[41],"Gauss-Newton method with linesearch # References:",N,N],[3,R[195],R[71],"Gauss-Newton method with linesearch",N,N],[11,"new",E,R[39],45,[[["l"]],["self"]]],[0,"gaussnewton_method",R[41],"Gauss-Newton method # References:",N,N],[3,R[196],R[72],"Gauss-Newton method",N,N],[11,"new",E,R[39],46,[[],["self"]]],[11,"gamma",E,R[43],46,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[0,"gradientdescent",R[40],"Gradient descent methods",N,N],[0,"steepestdescent","argmin::solver::gradientdescent","Steepest Descent method",N,N],[3,R[197],R[73],"Steepest descent iteratively takes steps in the direction…",N,N],[11,"new",E,R[39],47,[[["l"]],["self"]]],[0,R[123],R[40],"Landweber iteration",N,N],[3,R[198],R[74],"The Landweber iteration is a solver for ill-posed linear…",N,N],[11,"new",E,R[39],48,[[["f64"]],["self"]]],[0,"linesearch",R[40],"Line search methods",N,N],[0,"backtracking",R[42],"Backtracking line search algorithm * Backtracking line…",N,N],[3,R[199],R[75],"The Backtracking line search is a simple method to find a…",N,N],[11,"new",E,R[39],49,[[["l"]],["self"]]],[11,"rho",E,"Set rho",49,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[0,"condition",R[42],"Acceptance conditions # References:",N,N],[3,R[201],R[76],"Armijo Condition",N,N],[3,R[202],E,"Wolfe Condition",N,N],[3,R[203],E,"Strong Wolfe conditions",N,N],[3,R[204],E,"Goldstein conditions",N,N],[8,R[200],E,"Needs to be implemented by everything that wants to be a…",N,N],[10,"eval",E,"Evaluate the condition",50,[[["f64"],["self"],[T]],["bool"]]],[10,R[115],E,"Indicates whether this condition requires the computation…",50,[[["self"]],["bool"]]],[11,"new",E,R[39],51,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[11,"new",E,R[39],52,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[11,"new",E,R[39],53,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[11,"new",E,R[39],54,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[0,"hagerzhang",R[42],"Hager-Zhang line search algorithm * Hager-Zhang line search",N,N],[3,R[205],R[77],"The Hager-Zhang line search is a method to find a step…",N,N],[11,"new",E,R[39],55,[[],["self"]]],[11,"delta",E,"set delta",55,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[11,"sigma",E,R[45],55,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[11,"epsilon",E,"set epsilon",55,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[11,"theta",E,"set theta",55,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[11,"gamma",E,R[43],55,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[11,"eta",E,"set eta",55,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[11,"alpha",E,R[44],55,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[0,"morethuente",R[42],"More-Thuente line search algorithm * More-Thuente line…",N,N],[3,R[206],R[78],"The More-Thuente line search is a method to find a step…",N,N],[11,"new",E,R[39],56,[[],["self"]]],[11,"c",E,"Set c1 and c2 where 0 < c1 < c2 < 1.",56,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[11,"alpha",E,R[44],56,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[0,R[130],R[40],R[48],N,N],[3,R[207],R[79],"Nelder-Mead method",N,N],[11,"new",E,R[39],57,[[],["self"]]],[11,"with_initial_params",E,"Add initial parameters",57,[[["vec"]],["self"]]],[11,"sd_tolerance",E,"Set Sample standard deviation tolerance",57,[[["f64"]],["self"]]],[11,"alpha",E,"set alpha",57,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[11,"gamma",E,R[43],57,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[11,"rho",E,"set rho",57,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[11,"sigma",E,R[45],57,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[0,"newton",R[40],R[46],N,N],[0,"newton_cg",R[47],"Newton-CG method TODO: Stop when search direction is close…",N,N],[3,"NewtonCG",R[80],"The Newton-CG method (also called truncated Newton method)…",N,N],[11,"new",E,R[39],58,[[["l"]],["self"]]],[11,"curvature_threshold",E,"Set curvature threshold",58,[[["f64"]],["self"]]],[0,"newton_method",R[47],"Newton's method # References:",N,N],[3,"Newton",R[81],"Newton's method iteratively finds the stationary points of…",N,N],[11,"new",E,R[39],59,[[],["self"]]],[11,"set_gamma",E,R[43],59,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[0,"particleswarm",R[40],R[48],N,N],[3,R[208],R[82],"Particle Swarm Optimization (PSO)",N,N],[3,"Particle",E,"A single particle",N,N],[12,"position",E,"Position of particle",60,N],[12,"cost",E,"Cost of particle",60,N],[8,"Position",E,E,N,N],[11,"new",E,R[39],61,[[["f64"],["usize"]],[[R[9]],[R[8],[R[9]]]]]],[11,"set_iter_callback",E,"Set callback",61,[[["self"],["fnmut"]]]],[0,"quasinewton",R[40],"Quasi-Newton methods",N,N],[0,"bfgs",R[49],R[48],N,N],[3,"BFGS",R[83],"BFGS method",N,N],[11,"new",E,R[39],62,[[["l"],["h"]],["self"]]],[0,"dfp",R[49],R[48],N,N],[3,"DFP",R[84],"DFP method",N,N],[11,"new",E,R[39],63,[[["l"],["h"]],["self"]]],[0,"lbfgs",R[49],R[48],N,N],[3,"LBFGS",R[85],"L-BFGS method",N,N],[11,"new",E,R[39],64,[[["l"],["usize"]],["self"]]],[0,"sr1",R[49],R[48],N,N],[3,"SR1",R[86],"SR1 method (broken!)",N,N],[11,"new",E,R[39],65,[[["l"],["h"]],["self"]]],[11,"r",E,"Set r",65,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[0,"sr1_trustregion",R[49],R[48],N,N],[3,R[209],R[87],"SR1 Trust Region method",N,N],[11,"new",E,R[39],66,[[["r"]],["self"]]],[11,R[50],E,"provide initial Hessian (if not provided, the algorithm…",66,[[["b"]],["self"]]],[11,"r",E,"Set r",66,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[11,"radius",E,R[53],66,[[["f64"]],["self"]]],[11,"eta",E,"Set eta",66,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[0,"simulatedannealing",R[40],E,N,N],[3,R[211],R[88],"Simulated Annealing",N,N],[4,R[210],E,"Temperature functions for Simulated Annealing.",N,N],[13,"TemperatureFast",E,"`t_i = t_init / i`",67,N],[13,"Boltzmann",E,"`t_i = t_init / ln(i)`",67,N],[13,"Exponential",E,"`t_i = t_init * x^i`",67,N],[11,"new",E,R[39],68,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[11,"temp_func",E,"Set temperature function to one of the options in…",68,[[[R[124]]],["self"]]],[11,"stall_accepted",E,"The optimization stops after there has been no accepted…",68,[[["u64"]],["self"]]],[11,"stall_best",E,"The optimization stops after there has been no new best…",68,[[["u64"]],["self"]]],[11,"reannealing_fixed",E,"Start reannealing after `iter` iterations",68,[[["u64"]],["self"]]],[11,"reannealing_accepted",E,"Start reannealing after no accepted solution has been…",68,[[["u64"]],["self"]]],[11,"reannealing_best",E,"Start reannealing after no new best solution has been…",68,[[["u64"]],["self"]]],[0,"trustregion",R[40],"Argmin Trust region methods",N,N],[5,"reduction_ratio",R[51],"Computes reduction ratio",N,[[["f64"]],["f64"]]],[0,R[116],E,"Cauchy Point # References:",N,N],[3,R[212],R[89],"The Cauchy point is the minimum of the quadratic…",N,N],[11,"new",E,R[39],69,[[],["self"]]],[0,"dogleg",R[51],"Dogleg method # References:",N,N],[3,"Dogleg",R[90],"The Dogleg method computes the intersection of the trust…",N,N],[11,"new",E,R[39],70,[[],["self"]]],[0,R[117],R[51],"Steihaug method # References:",N,N],[3,"Steihaug",R[91],"The Steihaug method is a conjugate gradients based…",N,N],[11,"new",E,R[39],71,[[],["self"]]],[11,"epsilon",E,"Set epsilon",71,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[11,R[52],E,"set maximum number of iterations",71,[[["u64"]],["self"]]],[0,"trustregion_method",R[51],"Trust region solver # References:",N,N],[3,R[213],R[92],"The trust region method approximates the cost function…",N,N],[11,"new",E,R[39],72,[[["r"]],["self"]]],[11,"radius",E,R[53],72,[[["f64"]],["self"]]],[11,"max_radius",E,"Set maximum radius",72,[[["f64"]],["self"]]],[11,"eta",E,"Set eta",72,[[["f64"]],[[R[9]],[R[8],[R[9]]]]]],[0,"testfunctions",R[0],"Testfunctions # Testfunctions",N,N],[5,"picheny","argmin::testfunctions","Picheny test function",N,[[],[T]]],[5,"easom",E,"Easom test function",N,[[],[T]]],[5,"holder_table",E,"Holder table test function",N,[[],[T]]],[5,"rosenbrock",E,"Multidimensional Rosenbrock test function",N,[[[T]],[T]]],[5,"ackley_param",E,R[54],N,[[[T]],[T]]],[5,"schaffer_n4",E,"Schaffer test function No. 4",N,[[],[T]]],[5,"bukin_n6",E,"Bukin test function No. 6",N,[[],[T]]],[5,"beale",E,"Beale test function",N,[[],[T]]],[5,"himmelblau",E,"Himmelblau test function",N,[[],[T]]],[5,"mccorminck",E,"McCorminck test function",N,[[],[T]]],[5,"goldsteinprice",E,"Goldstein-Price test function",N,[[],[T]]],[5,"sphere_derivative",E,"Derivative of sphere test function",N,[[],["vec"]]],[5,"schaffer_n2",E,"Schaffer test function No. 2",N,[[],[T]]],[5,"rosenbrock_2d_hessian",E,"Hessian of 2D Rosenbrock function",N,[[[T]],["vec"]]],[5,"rastrigin",E,R[55],N,[[],[T]]],[5,"sphere",E,"Sphere test function",N,[[],[T]]],[5,"rosenbrock_2d_derivative",E,"Derivative of 2D Rosenbrock function",N,[[[T]],["vec"]]],[5,"zero",E,"Zero test function",N,[[],["f64"]]],[5,"rosenbrock_2d",E,"2D Rosenbrock test function",N,[[[T]],[T]]],[5,"ackley",E,R[54],N,[[],[T]]],[5,"matyas",E,"Matyas test function",N,[[],[T]]],[5,"levy",E,"Levy test function",N,[[],[T]]],[5,"eggholder",E,"Eggholder test function",N,[[],[T]]],[5,"levy_n13",E,"Levy test function No. 13",N,[[],[T]]],[5,"rastrigin_a",E,R[55],N,[[[T]],[T]]],[5,"cross_in_tray",E,"Cross-in-tray test function",N,[[],["f64"]]],[5,"zero_derivative",E,"Derivative of zero test function",N,[[],[["vec",["f64"]],["f64"]]]],[5,"threehumpcamel",E,"Three-hump camel test function",N,[[],[T]]],[5,"booth",E,"Booth test function",N,[[],[T]]],[5,"styblinski_tang",E,"Styblinski-Tang test function",N,[[],[T]]],[11,"from",R[56],E,73,[[[T]],[T]]],[11,"into",E,E,73,[[],[U]]],[11,R[58],E,E,73,[[["self"]],[T]]],[11,R[59],E,E,73,[[[T],["self"]]]],[11,R[60],E,E,73,[[[U]],[R[8]]]],[11,R[64],E,E,73,[[["self"]],[T]]],[11,R[63],E,E,73,[[["self"]],[R[65]]]],[11,R[61],E,E,73,[[["self"]],[T]]],[11,R[62],E,E,73,[[],[R[8]]]],[11,"from",R[57],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[58],E,E,1,[[["self"]],[T]]],[11,R[59],E,E,1,[[[T],["self"]]]],[11,R[60],E,E,1,[[[U]],[R[8]]]],[11,R[64],E,E,1,[[["self"]],[T]]],[11,R[63],E,E,1,[[["self"]],[R[65]]]],[11,R[61],E,E,1,[[["self"]],[T]]],[11,R[62],E,E,1,[[],[R[8]]]],[11,"from",R[2],E,74,[[[T]],[T]]],[11,"into",E,E,74,[[],[U]]],[11,R[58],E,E,74,[[["self"]],[T]]],[11,R[59],E,E,74,[[[T],["self"]]]],[11,R[60],E,E,74,[[[U]],[R[8]]]],[11,R[64],E,E,74,[[["self"]],[T]]],[11,R[63],E,E,74,[[["self"]],[R[65]]]],[11,R[61],E,E,74,[[["self"]],[T]]],[11,R[62],E,E,74,[[],[R[8]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,"into",E,E,75,[[],[U]]],[11,R[58],E,E,75,[[["self"]],[T]]],[11,R[59],E,E,75,[[[T],["self"]]]],[11,R[60],E,E,75,[[[U]],[R[8]]]],[11,R[64],E,E,75,[[["self"]],[T]]],[11,R[63],E,E,75,[[["self"]],[R[65]]]],[11,R[61],E,E,75,[[["self"]],[T]]],[11,R[62],E,E,75,[[],[R[8]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[60],E,E,8,[[[U]],[R[8]]]],[11,R[64],E,E,8,[[["self"]],[T]]],[11,R[63],E,E,8,[[["self"]],[R[65]]]],[11,R[61],E,E,8,[[["self"]],[T]]],[11,R[62],E,E,8,[[],[R[8]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[58],E,E,10,[[["self"]],[T]]],[11,R[59],E,E,10,[[[T],["self"]]]],[11,R[60],E,E,10,[[[U]],[R[8]]]],[11,R[64],E,E,10,[[["self"]],[T]]],[11,R[63],E,E,10,[[["self"]],[R[65]]]],[11,R[61],E,E,10,[[["self"]],[T]]],[11,R[62],E,E,10,[[],[R[8]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[58],E,E,11,[[["self"]],[T]]],[11,R[59],E,E,11,[[[T],["self"]]]],[11,R[66],E,E,11,[[["self"]],[R[67]]]],[11,R[60],E,E,11,[[[U]],[R[8]]]],[11,R[64],E,E,11,[[["self"]],[T]]],[11,R[63],E,E,11,[[["self"]],[R[65]]]],[11,R[61],E,E,11,[[["self"]],[T]]],[11,R[62],E,E,11,[[],[R[8]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[58],E,E,12,[[["self"]],[T]]],[11,R[59],E,E,12,[[[T],["self"]]]],[11,R[66],E,E,12,[[["self"]],[R[67]]]],[11,R[60],E,E,12,[[[U]],[R[8]]]],[11,R[64],E,E,12,[[["self"]],[T]]],[11,R[63],E,E,12,[[["self"]],[R[65]]]],[11,R[61],E,E,12,[[["self"]],[T]]],[11,R[62],E,E,12,[[],[R[8]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[66],E,E,13,[[["self"]],[R[67]]]],[11,R[60],E,E,13,[[[U]],[R[8]]]],[11,R[64],E,E,13,[[["self"]],[T]]],[11,R[63],E,E,13,[[["self"]],[R[65]]]],[11,R[61],E,E,13,[[["self"]],[T]]],[11,R[62],E,E,13,[[],[R[8]]]],[11,"as_fail",E,E,13,[[["self"]],["fail"]]],[11,"from",R[22],E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[60],E,E,17,[[[U]],[R[8]]]],[11,R[64],E,E,17,[[["self"]],[T]]],[11,R[63],E,E,17,[[["self"]],[R[65]]]],[11,R[61],E,E,17,[[["self"]],[T]]],[11,R[62],E,E,17,[[],[R[8]]]],[11,"from",R[2],E,76,[[[T]],[T]]],[11,"into",E,E,76,[[],[U]]],[11,R[58],E,E,76,[[["self"]],[T]]],[11,R[59],E,E,76,[[[T],["self"]]]],[11,R[66],E,E,76,[[["self"]],[R[67]]]],[11,R[60],E,E,76,[[[U]],[R[8]]]],[11,R[64],E,E,76,[[["self"]],[T]]],[11,R[63],E,E,76,[[["self"]],[R[65]]]],[11,R[61],E,E,76,[[["self"]],[T]]],[11,R[62],E,E,76,[[],[R[8]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[58],E,E,22,[[["self"]],[T]]],[11,R[59],E,E,22,[[[T],["self"]]]],[11,R[60],E,E,22,[[[U]],[R[8]]]],[11,R[64],E,E,22,[[["self"]],[T]]],[11,R[63],E,E,22,[[["self"]],[R[65]]]],[11,R[61],E,E,22,[[["self"]],[T]]],[11,R[62],E,E,22,[[],[R[8]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[58],E,E,24,[[["self"]],[T]]],[11,R[59],E,E,24,[[[T],["self"]]]],[11,R[66],E,E,24,[[["self"]],[R[67]]]],[11,R[60],E,E,24,[[[U]],[R[8]]]],[11,R[64],E,E,24,[[["self"]],[T]]],[11,R[63],E,E,24,[[["self"]],[R[65]]]],[11,R[61],E,E,24,[[["self"]],[T]]],[11,R[62],E,E,24,[[],[R[8]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,"into",E,E,77,[[],[U]]],[11,R[58],E,E,77,[[["self"]],[T]]],[11,R[59],E,E,77,[[[T],["self"]]]],[11,R[60],E,E,77,[[[U]],[R[8]]]],[11,R[64],E,E,77,[[["self"]],[T]]],[11,R[63],E,E,77,[[["self"]],[R[65]]]],[11,R[61],E,E,77,[[["self"]],[T]]],[11,R[62],E,E,77,[[],[R[8]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,"into",E,E,78,[[],[U]]],[11,R[58],E,E,78,[[["self"]],[T]]],[11,R[59],E,E,78,[[[T],["self"]]]],[11,R[60],E,E,78,[[[U]],[R[8]]]],[11,R[64],E,E,78,[[["self"]],[T]]],[11,R[63],E,E,78,[[["self"]],[R[65]]]],[11,R[61],E,E,78,[[["self"]],[T]]],[11,R[62],E,E,78,[[],[R[8]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[58],E,E,28,[[["self"]],[T]]],[11,R[59],E,E,28,[[[T],["self"]]]],[11,R[66],E,E,28,[[["self"]],[R[67]]]],[11,R[60],E,E,28,[[[U]],[R[8]]]],[11,R[64],E,E,28,[[["self"]],[T]]],[11,R[63],E,E,28,[[["self"]],[R[65]]]],[11,R[61],E,E,28,[[["self"]],[T]]],[11,R[62],E,E,28,[[],[R[8]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,"into",E,E,79,[[],[U]]],[11,R[66],E,E,79,[[["self"]],[R[67]]]],[11,R[60],E,E,79,[[[U]],[R[8]]]],[11,R[64],E,E,79,[[["self"]],[T]]],[11,R[63],E,E,79,[[["self"]],[R[65]]]],[11,R[61],E,E,79,[[["self"]],[T]]],[11,R[62],E,E,79,[[],[R[8]]]],[11,"as_fail",E,E,79,[[["self"]],["fail"]]],[11,"from",E,E,80,[[[T]],[T]]],[11,"into",E,E,80,[[],[U]]],[11,R[58],E,E,80,[[["self"]],[T]]],[11,R[59],E,E,80,[[[T],["self"]]]],[11,R[60],E,E,80,[[[U]],[R[8]]]],[11,R[64],E,E,80,[[["self"]],[T]]],[11,R[63],E,E,80,[[["self"]],[R[65]]]],[11,R[61],E,E,80,[[["self"]],[T]]],[11,R[62],E,E,80,[[],[R[8]]]],[11,"from",E,E,81,[[[T]],[T]]],[11,"into",E,E,81,[[],[U]]],[11,R[58],E,E,81,[[["self"]],[T]]],[11,R[59],E,E,81,[[[T],["self"]]]],[11,R[66],E,E,81,[[["self"]],[R[67]]]],[11,R[60],E,E,81,[[[U]],[R[8]]]],[11,R[64],E,E,81,[[["self"]],[T]]],[11,R[63],E,E,81,[[["self"]],[R[65]]]],[11,R[61],E,E,81,[[["self"]],[T]]],[11,R[62],E,E,81,[[],[R[8]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[58],E,E,34,[[["self"]],[T]]],[11,R[59],E,E,34,[[[T],["self"]]]],[11,R[60],E,E,34,[[[U]],[R[8]]]],[11,R[64],E,E,34,[[["self"]],[T]]],[11,R[63],E,E,34,[[["self"]],[R[65]]]],[11,R[61],E,E,34,[[["self"]],[T]]],[11,R[62],E,E,34,[[],[R[8]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[58],E,E,38,[[["self"]],[T]]],[11,R[59],E,E,38,[[[T],["self"]]]],[11,R[60],E,E,38,[[[U]],[R[8]]]],[11,R[64],E,E,38,[[["self"]],[T]]],[11,R[63],E,E,38,[[["self"]],[R[65]]]],[11,R[61],E,E,38,[[["self"]],[T]]],[11,R[62],E,E,38,[[],[R[8]]]],[11,"from",R[68],E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[58],E,E,39,[[["self"]],[T]]],[11,R[59],E,E,39,[[[T],["self"]]]],[11,R[60],E,E,39,[[[U]],[R[8]]]],[11,R[64],E,E,39,[[["self"]],[T]]],[11,R[63],E,E,39,[[["self"]],[R[65]]]],[11,R[61],E,E,39,[[["self"]],[T]]],[11,R[62],E,E,39,[[],[R[8]]]],[11,"from",R[69],E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[60],E,E,40,[[[U]],[R[8]]]],[11,R[64],E,E,40,[[["self"]],[T]]],[11,R[63],E,E,40,[[["self"]],[R[65]]]],[11,R[61],E,E,40,[[["self"]],[T]]],[11,R[62],E,E,40,[[],[R[8]]]],[11,"from",R[70],E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[58],E,E,41,[[["self"]],[T]]],[11,R[59],E,E,41,[[[T],["self"]]]],[11,R[60],E,E,41,[[[U]],[R[8]]]],[11,R[64],E,E,41,[[["self"]],[T]]],[11,R[63],E,E,41,[[["self"]],[R[65]]]],[11,R[61],E,E,41,[[["self"]],[T]]],[11,R[62],E,E,41,[[],[R[8]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[58],E,E,42,[[["self"]],[T]]],[11,R[59],E,E,42,[[[T],["self"]]]],[11,R[60],E,E,42,[[[U]],[R[8]]]],[11,R[64],E,E,42,[[["self"]],[T]]],[11,R[63],E,E,42,[[["self"]],[R[65]]]],[11,R[61],E,E,42,[[["self"]],[T]]],[11,R[62],E,E,42,[[],[R[8]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[58],E,E,43,[[["self"]],[T]]],[11,R[59],E,E,43,[[[T],["self"]]]],[11,R[60],E,E,43,[[[U]],[R[8]]]],[11,R[64],E,E,43,[[["self"]],[T]]],[11,R[63],E,E,43,[[["self"]],[R[65]]]],[11,R[61],E,E,43,[[["self"]],[T]]],[11,R[62],E,E,43,[[],[R[8]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[58],E,E,44,[[["self"]],[T]]],[11,R[59],E,E,44,[[[T],["self"]]]],[11,R[60],E,E,44,[[[U]],[R[8]]]],[11,R[64],E,E,44,[[["self"]],[T]]],[11,R[63],E,E,44,[[["self"]],[R[65]]]],[11,R[61],E,E,44,[[["self"]],[T]]],[11,R[62],E,E,44,[[],[R[8]]]],[11,"from",R[71],E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[60],E,E,45,[[[U]],[R[8]]]],[11,R[64],E,E,45,[[["self"]],[T]]],[11,R[63],E,E,45,[[["self"]],[R[65]]]],[11,R[61],E,E,45,[[["self"]],[T]]],[11,R[62],E,E,45,[[],[R[8]]]],[11,"from",R[72],E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[60],E,E,46,[[[U]],[R[8]]]],[11,R[64],E,E,46,[[["self"]],[T]]],[11,R[63],E,E,46,[[["self"]],[R[65]]]],[11,R[61],E,E,46,[[["self"]],[T]]],[11,R[62],E,E,46,[[],[R[8]]]],[11,"from",R[73],E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[60],E,E,47,[[[U]],[R[8]]]],[11,R[64],E,E,47,[[["self"]],[T]]],[11,R[63],E,E,47,[[["self"]],[R[65]]]],[11,R[61],E,E,47,[[["self"]],[T]]],[11,R[62],E,E,47,[[],[R[8]]]],[11,"from",R[74],E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[58],E,E,48,[[["self"]],[T]]],[11,R[59],E,E,48,[[[T],["self"]]]],[11,R[60],E,E,48,[[[U]],[R[8]]]],[11,R[64],E,E,48,[[["self"]],[T]]],[11,R[63],E,E,48,[[["self"]],[R[65]]]],[11,R[61],E,E,48,[[["self"]],[T]]],[11,R[62],E,E,48,[[],[R[8]]]],[11,"from",R[75],E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[58],E,E,49,[[["self"]],[T]]],[11,R[59],E,E,49,[[[T],["self"]]]],[11,R[60],E,E,49,[[[U]],[R[8]]]],[11,R[64],E,E,49,[[["self"]],[T]]],[11,R[63],E,E,49,[[["self"]],[R[65]]]],[11,R[61],E,E,49,[[["self"]],[T]]],[11,R[62],E,E,49,[[],[R[8]]]],[11,"from",R[76],E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[58],E,E,51,[[["self"]],[T]]],[11,R[59],E,E,51,[[[T],["self"]]]],[11,R[60],E,E,51,[[[U]],[R[8]]]],[11,R[64],E,E,51,[[["self"]],[T]]],[11,R[63],E,E,51,[[["self"]],[R[65]]]],[11,R[61],E,E,51,[[["self"]],[T]]],[11,R[62],E,E,51,[[],[R[8]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[58],E,E,52,[[["self"]],[T]]],[11,R[59],E,E,52,[[[T],["self"]]]],[11,R[60],E,E,52,[[[U]],[R[8]]]],[11,R[64],E,E,52,[[["self"]],[T]]],[11,R[63],E,E,52,[[["self"]],[R[65]]]],[11,R[61],E,E,52,[[["self"]],[T]]],[11,R[62],E,E,52,[[],[R[8]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[58],E,E,53,[[["self"]],[T]]],[11,R[59],E,E,53,[[[T],["self"]]]],[11,R[60],E,E,53,[[[U]],[R[8]]]],[11,R[64],E,E,53,[[["self"]],[T]]],[11,R[63],E,E,53,[[["self"]],[R[65]]]],[11,R[61],E,E,53,[[["self"]],[T]]],[11,R[62],E,E,53,[[],[R[8]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[58],E,E,54,[[["self"]],[T]]],[11,R[59],E,E,54,[[[T],["self"]]]],[11,R[60],E,E,54,[[[U]],[R[8]]]],[11,R[64],E,E,54,[[["self"]],[T]]],[11,R[63],E,E,54,[[["self"]],[R[65]]]],[11,R[61],E,E,54,[[["self"]],[T]]],[11,R[62],E,E,54,[[],[R[8]]]],[11,"from",R[77],E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[58],E,E,55,[[["self"]],[T]]],[11,R[59],E,E,55,[[[T],["self"]]]],[11,R[60],E,E,55,[[[U]],[R[8]]]],[11,R[64],E,E,55,[[["self"]],[T]]],[11,R[63],E,E,55,[[["self"]],[R[65]]]],[11,R[61],E,E,55,[[["self"]],[T]]],[11,R[62],E,E,55,[[],[R[8]]]],[11,"from",R[78],E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[58],E,E,56,[[["self"]],[T]]],[11,R[59],E,E,56,[[[T],["self"]]]],[11,R[60],E,E,56,[[[U]],[R[8]]]],[11,R[64],E,E,56,[[["self"]],[T]]],[11,R[63],E,E,56,[[["self"]],[R[65]]]],[11,R[61],E,E,56,[[["self"]],[T]]],[11,R[62],E,E,56,[[],[R[8]]]],[11,"from",R[79],E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[60],E,E,57,[[[U]],[R[8]]]],[11,R[64],E,E,57,[[["self"]],[T]]],[11,R[63],E,E,57,[[["self"]],[R[65]]]],[11,R[61],E,E,57,[[["self"]],[T]]],[11,R[62],E,E,57,[[],[R[8]]]],[11,"from",R[80],E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[60],E,E,58,[[[U]],[R[8]]]],[11,R[64],E,E,58,[[["self"]],[T]]],[11,R[63],E,E,58,[[["self"]],[R[65]]]],[11,R[61],E,E,58,[[["self"]],[T]]],[11,R[62],E,E,58,[[],[R[8]]]],[11,"from",R[81],E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[60],E,E,59,[[[U]],[R[8]]]],[11,R[64],E,E,59,[[["self"]],[T]]],[11,R[63],E,E,59,[[["self"]],[R[65]]]],[11,R[61],E,E,59,[[["self"]],[T]]],[11,R[62],E,E,59,[[],[R[8]]]],[11,"from",R[82],E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[60],E,E,61,[[[U]],[R[8]]]],[11,R[64],E,E,61,[[["self"]],[T]]],[11,R[63],E,E,61,[[["self"]],[R[65]]]],[11,R[61],E,E,61,[[["self"]],[T]]],[11,R[62],E,E,61,[[],[R[8]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[60],E,E,60,[[[U]],[R[8]]]],[11,R[64],E,E,60,[[["self"]],[T]]],[11,R[63],E,E,60,[[["self"]],[R[65]]]],[11,R[61],E,E,60,[[["self"]],[T]]],[11,R[62],E,E,60,[[],[R[8]]]],[11,"from",R[83],E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[60],E,E,62,[[[U]],[R[8]]]],[11,R[64],E,E,62,[[["self"]],[T]]],[11,R[63],E,E,62,[[["self"]],[R[65]]]],[11,R[61],E,E,62,[[["self"]],[T]]],[11,R[62],E,E,62,[[],[R[8]]]],[11,"from",R[84],E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[60],E,E,63,[[[U]],[R[8]]]],[11,R[64],E,E,63,[[["self"]],[T]]],[11,R[63],E,E,63,[[["self"]],[R[65]]]],[11,R[61],E,E,63,[[["self"]],[T]]],[11,R[62],E,E,63,[[],[R[8]]]],[11,"from",R[85],E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[60],E,E,64,[[[U]],[R[8]]]],[11,R[64],E,E,64,[[["self"]],[T]]],[11,R[63],E,E,64,[[["self"]],[R[65]]]],[11,R[61],E,E,64,[[["self"]],[T]]],[11,R[62],E,E,64,[[],[R[8]]]],[11,"from",R[86],E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[60],E,E,65,[[[U]],[R[8]]]],[11,R[64],E,E,65,[[["self"]],[T]]],[11,R[63],E,E,65,[[["self"]],[R[65]]]],[11,R[61],E,E,65,[[["self"]],[T]]],[11,R[62],E,E,65,[[],[R[8]]]],[11,"from",R[87],E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[60],E,E,66,[[[U]],[R[8]]]],[11,R[64],E,E,66,[[["self"]],[T]]],[11,R[63],E,E,66,[[["self"]],[R[65]]]],[11,R[61],E,E,66,[[["self"]],[T]]],[11,R[62],E,E,66,[[],[R[8]]]],[11,"from",R[88],E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[60],E,E,68,[[[U]],[R[8]]]],[11,R[64],E,E,68,[[["self"]],[T]]],[11,R[63],E,E,68,[[["self"]],[R[65]]]],[11,R[61],E,E,68,[[["self"]],[T]]],[11,R[62],E,E,68,[[],[R[8]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[58],E,E,67,[[["self"]],[T]]],[11,R[59],E,E,67,[[[T],["self"]]]],[11,R[60],E,E,67,[[[U]],[R[8]]]],[11,R[64],E,E,67,[[["self"]],[T]]],[11,R[63],E,E,67,[[["self"]],[R[65]]]],[11,R[61],E,E,67,[[["self"]],[T]]],[11,R[62],E,E,67,[[],[R[8]]]],[11,"from",R[89],E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[58],E,E,69,[[["self"]],[T]]],[11,R[59],E,E,69,[[[T],["self"]]]],[11,R[60],E,E,69,[[[U]],[R[8]]]],[11,R[64],E,E,69,[[["self"]],[T]]],[11,R[63],E,E,69,[[["self"]],[R[65]]]],[11,R[61],E,E,69,[[["self"]],[T]]],[11,R[62],E,E,69,[[],[R[8]]]],[11,"from",R[90],E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[58],E,E,70,[[["self"]],[T]]],[11,R[59],E,E,70,[[[T],["self"]]]],[11,R[60],E,E,70,[[[U]],[R[8]]]],[11,R[64],E,E,70,[[["self"]],[T]]],[11,R[63],E,E,70,[[["self"]],[R[65]]]],[11,R[61],E,E,70,[[["self"]],[T]]],[11,R[62],E,E,70,[[],[R[8]]]],[11,"from",R[91],E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[58],E,E,71,[[["self"]],[T]]],[11,R[59],E,E,71,[[[T],["self"]]]],[11,R[60],E,E,71,[[[U]],[R[8]]]],[11,R[64],E,E,71,[[["self"]],[T]]],[11,R[63],E,E,71,[[["self"]],[R[65]]]],[11,R[61],E,E,71,[[["self"]],[T]]],[11,R[62],E,E,71,[[],[R[8]]]],[11,"from",R[92],E,72,[[[T]],[T]]],[11,"into",E,E,72,[[],[U]]],[11,R[60],E,E,72,[[[U]],[R[8]]]],[11,R[64],E,E,72,[[["self"]],[T]]],[11,R[63],E,E,72,[[["self"]],[R[65]]]],[11,R[61],E,E,72,[[["self"]],[T]]],[11,R[62],E,E,72,[[],[R[8]]]],[11,"fmt",R[2],E,38,[[[R[93]],["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,"fmt",E,E,11,[[[R[93]],["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,"fmt",E,E,22,[[[R[93]],["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,"fmt",E,E,10,[[[R[93]],["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,"fmt",E,E,80,[[[R[93]],["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,"fmt",E,E,77,[[[R[93]],["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,"fmt",E,E,13,[[[R[93]],["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,"fmt",E,E,34,[[[R[93]],["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,"fmt",E,E,12,[[[R[93]],["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,"fmt",E,E,76,[[[R[93]],["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,"fmt",E,E,74,[[[R[93]],["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,"fmt",E,E,28,[[[R[93]],["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,"fmt",E,E,81,[[[R[93]],["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,"hash",E,E,12,[[["self"],["__h"]]]],[11,"hash",E,E,28,[[["self"],["__h"]]]],[11,"hash",E,E,11,[[["self"],["__h"]]]],[11,"hash",E,E,80,[[["self"],["__h"]]]],[11,"hash",E,E,81,[[["self"],["__h"]]]],[11,"hash",E,E,76,[[["__htuhj"],["self"]]]],[11,R[94],E,E,10,[[["__s"],["self"]],[R[8]]]],[11,R[94],E,E,24,[[["__s"],["self"]],[R[8]]]],[11,R[94],E,E,22,[[["__s"],["self"]],[R[8]]]],[11,R[94],E,E,12,[[["__s"],["self"]],[R[8]]]],[11,R[94],E,E,80,[[["__s"],["self"]],[R[8]]]],[11,R[94],E,E,11,[[["__s"],["self"]],[R[8]]]],[11,R[94],E,E,81,[[["__s"],["self"]],[R[8]]]],[11,R[94],E,E,28,[[["__s"],["self"]],[R[8]]]],[11,R[94],E,E,77,[[["__s"],["self"]],[R[8]]]],[11,R[94],E,E,38,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[56],E,73,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[2],E,74,[[["__s"],["self"]],[R[8]]]],[11,R[94],E,E,76,[[["__s"],["self"]],[R[8]]]],[11,R[94],E,E,34,[[["__s"],["self"]],[R[8]]]],[11,"extend",E,E,28,[[["self"],["i"]]]],[11,"clone",E,E,22,[[["self"]],[R[13]]]],[11,"clone",E,E,81,[[["self"]],[R[99]]]],[11,"clone",E,E,38,[[["self"]],[R[104]]]],[11,"clone",R[56],E,73,[[["self"]],[R[95]]]],[11,"clone",R[2],E,77,[[["self"]],[R[96]]]],[11,"clone",E,E,10,[[["self"]],[R[103]]]],[11,"clone",E,E,34,[[["self"]],[R[12]]]],[11,"clone",E,E,11,[[["self"]],[R[100]]]],[11,"clone",E,E,24,[[["self"]],[R[98]]]],[11,"clone",E,E,12,[[["self"]],[R[14]]]],[11,"clone",E,E,78,[[["self"]],[R[144]]]],[11,"clone",E,E,80,[[["self"]],[R[101]]]],[11,"clone",E,E,75,[[["self"]],[R[143]]]],[11,"clone",E,E,74,[[["self"]],[R[11]]]],[11,"clone",E,E,76,[[["self"]],[R[102]]]],[11,"clone",E,E,28,[[["self"]],[R[27]]]],[11,R[97],E,E,77,[[["__d"]],[[R[96]],[R[8],[R[96]]]]]],[11,R[97],E,E,24,[[["__d"]],[[R[8],[R[98]]],[R[98]]]]],[11,R[97],E,E,81,[[["__d"]],[[R[8],[R[99]]],[R[99]]]]],[11,R[97],E,E,22,[[["__d"]],[[R[8],[R[13]]],[R[13]]]]],[11,R[97],E,E,11,[[["__d"]],[[R[100]],[R[8],[R[100]]]]]],[11,R[97],R[56],E,73,[[["__d"]],[[R[8],[R[95]]],[R[95]]]]],[11,R[97],R[2],E,28,[[["__d"]],[[R[27]],[R[8],[R[27]]]]]],[11,R[97],E,E,80,[[["__d"]],[[R[101]],[R[8],[R[101]]]]]],[11,R[97],E,E,34,[[["__d"]],[[R[8],[R[12]]],[R[12]]]]],[11,R[97],E,E,76,[[["__d"]],[[R[102]],[R[8],[R[102]]]]]],[11,R[97],E,E,10,[[["__d"]],[[R[8],[R[103]]],[R[103]]]]],[11,R[97],E,E,12,[[["__d"]],[[R[8],[R[14]]],[R[14]]]]],[11,R[97],E,E,38,[[["__d"]],[[R[104]],[R[8],[R[104]]]]]],[11,"eq",E,E,11,[[[R[100]],["self"]],["bool"]]],[11,"ne",E,E,11,[[[R[100]],["self"]],["bool"]]],[11,"eq",E,E,10,[[[R[103]],["self"]],["bool"]]],[11,"eq",E,E,38,[[["self"],[R[104]]],["bool"]]],[11,"ne",E,E,38,[[["self"],[R[104]]],["bool"]]],[11,"eq",E,E,24,[[[R[98]],["self"]],["bool"]]],[11,"eq",E,E,76,[[["self"],[R[102]]],["bool"]]],[11,"ne",E,E,76,[[["self"],[R[102]]],["bool"]]],[11,"eq",E,E,80,[[[R[101]],["self"]],["bool"]]],[11,"ne",E,E,80,[[[R[101]],["self"]],["bool"]]],[11,"eq",E,E,28,[[["self"],[R[27]]],["bool"]]],[11,"ne",E,E,28,[[["self"],[R[27]]],["bool"]]],[11,"eq",E,E,81,[[[R[99]],["self"]],["bool"]]],[11,"eq",E,E,77,[[["self"],[R[96]]],["bool"]]],[11,"ne",E,E,77,[[["self"],[R[96]]],["bool"]]],[11,"eq",E,E,12,[[[R[14]],["self"]],["bool"]]],[11,R[94],E,E,8,[[["record"],["self"],[R[105]]],[[R[9]],[R[8],[R[9]]]]]],[11,R[94],E,E,34,[[["record"],["self"],[R[105]]],[[R[9]],[R[8],[R[9]]]]]],[11,R[106],E,"Log general info",75,[[["str"],["self"],[R[27]]],[[R[9]],[R[8],[R[9]]]]]],[11,R[107],E,"This should be used to log iteration data only (because…",75,[[[R[12]],["self"],[R[27]]],[[R[9]],[R[8],[R[9]]]]]],[11,R[106],E,"Initial observation This is called after the…",78,[[["str"],["self"],[R[27]]],[[R[9]],[R[8],[R[9]]]]]],[11,R[107],E,"This is called after every iteration and gets the current…",78,[[[R[12]],["self"],[R[27]]],[[R[9]],[R[8],[R[9]]]]]],[11,R[107],E,E,77,[[[R[12]],["self"],[R[27]]],[[R[9]],[R[8],[R[9]]]]]],[11,"cmp",E,E,81,[[[R[99]],["self"]],[R[108]]]],[11,"cmp",E,E,12,[[[R[14]],["self"]],[R[108]]]],[11,"cmp",E,E,11,[[[R[100]],["self"]],[R[108]]]],[11,"cmp",E,E,80,[[[R[101]],["self"]],[R[108]]]],[11,"cmp",E,E,24,[[[R[98]],["self"]],[R[108]]]],[11,"cmp",E,E,28,[[["self"],[R[27]]],[R[108]]]],[11,"cmp",E,E,10,[[[R[103]],["self"]],[R[108]]]],[11,"cmp",E,E,76,[[["self"],[R[102]]],[R[108]]]],[11,"cmp",E,E,77,[[["self"],[R[96]]],[R[108]]]],[11,"cmp",E,E,38,[[["self"],[R[104]]],[R[108]]]],[11,"apply",E,E,22,[[["self"]],[[R[8],[R[9]]],[R[9]]]]],[11,R[109],E,E,22,[[["self"]],[[R[8],[R[9]]],[R[9]]]]],[11,R[50],E,E,22,[[["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,R[31],E,E,22,[[["self"]],[[R[8],[R[9]]],[R[9]]]]],[11,"modify",E,E,22,[[["f64"],["self"]],[[R[8],[R[9]]],[R[9]]]]],[11,"apply",E,R[110],76,[[["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,R[109],E,R[110],76,[[["self"]],[[R[8],[R[9]]],[R[9]]]]],[11,R[50],E,R[110],76,[[["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,"modify",E,R[110],76,[[["f64"],["self"]],[[R[8],[R[9]]],[R[9]]]]],[11,"apply",E,R[110],81,[[["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,R[109],E,R[110],81,[[["self"]],[[R[8],[R[9]]],[R[9]]]]],[11,R[50],E,R[110],81,[[["self"]],[[R[8],[R[9]]],[R[9]]]]],[11,"modify",E,R[110],81,[[["f64"],["self"]],[[R[8],[R[9]]],[R[9]]]]],[11,"from_iter",E,E,28,[[["i"]],[R[27]]]],[11,R[111],E,E,11,[[[R[100]],["self"]],[[R[108]],["option",[R[108]]]]]],[11,"lt",E,E,11,[[[R[100]],["self"]],["bool"]]],[11,"le",E,E,11,[[[R[100]],["self"]],["bool"]]],[11,"gt",E,E,11,[[[R[100]],["self"]],["bool"]]],[11,"ge",E,E,11,[[[R[100]],["self"]],["bool"]]],[11,R[111],E,E,77,[[["self"],[R[96]]],[[R[108]],["option",[R[108]]]]]],[11,"lt",E,E,77,[[["self"],[R[96]]],["bool"]]],[11,"le",E,E,77,[[["self"],[R[96]]],["bool"]]],[11,"gt",E,E,77,[[["self"],[R[96]]],["bool"]]],[11,"ge",E,E,77,[[["self"],[R[96]]],["bool"]]],[11,R[111],E,E,76,[[["self"],[R[102]]],[[R[108]],["option",[R[108]]]]]],[11,"lt",E,E,76,[[["self"],[R[102]]],["bool"]]],[11,"le",E,E,76,[[["self"],[R[102]]],["bool"]]],[11,"gt",E,E,76,[[["self"],[R[102]]],["bool"]]],[11,"ge",E,E,76,[[["self"],[R[102]]],["bool"]]],[11,R[111],E,E,81,[[[R[99]],["self"]],[[R[108]],["option",[R[108]]]]]],[11,R[111],E,E,38,[[["self"],[R[104]]],[[R[108]],["option",[R[108]]]]]],[11,"lt",E,E,38,[[["self"],[R[104]]],["bool"]]],[11,"le",E,E,38,[[["self"],[R[104]]],["bool"]]],[11,"gt",E,E,38,[[["self"],[R[104]]],["bool"]]],[11,"ge",E,E,38,[[["self"],[R[104]]],["bool"]]],[11,R[111],E,E,12,[[[R[14]],["self"]],[[R[108]],["option",[R[108]]]]]],[11,R[111],E,E,28,[[["self"],[R[27]]],[[R[108]],["option",[R[108]]]]]],[11,"lt",E,E,28,[[["self"],[R[27]]],["bool"]]],[11,"le",E,E,28,[[["self"],[R[27]]],["bool"]]],[11,"gt",E,E,28,[[["self"],[R[27]]],["bool"]]],[11,"ge",E,E,28,[[["self"],[R[27]]],["bool"]]],[11,R[111],E,E,80,[[[R[101]],["self"]],[[R[108]],["option",[R[108]]]]]],[11,"lt",E,E,80,[[[R[101]],["self"]],["bool"]]],[11,"le",E,E,80,[[[R[101]],["self"]],["bool"]]],[11,"gt",E,E,80,[[[R[101]],["self"]],["bool"]]],[11,"ge",E,E,80,[[[R[101]],["self"]],["bool"]]],[11,R[111],E,E,10,[[[R[103]],["self"]],[[R[108]],["option",[R[108]]]]]],[11,R[111],E,E,24,[[[R[98]],["self"]],[[R[108]],["option",[R[108]]]]]],[11,"from",E,E,8,[[[R[27]]],["argminslogkv"]]],[11,R[112],E,E,80,[[],[R[101]]]],[11,R[112],E,E,34,[[],[R[12]]]],[11,R[112],E,E,78,[[],[R[144]]]],[11,R[112],E,E,12,[[],[R[14]]]],[11,R[112],E,E,11,[[],[R[100]]]],[11,R[112],E,E,28,[[],[R[27]]]],[11,R[112],E,E,81,[[],[R[99]]]],[11,R[112],E,E,10,[[],[R[103]]]],[11,R[112],E,"The default is `Always`",38,[[],[R[104]]]],[11,R[112],E,E,74,[[],[R[11]]]],[11,R[112],E,E,76,[[],[R[102]]]],[11,"fmt",E,E,12,[[[R[93]],["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,"fmt",E,E,24,[[[R[93]],["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,"fmt",E,E,13,[[[R[93]],["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,"fmt",E,E,11,[[[R[93]],["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,"fmt",E,E,81,[[[R[93]],["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,"fmt",E,E,76,[[[R[93]],["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,"fmt",E,E,28,[[[R[93]],["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,"name",E,E,13,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause",E,E,13,[[["self"]],[["option",["fail"]],["fail"]]]],[11,R[113],E,E,13,[[["self"]],[["option",[R[113]]],[R[113]]]]],[11,"fmt",E,E,79,[[[R[93]],["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,"as_fail",E,E,79,[[["self"]],["fail"]]],[11,"as_ref",E,E,79,[[["self"]],["fail"]]],[11,"from",E,E,79,[[["f"]],[R[9]]]],[11,"fmt",E,E,79,[[[R[93]],["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,"clone",R[57],E,1,[[["self"]],[R[114]]]],[11,R[112],E,E,1,[[],[R[114]]]],[11,"eval",R[76],E,51,[[["f64"],["self"],[T]],["bool"]]],[11,R[115],E,E,51,[[["self"]],["bool"]]],[11,"eval",E,E,52,[[["f64"],["self"],[T]],["bool"]]],[11,R[115],E,E,52,[[["self"]],["bool"]]],[11,"eval",E,E,53,[[["f64"],["self"],[T]],["bool"]]],[11,R[115],E,E,53,[[["self"]],["bool"]]],[11,"eval",E,E,54,[[["f64"],["self"],[T]],["bool"]]],[11,R[115],E,E,54,[[["self"]],["bool"]]],[11,"eq",R[70],E,41,[[[R[119]],["self"]],["bool"]]],[11,"eq",E,E,42,[[["self"],[R[120]]],["bool"]]],[11,"eq",E,E,43,[[[R[121]],["self"]],["bool"]]],[11,"eq",E,E,44,[[[R[122]],["self"]],["bool"]]],[11,"eq",R[89],E,69,[[["self"],[R[116]]],["bool"]]],[11,"ne",E,E,69,[[["self"],[R[116]]],["bool"]]],[11,"eq",R[90],E,70,[[["self"],["dogleg"]],["bool"]]],[11,"ne",E,E,70,[[["self"],["dogleg"]],["bool"]]],[11,"eq",R[91],E,71,[[[R[117]],["self"]],["bool"]]],[11,"ne",E,E,71,[[[R[117]],["self"]],["bool"]]],[11,"clone",R[68],E,39,[[["self"]],[R[118]]]],[11,"clone",R[70],E,41,[[["self"]],[R[119]]]],[11,"clone",E,E,42,[[["self"]],[R[120]]]],[11,"clone",E,E,43,[[["self"]],[R[121]]]],[11,"clone",E,E,44,[[["self"]],[R[122]]]],[11,"clone",R[74],E,48,[[["self"]],[R[123]]]],[11,"clone",R[75],E,49,[[["self"]],["backtrackinglinesearch"]]],[11,"clone",R[76],E,51,[[["self"]],[R[126]]]],[11,"clone",E,E,52,[[["self"]],[R[127]]]],[11,"clone",E,E,53,[[["self"]],[R[128]]]],[11,"clone",E,E,54,[[["self"]],[R[129]]]],[11,"clone",R[77],E,55,[[["self"]],["hagerzhanglinesearch"]]],[11,"clone",R[78],E,56,[[["self"]],["morethuentelinesearch"]]],[11,"clone",R[88],E,67,[[["self"]],[R[124]]]],[11,"clone",R[89],E,69,[[["self"]],[R[116]]]],[11,"clone",R[90],E,70,[[["self"]],["dogleg"]]],[11,"clone",R[91],E,71,[[["self"]],[R[117]]]],[11,"cmp",R[70],E,41,[[[R[119]],["self"]],[R[108]]]],[11,"cmp",E,E,42,[[["self"],[R[120]]],[R[108]]]],[11,"cmp",E,E,43,[[[R[121]],["self"]],[R[108]]]],[11,"cmp",E,E,44,[[[R[122]],["self"]],[R[108]]]],[11,R[111],E,E,41,[[[R[119]],["self"]],[[R[108]],["option",[R[108]]]]]],[11,R[111],E,E,42,[[["self"],[R[120]]],[[R[108]],["option",[R[108]]]]]],[11,R[111],E,E,43,[[[R[121]],["self"]],[[R[108]],["option",[R[108]]]]]],[11,R[111],E,E,44,[[[R[122]],["self"]],[[R[108]],["option",[R[108]]]]]],[11,R[111],R[89],E,69,[[["self"],[R[116]]],[[R[108]],["option",[R[108]]]]]],[11,"lt",E,E,69,[[["self"],[R[116]]],["bool"]]],[11,"le",E,E,69,[[["self"],[R[116]]],["bool"]]],[11,"gt",E,E,69,[[["self"],[R[116]]],["bool"]]],[11,"ge",E,E,69,[[["self"],[R[116]]],["bool"]]],[11,R[111],R[90],E,70,[[["self"],["dogleg"]],[[R[108]],["option",[R[108]]]]]],[11,"lt",E,E,70,[[["self"],["dogleg"]],["bool"]]],[11,"le",E,E,70,[[["self"],["dogleg"]],["bool"]]],[11,"gt",E,E,70,[[["self"],["dogleg"]],["bool"]]],[11,"ge",E,E,70,[[["self"],["dogleg"]],["bool"]]],[11,R[111],R[91],E,71,[[[R[117]],["self"]],[[R[108]],["option",[R[108]]]]]],[11,"lt",E,E,71,[[[R[117]],["self"]],["bool"]]],[11,"le",E,E,71,[[[R[117]],["self"]],["bool"]]],[11,"gt",E,E,71,[[[R[117]],["self"]],["bool"]]],[11,"ge",E,E,71,[[[R[117]],["self"]],["bool"]]],[11,R[112],R[70],E,41,[[],[R[119]]]],[11,R[112],E,E,42,[[],[R[120]]]],[11,R[112],E,E,43,[[],[R[121]]]],[11,R[112],E,E,44,[[],[R[122]]]],[11,R[112],R[72],E,46,[[],[R[125]]]],[11,R[112],R[76],E,51,[[],[R[126]]]],[11,R[112],E,E,52,[[],[R[127]]]],[11,R[112],E,E,53,[[],[R[128]]]],[11,R[112],E,E,54,[[],[R[129]]]],[11,R[112],R[77],E,55,[[],["self"]]],[11,R[112],R[78],E,56,[[],["self"]]],[11,R[112],R[79],E,57,[[],[R[130]]]],[11,R[112],R[81],E,59,[[],["newton"]]],[11,R[112],R[88],E,67,[[],["self"]]],[11,R[112],R[89],E,69,[[],[R[116]]]],[11,R[112],R[90],E,70,[[],["dogleg"]]],[11,R[112],R[91],E,71,[[],[R[117]]]],[11,"fmt",R[70],E,41,[[[R[93]],["self"]],[R[8]]]],[11,"fmt",E,E,42,[[[R[93]],["self"]],[R[8]]]],[11,"fmt",E,E,43,[[[R[93]],["self"]],[R[8]]]],[11,"fmt",E,E,44,[[[R[93]],["self"]],[R[8]]]],[11,"fmt",R[76],E,51,[[[R[93]],["self"]],[R[8]]]],[11,"fmt",E,E,52,[[[R[93]],["self"]],[R[8]]]],[11,"fmt",E,E,53,[[[R[93]],["self"]],[R[8]]]],[11,"fmt",E,E,54,[[[R[93]],["self"]],[R[8]]]],[11,"fmt",R[88],E,67,[[[R[93]],["self"]],[R[8]]]],[11,"fmt",R[89],E,69,[[[R[93]],["self"]],[R[8]]]],[11,"fmt",R[90],E,70,[[[R[93]],["self"]],[R[8]]]],[11,"fmt",R[91],E,71,[[[R[93]],["self"]],[R[8]]]],[11,"hash",R[70],E,41,[[["self"],["__h"]]]],[11,"hash",E,E,42,[[["self"],["__h"]]]],[11,"hash",E,E,43,[[["self"],["__h"]]]],[11,"hash",E,E,44,[[["self"],["__h"]]]],[11,"init",R[68],E,39,[[["self"],[R[13]],[R[12]]],[[R[9]],[R[8],["option",R[9]]],["option",[R[11]]]]]],[11,R[131],E,R[133],39,[[["self"],[R[13]],[R[12]]],[[R[11]],[R[9]],[R[8],[R[11],R[9]]]]]],[11,"init",R[69],E,40,[[["self"],[R[13]],[R[12]]],[[R[9]],[R[8],["option",R[9]]],["option",[R[11]]]]]],[11,R[131],E,E,40,[[["self"],[R[13]],[R[12]]],[[R[11]],[R[9]],[R[8],[R[11],R[9]]]]]],[11,R[131],R[71],E,45,[[["self"],[R[13]],[R[12]]],[[R[11]],[R[9]],[R[8],[R[11],R[9]]]]]],[11,R[132],E,E,45,[[["self"],[R[12]]],[R[14]]]],[11,R[131],R[72],E,46,[[["self"],[R[13]],[R[12]]],[[R[11]],[R[9]],[R[8],[R[11],R[9]]]]]],[11,R[132],E,E,46,[[["self"],[R[12]]],[R[14]]]],[11,R[131],R[73],E,47,[[["self"],[R[13]],[R[12]]],[[R[11]],[R[9]],[R[8],[R[11],R[9]]]]]],[11,R[131],R[74],E,48,[[["self"],[R[13]],[R[12]]],[[R[11]],[R[9]],[R[8],[R[11],R[9]]]]]],[11,"init",R[75],E,49,[[["self"],[R[13]],[R[12]]],[[R[9]],[R[8],["option",R[9]]],["option",[R[11]]]]]],[11,R[131],E,E,49,[[["self"],[R[13]],[R[12]]],[[R[11]],[R[9]],[R[8],[R[11],R[9]]]]]],[11,R[132],E,E,49,[[["self"],[R[12]]],[R[14]]]],[11,"init",R[77],E,55,[[["self"],[R[13]],[R[12]]],[[R[9]],[R[8],["option",R[9]]],["option",[R[11]]]]]],[11,R[131],E,E,55,[[["self"],[R[13]],[R[12]]],[[R[11]],[R[9]],[R[8],[R[11],R[9]]]]]],[11,R[132],E,E,55,[[["self"],[R[12]]],[R[14]]]],[11,"init",R[78],E,56,[[["self"],[R[13]],[R[12]]],[[R[9]],[R[8],["option",R[9]]],["option",[R[11]]]]]],[11,R[131],E,E,56,[[["self"],[R[13]],[R[12]]],[[R[11]],[R[9]],[R[8],[R[11],R[9]]]]]],[11,"init",R[79],E,57,[[["self"],[R[13]],[R[12]]],[[R[9]],[R[8],["option",R[9]]],["option",[R[11]]]]]],[11,R[131],E,E,57,[[["self"],[R[13]],[R[12]]],[[R[11]],[R[9]],[R[8],[R[11],R[9]]]]]],[11,R[132],E,E,57,[[["self"],[R[12]]],[R[14]]]],[11,R[131],R[80],E,58,[[["self"],[R[13]],[R[12]]],[[R[11]],[R[9]],[R[8],[R[11],R[9]]]]]],[11,R[132],E,E,58,[[["self"],[R[12]]],[R[14]]]],[11,R[131],R[81],E,59,[[["self"],[R[13]],[R[12]]],[[R[11]],[R[9]],[R[8],[R[11],R[9]]]]]],[11,"init",R[82],E,61,[[["self"],[R[13]],[R[12]]],[[R[9]],[R[8],["option",R[9]]],["option",[R[11]]]]]],[11,R[131],E,"Perform one iteration of algorithm",61,[[["self"],[R[13]],[R[12]]],[[R[11]],[R[9]],[R[8],[R[11],R[9]]]]]],[11,"init",R[83],E,62,[[["self"],[R[13]],[R[12]]],[[R[9]],[R[8],["option",R[9]]],["option",[R[11]]]]]],[11,R[131],E,E,62,[[["self"],[R[13]],[R[12]]],[[R[11]],[R[9]],[R[8],[R[11],R[9]]]]]],[11,R[132],E,E,62,[[["self"],[R[12]]],[R[14]]]],[11,"init",R[84],E,63,[[["self"],[R[13]],[R[12]]],[[R[9]],[R[8],["option",R[9]]],["option",[R[11]]]]]],[11,R[131],E,E,63,[[["self"],[R[13]],[R[12]]],[[R[11]],[R[9]],[R[8],[R[11],R[9]]]]]],[11,R[132],E,E,63,[[["self"],[R[12]]],[R[14]]]],[11,"init",R[85],E,64,[[["self"],[R[13]],[R[12]]],[[R[9]],[R[8],["option",R[9]]],["option",[R[11]]]]]],[11,R[131],E,E,64,[[["self"],[R[13]],[R[12]]],[[R[11]],[R[9]],[R[8],[R[11],R[9]]]]]],[11,R[132],E,E,64,[[["self"],[R[12]]],[R[14]]]],[11,"init",R[86],E,65,[[["self"],[R[13]],[R[12]]],[[R[9]],[R[8],["option",R[9]]],["option",[R[11]]]]]],[11,R[131],E,E,65,[[["self"],[R[13]],[R[12]]],[[R[11]],[R[9]],[R[8],[R[11],R[9]]]]]],[11,R[132],E,E,65,[[["self"],[R[12]]],[R[14]]]],[11,"init",R[87],E,66,[[["self"],[R[13]],[R[12]]],[[R[9]],[R[8],["option",R[9]]],["option",[R[11]]]]]],[11,R[131],E,E,66,[[["self"],[R[13]],[R[12]]],[[R[11]],[R[9]],[R[8],[R[11],R[9]]]]]],[11,R[132],E,E,66,[[["self"],[R[12]]],[R[14]]]],[11,"init",R[88],E,68,[[["self"],[R[13]],[R[12]]],[[R[9]],[R[8],["option",R[9]]],["option",[R[11]]]]]],[11,R[131],E,R[133],68,[[["self"],[R[13]],[R[12]]],[[R[11]],[R[9]],[R[8],[R[11],R[9]]]]]],[11,R[132],E,E,68,[[["self"],[R[12]]],[R[14]]]],[11,R[131],R[89],E,69,[[["self"],[R[13]],[R[12]]],[[R[11]],[R[9]],[R[8],[R[11],R[9]]]]]],[11,R[132],E,E,69,[[["self"],[R[12]]],[R[14]]]],[11,R[131],R[90],E,70,[[["self"],[R[13]],[R[12]]],[[R[11]],[R[9]],[R[8],[R[11],R[9]]]]]],[11,R[132],E,E,70,[[["self"],[R[12]]],[R[14]]]],[11,"init",R[91],E,71,[[["self"],[R[13]],[R[12]]],[[R[9]],[R[8],["option",R[9]]],["option",[R[11]]]]]],[11,R[131],E,E,71,[[["self"],[R[13]],[R[12]]],[[R[11]],[R[9]],[R[8],[R[11],R[9]]]]]],[11,R[132],E,E,71,[[["self"],[R[12]]],[R[14]]]],[11,"init",R[92],E,72,[[["self"],[R[13]],[R[12]]],[[R[9]],[R[8],["option",R[9]]],["option",[R[11]]]]]],[11,R[131],E,E,72,[[["self"],[R[13]],[R[12]]],[[R[11]],[R[9]],[R[8],[R[11],R[9]]]]]],[11,R[132],E,E,72,[[["self"],[R[12]]],[R[14]]]],[11,R[94],R[68],E,39,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[69],E,40,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[70],E,41,[[["__s"],["self"]],[R[8]]]],[11,R[94],E,E,42,[[["__s"],["self"]],[R[8]]]],[11,R[94],E,E,43,[[["__s"],["self"]],[R[8]]]],[11,R[94],E,E,44,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[71],E,45,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[72],E,46,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[73],E,47,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[74],E,48,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[75],E,49,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[76],E,51,[[["__s"],["self"]],[R[8]]]],[11,R[94],E,E,52,[[["__s"],["self"]],[R[8]]]],[11,R[94],E,E,53,[[["__s"],["self"]],[R[8]]]],[11,R[94],E,E,54,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[77],E,55,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[78],E,56,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[79],E,57,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[80],E,58,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[81],E,59,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[82],E,61,[[["__s"],["self"]],[R[8]]]],[11,R[94],E,E,60,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[83],E,62,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[84],E,63,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[85],E,64,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[86],E,65,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[87],E,66,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[88],E,67,[[["__s"],["self"]],[R[8]]]],[11,R[94],E,E,68,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[89],E,69,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[90],E,70,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[91],E,71,[[["__s"],["self"]],[R[8]]]],[11,R[94],R[92],E,72,[[["__s"],["self"]],[R[8]]]],[11,R[97],R[68],E,39,[[["__d"]],[R[8]]]],[11,R[97],R[69],E,40,[[["__d"]],[R[8]]]],[11,R[97],R[70],E,41,[[["__d"]],[R[8]]]],[11,R[97],E,E,42,[[["__d"]],[R[8]]]],[11,R[97],E,E,43,[[["__d"]],[R[8]]]],[11,R[97],E,E,44,[[["__d"]],[R[8]]]],[11,R[97],R[71],E,45,[[["__d"]],[R[8]]]],[11,R[97],R[72],E,46,[[["__d"]],[R[8]]]],[11,R[97],R[73],E,47,[[["__d"]],[R[8]]]],[11,R[97],R[74],E,48,[[["__d"]],[R[8]]]],[11,R[97],R[75],E,49,[[["__d"]],[R[8]]]],[11,R[97],R[76],E,51,[[["__d"]],[R[8]]]],[11,R[97],E,E,52,[[["__d"]],[R[8]]]],[11,R[97],E,E,53,[[["__d"]],[R[8]]]],[11,R[97],E,E,54,[[["__d"]],[R[8]]]],[11,R[97],R[77],E,55,[[["__d"]],[R[8]]]],[11,R[97],R[78],E,56,[[["__d"]],[R[8]]]],[11,R[97],R[79],E,57,[[["__d"]],[R[8]]]],[11,R[97],R[80],E,58,[[["__d"]],[R[8]]]],[11,R[97],R[81],E,59,[[["__d"]],[R[8]]]],[11,R[97],R[82],E,61,[[["__d"]],[R[8]]]],[11,R[97],E,E,60,[[["__d"]],[R[8]]]],[11,R[97],R[83],E,62,[[["__d"]],[R[8]]]],[11,R[97],R[84],E,63,[[["__d"]],[R[8]]]],[11,R[97],R[85],E,64,[[["__d"]],[R[8]]]],[11,R[97],R[86],E,65,[[["__d"]],[R[8]]]],[11,R[97],R[87],E,66,[[["__d"]],[R[8]]]],[11,R[97],R[88],E,67,[[["__d"]],[R[8]]]],[11,R[97],E,E,68,[[["__d"]],[R[8]]]],[11,R[97],R[89],E,69,[[["__d"]],[R[8]]]],[11,R[97],R[90],E,70,[[["__d"]],[R[8]]]],[11,R[97],R[91],E,71,[[["__d"]],[R[8]]]],[11,R[97],R[92],E,72,[[["__d"]],[R[8]]]],[11,R[134],R[75],R[136],49,[[["self"],["p"]]]],[11,R[135],E,R[137],49,[[["self"],["f64"]],[[R[9]],[R[8],[R[9]]]]]],[11,R[134],R[77],R[136],55,[[["self"],["p"]]]],[11,R[135],E,R[137],55,[[["self"],["f64"]],[[R[9]],[R[8],[R[9]]]]]],[11,R[134],R[78],R[136],56,[[["self"],["p"]]]],[11,R[135],E,R[137],56,[[["self"],["f64"]],[[R[9]],[R[8],[R[9]]]]]],[11,R[138],R[89],E,69,[[["self"],["f64"]]]],[11,R[138],R[90],E,70,[[["self"],["f64"]]]],[11,R[138],R[91],E,71,[[["self"],["f64"]]]],[11,"update",R[70],E,41,[[[T],["self"]],["f64"]]],[11,"update",E,E,42,[[[T],["self"]],["f64"]]],[11,"update",E,E,43,[[[T],["self"]],["f64"]]],[11,"update",E,E,44,[[[T],["self"]],["f64"]]],[11,"new",R[56],E,73,[[["o"],["s"]],[R[95]]]],[11,"from_checkpoint",E,E,73,[[["p"]],[[R[8],[R[95],R[9]]],[R[95]],[R[9]]]]],[11,"run",E,E,73,[[],[[R[8],[R[98],R[9]]],[R[9]],[R[98]]]]],[11,"add_observer",E,"Attaches a observer which implements `ArgminLog` to the…",73,[[[R[104]],["obs"]],[R[95]]]],[11,R[52],E,"Set maximum number of iterations",73,[[["u64"]],[R[95]]]],[11,R[139],E,"Set target cost value",73,[[["f64"]],[R[95]]]],[11,"cost",E,"Set cost value",73,[[["f64"]],[R[95]]]],[11,"grad",E,"Set Gradient",73,[[],[R[95]]]],[11,R[50],E,R[140],73,[[],[R[95]]]],[11,R[31],E,R[141],73,[[],[R[95]]]],[11,"checkpoint_dir",E,"Set checkpoint directory",73,[[["str"]],[R[95]]]],[11,"checkpoint_name",E,"Set checkpoint name",73,[[["str"]],[R[95]]]],[11,"checkpoint_mode",E,E,73,[[[R[100]]],[R[95]]]],[11,"ctrlc",E,"Turn Ctrl-C handling on or off (default: on)",73,[[["bool"]],[R[95]]]],[11,"new",R[57],"Create a new empty `PerturbationVector`",1,[[],[R[114]]]],[11,"add",E,"Add an index `x_idx` and the corresponding function…",1,[[["vec",["usize"]],["usize"]],[R[114]]]],[11,"new",R[2],R[39],74,[[],[R[11]]]],[11,"param",E,"Set parameter vector",74,[[],[R[11]]]],[11,"cost",E,"Set cost function value",74,[[["f64"]],[R[11]]]],[11,"grad",E,"Set gradient",74,[[],[R[11]]]],[11,R[50],E,R[140],74,[[],[R[11]]]],[11,R[31],E,R[141],74,[[],[R[11]]]],[11,"kv",E,"Adds an `ArgminKV`",74,[[[R[27]]],[R[11]]]],[11,R[142],E,"Set termination reason",74,[[[R[14]]],[R[11]]]],[11,R[149],E,"Get parameter vector",74,[[["self"]],["option"]]],[11,"get_cost",E,"Get cost function value",74,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"get_grad",E,"Get gradient",74,[[["self"]],["option"]]],[11,R[151],E,"Get Hessian",74,[[["self"]],["option"]]],[11,R[152],E,"Get Jacobian",74,[[["self"]],["option"]]],[11,R[150],E,"Get termination reason",74,[[["self"]],[["option",[R[14]]],[R[14]]]]],[11,"get_kv",E,"Return KV",74,[[["self"]],[R[27]]]],[11,"term",E,"Log to the terminal in a blocking way",75,[[],[R[143]]]],[11,"term_noblock",E,"Log to the terminal in a non-blocking way (in case of…",75,[[],[R[143]]]],[11,"file",E,"Log JSON to a file in a blocking way",75,[[["str"]],[[R[143]],[R[9]],[R[8],[R[143],R[9]]]]]],[11,"file_noblock",E,"Log JSON to a file in a non-blocking way (in case of…",75,[[["str"]],[[R[143]],[R[9]],[R[8],[R[143],R[9]]]]]],[11,R[153],E,"Returns `true` if a solver terminated and `false` otherwise",12,[[],["bool"]]],[11,"text",E,"Returns a texual representation of what happened",12,[[["self"]],["str"]]],[11,"new",R[22],E,17,[[["e"],["l"],["p"]],[R[19]]]],[11,"new",R[2],R[39],76,[[],[R[102]]]],[11,"new",E,R[39],22,[[["o"]],[R[13]]]],[11,"new_move",E,"Constructor (moves op)",22,[[["o"]],[R[13]]]],[11,"apply",E,"Calls the `apply` method of `op` and increments…",22,[[["self"]],[[R[8],[R[9]]],[R[9]]]]],[11,R[109],E,"Calls the `gradient` method of `op` and increments…",22,[[["self"]],[[R[8],[R[9]]],[R[9]]]]],[11,R[50],E,"Calls the `hessian` method of `op` and increments…",22,[[["self"]],[[R[8],[R[9]]],[R[9]]]]],[11,R[31],E,"Calls the `jacobian` method of `op` and increments…",22,[[["self"]],[[R[8],[R[9]]],[R[9]]]]],[11,"modify",E,"Calls the `modify` method of `op` and increments…",22,[[["self"],["f64"]],[[R[8],[R[9]]],[R[9]]]]],[11,"consume_op",E,"Consumes an operator by increasing the function call…",22,[[[R[13]],["self"]]]],[11,"reset",E,"Reset the cost function counts to zero",22,[[],[R[13]]]],[11,"get_op",E,"Returns the operator `op` by taking ownership of `self`.",22,[[],["o"]]],[11,"clone_op",E,"Returns a clone of the operator `op`.",22,[[["self"]],["o"]]],[11,"new_from_op",E,"Creates a new `OpWrapper<O>` from another `OpWrapper<O>`…",22,[[[R[13]]],[R[13]]]],[11,"new",E,R[39],24,[[["o"],[R[12]]],[R[98]]]],[11,"new",E,E,77,[[["str"]],[R[96]]]],[11,R[105],E,E,77,[[[R[103]]],[R[96]]]],[11,"new",E,R[39],78,[[],[R[144]]]],[11,"push",E,"Push another `Observe` to the `observer` field",78,[[[R[104]],["obs"],["self"]],[R[144]]]],[11,"new",E,R[39],28,[[],[R[27]]]],[11,"push",E,"Push a key-value pair to the `kv` vector.",28,[[["self"],[T],["str"]],[R[27]]]],[11,"merge",E,"Merge another `kv` into `self.kv`",28,[[[R[27]]],[R[27]]]],[11,"from_boxed_compat",E,"Creates an `Error` from `Box<std::error::Error>`.",79,[[[R[9]],["box",[R[9]]]],[R[9]]]],[11,"as_fail",E,"Return a reference to the underlying failure that this…",79,[[["self"]],["fail"]]],[11,"name",E,"Returns the name of the underlying fail.",79,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause",E,"Returns a reference to the underlying cause of this…",79,[[["self"]],["fail"]]],[11,R[113],E,"Gets a reference to the `Backtrace` for this `Error`.",79,[[["self"]],[R[113]]]],[11,"context",E,"Provides context for this `Error`.",79,[[["d"]],["context"]]],[11,"compat",E,"Wraps `Error` in a compatibility type.",79,[[],[["compat",[R[9]]],[R[9]]]]],[11,"downcast",E,R[145],79,[[],[[R[9]],[R[8],[R[9]]]]]],[11,"find_root_cause",E,"Returns the \"root cause\" of this error - the last value in…",79,[[["self"]],["fail"]]],[11,"iter_causes",E,"Returns a iterator over the causes of this error with the…",79,[[["self"]],["causes"]]],[11,"iter_chain",E,"Returns a iterator over all fails up the chain from the…",79,[[["self"]],["causes"]]],[11,"downcast_ref",E,R[145],79,[[["self"]],[[T],["option"]]]],[11,"downcast_mut",E,R[145],79,[[["self"]],[["option"],[T]]]],[11,"root_cause",E,"Deprecated alias to `find_root_cause`.",79,[[["self"]],["fail"]]],[11,"causes",E,"Deprecated alias to `iter_causes`.",79,[[["self"]],["causes"]]],[11,"new",E,E,80,[[["str"],[R[100]]],[[R[101]],[R[8],[R[101],R[9]]],[R[9]]]]],[11,"set_dir",E,E,80,[[["str"],["self"]]]],[11,"dir",E,E,80,[[["self"]],[R[67]]]],[11,"set_name",E,E,80,[[["str"],["self"]]]],[11,"name",E,E,80,[[["self"]],[R[67]]]],[11,"set_mode",E,E,80,[[["self"],[R[100]]]]],[11,"store",E,E,80,[[[R[67]],[T],["self"]],[[R[9]],[R[8],[R[9]]]]]],[11,"store_cond",E,E,80,[[[T],["self"],["u64"]],[[R[9]],[R[8],[R[9]]]]]],[11,"new",E,R[39],81,[[],[R[99]]]],[11,"new",E,"Create new IterState from `param`",34,[[],[R[12]]]],[11,"param",E,"Set parameter vector. This shifts the stored parameter…",34,[[["self"]],[R[12]]]],[11,R[146],E,"Set best paramater vector. This shifts the stored best…",34,[[["self"]],[R[12]]]],[11,"cost",E,"Set the current cost function value. This shifts the…",34,[[["self"],["f64"]],[R[12]]]],[11,R[147],E,"Set the current best cost function value. This shifts the…",34,[[["self"],["f64"]],[R[12]]]],[11,"grad",E,"Set gradient. This shifts the stored gradient to the…",34,[[["self"]],[R[12]]]],[11,R[50],E,"Set Hessian. This shifts the stored Hessian to the…",34,[[["self"]],[R[12]]]],[11,R[31],E,"Set Jacobian. This shifts the stored Jacobian to the…",34,[[["self"]],[R[12]]]],[11,R[139],E,E,34,[[["self"],["f64"]],[R[12]]]],[11,R[52],E,E,34,[[["self"],["u64"]],[R[12]]]],[11,R[148],E,E,34,[[["self"],["u64"]],[R[12]]]],[11,R[142],E,E,34,[[["self"],[R[14]]],[R[12]]]],[11,"time",E,E,34,[[["duration"],["self"]],[R[12]]]],[11,R[149],E,E,34,[[["self"]]]],[11,"get_prev_param",E,E,34,[[["self"]]]],[11,"get_best_param",E,E,34,[[["self"]]]],[11,"get_prev_best_param",E,E,34,[[["self"]]]],[11,"get_cost",E,E,34,[[["self"]],["f64"]]],[11,"get_prev_cost",E,E,34,[[["self"]],["f64"]]],[11,"get_best_cost",E,E,34,[[["self"]],["f64"]]],[11,"get_prev_best_cost",E,E,34,[[["self"]],["f64"]]],[11,"get_target_cost",E,E,34,[[["self"]],["f64"]]],[11,"get_cost_func_count",E,E,34,[[["self"]],["u64"]]],[11,"get_grad_func_count",E,E,34,[[["self"]],["u64"]]],[11,"get_hessian_func_count",E,E,34,[[["self"]],["u64"]]],[11,"get_jacobian_func_count",E,E,34,[[["self"]],["u64"]]],[11,"get_modify_func_count",E,E,34,[[["self"]],["u64"]]],[11,"get_last_best_iter",E,E,34,[[["self"]],["u64"]]],[11,R[150],E,E,34,[[["self"]],[R[14]]]],[11,"get_time",E,E,34,[[["self"]],["duration"]]],[11,"get_grad",E,E,34,[[["self"]],["option"]]],[11,"get_prev_grad",E,E,34,[[["self"]],["option"]]],[11,R[151],E,E,34,[[["self"]],["option"]]],[11,"get_prev_hessian",E,E,34,[[["self"]],["option"]]],[11,R[152],E,E,34,[[["self"]],["option"]]],[11,"get_prev_jacobian",E,E,34,[[["self"]],["option"]]],[11,"get_iter",E,E,34,[[["self"]],["u64"]]],[11,"get_max_iters",E,E,34,[[["self"]],["u64"]]],[11,"increment_iter",E,"Increment the number of iterations by one",34,[[["self"]]]],[11,"increment_func_counts",E,"Increment all function evaluation counts by the evaluation…",34,[[[R[13]],["self"]]]],[11,"set_func_counts",E,"Set all function evaluation counts to the evaluation…",34,[[[R[13]],["self"]]]],[11,"increment_cost_func_count",E,"Increment cost function evaluation count by `num`",34,[[["self"],["u64"]]]],[11,"increment_grad_func_count",E,"Increment gradient function evaluation count by `num`",34,[[["self"],["u64"]]]],[11,"increment_hessian_func_count",E,"Increment Hessian function evaluation count by `num`",34,[[["self"],["u64"]]]],[11,"increment_jacobian_func_count",E,"Increment Jacobian function evaluation count by `num`",34,[[["self"],["u64"]]]],[11,"increment_modify_func_count",E,"Increment modify function evaluation count by `num`",34,[[["self"],["u64"]]]],[11,"new_best",E,"Indicate that a new best parameter vector was found",34,[[["self"]]]],[11,"is_best",E,"Returns whether the current parameter vector is also the…",34,[[["self"]],["bool"]]],[11,R[153],E,"Return whether the algorithm has terminated or not",34,[[["self"]],["bool"]]]],"p":[[8,R[154]],[3,R[155]],[8,"ArgminOp"],[8,"Solver"],[8,R[156]],[8,R[157]],[8,R[158]],[8,R[159]],[3,R[160]],[8,R[161]],[4,R[162]],[4,R[163]],[4,R[164]],[4,R[165]],[8,R[166]],[8,R[167]],[8,R[168]],[3,R[169]],[8,R[170]],[8,R[171]],[8,R[172]],[8,R[173]],[3,R[174]],[8,R[175]],[3,R[176]],[8,R[177]],[8,R[178]],[8,R[179]],[3,"ArgminKV"],[8,"Observe"],[8,R[180]],[8,R[181]],[8,R[182]],[8,R[183]],[3,R[184]],[8,R[185]],[8,R[186]],[8,R[187]],[4,R[188]],[3,R[189]],[3,R[190]],[3,R[191]],[3,R[192]],[3,R[193]],[3,R[194]],[3,R[195]],[3,R[196]],[3,R[197]],[3,R[198]],[3,R[199]],[8,R[200]],[3,R[201]],[3,R[202]],[3,R[203]],[3,R[204]],[3,R[205]],[3,R[206]],[3,R[207]],[3,"NewtonCG"],[3,"Newton"],[3,"Particle"],[3,R[208]],[3,"BFGS"],[3,"DFP"],[3,"LBFGS"],[3,"SR1"],[3,R[209]],[4,R[210]],[3,R[211]],[3,R[212]],[3,"Dogleg"],[3,"Steihaug"],[3,R[213]],[3,R[1]],[3,R[214]],[3,R[215]],[3,R[216]],[3,R[217]],[3,"Observer"],[3,"Error"],[3,R[218]],[3,R[219]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);