var searchIndex={};
searchIndex["argmin"] = {"doc":"A pure Rust optimization framework","i":[[0,"core","argmin","Core functionality Argmin Optimizaton toolbox core",null,null],[3,"Error","argmin::core","The `Error` type, a wrapper around a dynamic error type.",null,null],[3,"IterState","","Maintains the state from iteration to iteration of a solver",null,null],[12,"param","","Current parameter vector",0,null],[12,"prev_param","","Previous parameter vector",0,null],[12,"best_param","","Current best parameter vector",0,null],[12,"prev_best_param","","Previous best parameter vector",0,null],[12,"cost","","Current cost function value",0,null],[12,"prev_cost","","Previous cost function value",0,null],[12,"best_cost","","Current best cost function value",0,null],[12,"prev_best_cost","","Previous best cost function value",0,null],[12,"target_cost","","Target cost function value",0,null],[12,"grad","","Current gradient",0,null],[12,"prev_grad","","Previous gradient",0,null],[12,"hessian","","Current Hessian",0,null],[12,"prev_hessian","","Previous Hessian",0,null],[12,"jacobian","","Current Jacobian",0,null],[12,"prev_jacobian","","Previous Jacobian",0,null],[12,"population","","All members for population-based algorithms as (param,…",0,null],[12,"iter","","Current iteration",0,null],[12,"last_best_iter","","Iteration number of last best cost",0,null],[12,"max_iters","","Maximum number of iterations",0,null],[12,"cost_func_count","","Number of cost function evaluations so far",0,null],[12,"grad_func_count","","Number of gradient evaluations so far",0,null],[12,"hessian_func_count","","Number of Hessian evaluations so far",0,null],[12,"jacobian_func_count","","Number of Jacobian evaluations so far",0,null],[12,"modify_func_count","","Number of modify evaluations so far",0,null],[12,"time","","Time required so far",0,null],[12,"termination_reason","","Reason of termination",0,null],[3,"ArgminKV","","A simple key-value storage",null,null],[12,"kv","","The actual key value storage",1,null],[3,"NoOperator","","Fake Operators for testing No-op operator with free choice…",null,null],[3,"MinimalNoOperator","","Minimal No-op operator which does nothing, really.",null,null],[3,"WriteToFile","","Write parameter vectors to file",null,null],[3,"ArgminSlogLogger","","A logger based on `slog`",null,null],[3,"ArgminSlogKV","","This type is necessary in order to be able to implement…",null,null],[12,"kv","","Key value store",2,null],[3,"Visualizer3d","","Visualize iterations of a solver for cost functions of…",null,null],[3,"Surface","","Helper class for visualized surface",null,null],[3,"Observer","","Container for observers which acts just like a single…",null,null],[3,"OpWrapper","","This wraps an operator and keeps track of how often the…",null,null],[12,"cost_func_count","","Number of cost function evaluations",3,null],[12,"grad_func_count","","Number of gradient function evaluations",3,null],[12,"hessian_func_count","","Number of Hessian function evaluations",3,null],[12,"jacobian_func_count","","Number of Jacobian function evaluations",3,null],[12,"modify_func_count","","Number of `modify` function evaluations",3,null],[3,"ArgminResult","","Final struct returned by the `run` method of `Executor`.",null,null],[12,"operator","","operator",4,null],[12,"state","","iteration state",4,null],[3,"ArgminCheckpoint","","Checkpoint",null,null],[3,"ArgminIterData","","The datastructure which is returned by the `next_iter`…",null,null],[4,"ArgminError","","Argmin error type",null,null],[13,"InvalidParameter","","Indicates and invalid parameter",5,null],[12,"text","argmin::core::ArgminError","Text",5,null],[13,"NotImplemented","argmin::core","Indicates that a function is not implemented",5,null],[12,"text","argmin::core::ArgminError","Text",5,null],[13,"NotInitialized","argmin::core","Indicates that a function is not initialized",5,null],[12,"text","argmin::core::ArgminError","Text",5,null],[13,"ConditionViolated","argmin::core","Indicates that a condition is violated",5,null],[12,"text","argmin::core::ArgminError","Text",5,null],[13,"CheckpointNotFound","argmin::core","Checkpoint was not found",5,null],[12,"text","argmin::core::ArgminError","Text",5,null],[13,"ImpossibleError","argmin::core","Indicates an impossible error",5,null],[12,"text","argmin::core::ArgminError","Text",5,null],[4,"WriteToFileSerializer","argmin::core","Different kinds of serializers",null,null],[13,"Bincode","","Bincode",6,null],[13,"JSON","","JSON",6,null],[4,"ObserverMode","","This is used to indicate how often the observer will…",null,null],[13,"Never","","Never call the observer",7,null],[13,"Always","","Call observer in every iteration",7,null],[13,"Every","","Call observer every N iterations",7,null],[13,"NewBest","","Call observer when new best is found",7,null],[4,"CheckpointMode","","Defines at which intervals a checkpoint is saved.",null,null],[13,"Never","","Never create checkpoint",8,null],[13,"Every","","Create checkpoint every N iterations",8,null],[13,"Always","","Create checkpoint in every iteration",8,null],[4,"TerminationReason","","Indicates why the optimization algorithm stopped",null,null],[13,"NotTerminated","","In case it has not terminated yet",9,null],[13,"MaxItersReached","","Maximum number of iterations reached",9,null],[13,"TargetCostReached","","Target cost function value reached",9,null],[13,"TargetPrecisionReached","","Target precision reached",9,null],[13,"NoChangeInCost","","Cost function value did not change",9,null],[13,"AcceptedStallIterExceeded","","Acceped stall iter exceeded",9,null],[13,"BestStallIterExceeded","","Best stall iter exceeded",9,null],[13,"LineSearchConditionMet","","Condition for Line search met",9,null],[13,"TargetToleranceReached","","Target tolerance reached",9,null],[13,"Aborted","","Aborted",9,null],[5,"load_checkpoint","","Load a checkpoint from disk",null,[[["path"],["asref",["path"]]],[["error"],["result",["error"]],["deserializeowned"]]]],[0,"macros","","Macros # Macros",null,null],[0,"executor","","Executor",null,null],[3,"Executor","argmin::core::executor","Executes a solver",null,null],[12,"op","","operator",10,null],[11,"new","","Create a new executor with a `solver` and an initial…",10,[[["o"],["s"]],["self"]]],[11,"from_checkpoint","","Create a new executor from a checkpoint",10,[[["path"],["asref",["path"]],["o"]],[["error"],["result",["error"]]]]],[11,"run","","Run the executor",10,[[],[["result",["argminresult","error"]],["argminresult"],["error"]]]],[11,"add_observer","","Attaches a observer which implements `ArgminLog` to the…",10,[[["observermode"],["observe"]],["self"]]],[11,"max_iters","","Set maximum number of iterations",10,[[["u64"]],["self"]]],[11,"target_cost","","Set target cost value",10,[[["f64"]],["self"]]],[11,"cost","","Set cost value",10,[[["f64"]],["self"]]],[11,"grad","","Set Gradient",10,[[],["self"]]],[11,"hessian","","Set Hessian",10,[[],["self"]]],[11,"jacobian","","Set Jacobian",10,[[],["self"]]],[11,"checkpoint_dir","","Set checkpoint directory",10,[[["str"]],["self"]]],[11,"checkpoint_name","","Set checkpoint name",10,[[["str"]],["self"]]],[11,"checkpoint_mode","","Set the checkpoint mode",10,[[["checkpointmode"]],["self"]]],[11,"ctrlc","","Turn Ctrl-C handling on or off (default: on)",10,[[["bool"]],["self"]]],[11,"new","argmin::core","Create new IterState from `param`",0,[[],["self"]]],[11,"param","","Set parameter vector. This shifts the stored parameter…",0,[[["self"]],["self"]]],[11,"best_param","","Set best paramater vector. This shifts the stored best…",0,[[["self"]],["self"]]],[11,"cost","","Set the current cost function value. This shifts the…",0,[[["self"],["f64"]],["self"]]],[11,"best_cost","","Set the current best cost function value. This shifts the…",0,[[["self"],["f64"]],["self"]]],[11,"grad","","Set gradient. This shifts the stored gradient to the…",0,[[["self"]],["self"]]],[11,"hessian","","Set Hessian. This shifts the stored Hessian to the…",0,[[["self"]],["self"]]],[11,"jacobian","","Set Jacobian. This shifts the stored Jacobian to the…",0,[[["self"]],["self"]]],[11,"population","","Set population",0,[[["self"],["vec"]],["self"]]],[11,"target_cost","","Set",0,[[["self"],["f64"]],["self"]]],[11,"max_iters","","Set",0,[[["self"],["u64"]],["self"]]],[11,"last_best_iter","","Set",0,[[["self"],["u64"]],["self"]]],[11,"termination_reason","","Set",0,[[["self"],["terminationreason"]],["self"]]],[11,"time","","Set",0,[[["self"],["duration"]],["self"]]],[11,"get_param","","Get",0,[[["self"]]]],[11,"get_prev_param","","Get",0,[[["self"]]]],[11,"get_best_param","","Get",0,[[["self"]]]],[11,"get_prev_best_param","","Get",0,[[["self"]]]],[11,"get_cost","","Get",0,[[["self"]],["f64"]]],[11,"get_prev_cost","","Get",0,[[["self"]],["f64"]]],[11,"get_best_cost","","Get",0,[[["self"]],["f64"]]],[11,"get_prev_best_cost","","Get",0,[[["self"]],["f64"]]],[11,"get_target_cost","","Get",0,[[["self"]],["f64"]]],[11,"get_cost_func_count","","Get",0,[[["self"]],["u64"]]],[11,"get_grad_func_count","","Get",0,[[["self"]],["u64"]]],[11,"get_hessian_func_count","","Get",0,[[["self"]],["u64"]]],[11,"get_jacobian_func_count","","Get",0,[[["self"]],["u64"]]],[11,"get_modify_func_count","","Get",0,[[["self"]],["u64"]]],[11,"get_last_best_iter","","Get",0,[[["self"]],["u64"]]],[11,"get_termination_reason","","Get",0,[[["self"]],["terminationreason"]]],[11,"get_time","","Get",0,[[["self"]],["duration"]]],[11,"get_grad","","Get",0,[[["self"]],["option"]]],[11,"get_prev_grad","","Get",0,[[["self"]],["option"]]],[11,"get_hessian","","Get",0,[[["self"]],["option"]]],[11,"get_prev_hessian","","Get",0,[[["self"]],["option"]]],[11,"get_jacobian","","Get",0,[[["self"]],["option"]]],[11,"get_prev_jacobian","","Get",0,[[["self"]],["option"]]],[11,"get_iter","","Get",0,[[["self"]],["u64"]]],[11,"get_max_iters","","Get",0,[[["self"]],["u64"]]],[11,"get_population","","Returns population",0,[[["self"]],[["option",["vec"]],["vec"]]]],[11,"increment_iter","","Increment the number of iterations by one",0,[[["self"]]]],[11,"increment_func_counts","","Increment all function evaluation counts by the evaluation…",0,[[["opwrapper"],["self"]]]],[11,"set_func_counts","","Set all function evaluation counts to the evaluation…",0,[[["opwrapper"],["self"]]]],[11,"increment_cost_func_count","","Increment cost function evaluation count by `num`",0,[[["self"],["u64"]]]],[11,"increment_grad_func_count","","Increment gradient function evaluation count by `num`",0,[[["self"],["u64"]]]],[11,"increment_hessian_func_count","","Increment Hessian function evaluation count by `num`",0,[[["self"],["u64"]]]],[11,"increment_jacobian_func_count","","Increment Jacobian function evaluation count by `num`",0,[[["self"],["u64"]]]],[11,"increment_modify_func_count","","Increment modify function evaluation count by `num`",0,[[["self"],["u64"]]]],[11,"new_best","","Indicate that a new best parameter vector was found",0,[[["self"]]]],[11,"is_best","","Returns whether the current parameter vector is also the…",0,[[["self"]],["bool"]]],[11,"terminated","","Return whether the algorithm has terminated or not",0,[[["self"]],["bool"]]],[11,"new","","Constructor",1,[[],["self"]]],[11,"push","","Push a key-value pair to the `kv` vector.",1,[[["display"],["self"],["str"]],["self"]]],[11,"merge","","Merge another `kv` into `self.kv`",1,[[["argminkv"]],["self"]]],[11,"new","","Constructor",11,[[],["self"]]],[11,"new","","Constructor",12,[[],["self"]]],[11,"new","","Create a new `WriteToFile` struct",13,[[["str"]],["self"]]],[11,"serializer","","Set serializer",13,[[["writetofileserializer"]],["self"]]],[11,"term","","Log to the terminal in a blocking way",14,[[],["self"]]],[11,"term_noblock","","Log to the terminal in a non-blocking way (in case of…",14,[[],["self"]]],[11,"file","","Log JSON to a file in a blocking way",14,[[["str"],["bool"]],[["error"],["result",["error"]]]]],[11,"file_noblock","","Log JSON to a file in a non-blocking way (in case of…",14,[[["str"],["bool"]],[["error"],["result",["error"]]]]],[11,"new","","Create a new visualizer",15,[[],["self"]]],[11,"delay","","Set delay",15,[[["duration"]],["self"]]],[11,"surface","","Set surface",15,[[["surface"]],["self"]]],[11,"new","","Create a new surface",16,[[["o"],["f64"]],["self"]]],[11,"new","","Constructor",17,[[],["self"]]],[11,"push","","Push another `Observe` to the `observer` field",17,[[["observermode"],["self"],["observe"]],["self"]]],[11,"new","","Constructor",3,[[["o"]],["self"]]],[11,"new_move","","Constructor (moves op)",3,[[["o"]],["self"]]],[11,"apply","","Calls the `apply` method of `op` and increments…",3,[[["self"]],[["error"],["result",["error"]]]]],[11,"gradient","","Calls the `gradient` method of `op` and increments…",3,[[["self"]],[["error"],["result",["error"]]]]],[11,"hessian","","Calls the `hessian` method of `op` and increments…",3,[[["self"]],[["error"],["result",["error"]]]]],[11,"jacobian","","Calls the `jacobian` method of `op` and increments…",3,[[["self"]],[["result",["error"]],["error"]]]],[11,"modify","","Calls the `modify` method of `op` and increments…",3,[[["self"],["f64"]],[["error"],["result",["error"]]]]],[11,"consume_op","","Consumes an operator by increasing the function call…",3,[[["self"],["opwrapper"],["argminop"]]]],[11,"reset","","Reset the cost function counts to zero",3,[[],["self"]]],[11,"get_op","","Returns the operator `op` by taking ownership of `self`.",3,[[],["o"]]],[11,"clone_op","","Returns a clone of the operator `op`.",3,[[["self"]],["o"]]],[11,"new_from_op","","Creates a new `OpWrapper<O>` from another `OpWrapper<O>`…",3,[[["opwrapper"]],["self"]]],[11,"new","","Constructor",4,[[["iterstate"],["o"]],["self"]]],[11,"operator","","Return handle to operator",4,[[["self"]],["o"]]],[11,"state","","Return handle to state",4,[[["self"]],["iterstate"]]],[11,"new","","Define a new checkpoint",18,[[["str"],["checkpointmode"]],[["error"],["result",["error"]]]]],[11,"set_dir","","Set directory of checkpoint",18,[[["str"],["self"]]]],[11,"dir","","Get directory of checkpoint",18,[[["self"]],["string"]]],[11,"set_name","","Set name of checkpoint",18,[[["str"],["self"]]]],[11,"name","","Get name of checkpoint",18,[[["self"]],["string"]]],[11,"set_mode","","Set mode of checkpoint",18,[[["self"],["checkpointmode"]]]],[11,"store","","Write checkpoint to disk",18,[[["t"],["self"],["string"]],[["result",["error"]],["error"]]]],[11,"store_cond","","Write checkpoint based on the desired `CheckpointMode`",18,[[["t"],["self"],["u64"]],[["result",["error"]],["error"]]]],[11,"terminated","","Returns `true` if a solver terminated and `false` otherwise",9,[[],["bool"]]],[11,"text","","Returns a texual representation of what happened",9,[[["self"]],["str"]]],[0,"file","","Output parameter vectors to file",null,null],[3,"WriteToFile","argmin::core::file","Write parameter vectors to file",null,null],[4,"WriteToFileSerializer","","Different kinds of serializers",null,null],[13,"Bincode","","Bincode",6,null],[13,"JSON","","JSON",6,null],[0,"slog_logger","argmin::core","Loggers based on the `slog` crate",null,null],[3,"ArgminSlogLogger","argmin::core::slog_logger","A logger based on `slog`",null,null],[3,"ArgminSlogKV","","This type is necessary in order to be able to implement…",null,null],[12,"kv","","Key value store",2,null],[0,"visualizer","argmin::core","Observer which visualizes the progress of the solver",null,null],[3,"Visualizer3d","argmin::core::visualizer","Visualize iterations of a solver for cost functions of…",null,null],[3,"Surface","","Helper class for visualized surface",null,null],[8,"ArgminDot","argmin::core","Dot/scalar product of `T` and `self`",null,null],[10,"dot","","Dot/scalar product of `T` and `self`",19,[[["t"],["self"]],["u"]]],[8,"ArgminWeightedDot","","Dot/scalar product of `T` and `self` weighted by W (p^TWv)",null,null],[10,"weighted_dot","","Dot/scalar product of `T` and `self`",20,[[["v"],["self"],["t"]],["u"]]],[8,"ArgminZero","","Return param vector of all zeros (for now, this is a hack.…",null,null],[10,"zero","","Return zero(s)",21,[[],["self"]]],[8,"ArgminConj","","Return the conjugate",null,null],[10,"conj","","Return conjugate",22,[[["self"]],["self"]]],[8,"ArgminZeroLike","","Zero for dynamically sized objects",null,null],[10,"zero_like","","Return zero(s)",23,[[["self"]],["self"]]],[8,"ArgminEye","","Identity matrix",null,null],[10,"eye","","Identity matrix of size `n`",24,[[["usize"]],["self"]]],[10,"eye_like","","Identity matrix of same size as `self`",24,[[["self"]],["self"]]],[8,"ArgminAdd","","Add a `T` to `self`",null,null],[10,"add","","Add a `T` to `self`",25,[[["t"],["self"]],["u"]]],[8,"ArgminSub","","Subtract a `T` from `self`",null,null],[10,"sub","","Subtract a `T` from `self`",26,[[["t"],["self"]],["u"]]],[8,"ArgminMul","","(Pointwise) Multiply a `T` with `self`",null,null],[10,"mul","","(Pointwise) Multiply a `T` with `self`",27,[[["t"],["self"]],["u"]]],[8,"ArgminDiv","","(Pointwise) Divide a `T` by `self`",null,null],[10,"div","","(Pointwise) Divide a `T` by `self`",28,[[["t"],["self"]],["u"]]],[8,"ArgminScaledAdd","","Add a `T` scaled by an `U` to `self`",null,null],[10,"scaled_add","","Add a `T` scaled by an `U` to `self`",29,[[["t"],["self"],["u"]],["v"]]],[8,"ArgminScaledSub","","Subtract a `T` scaled by an `U` from `self`",null,null],[10,"scaled_sub","","Subtract a `T` scaled by an `U` from `self`",30,[[["t"],["self"],["u"]],["v"]]],[8,"ArgminNorm","","Compute the l2-norm (`U`) of `self`",null,null],[10,"norm","","Compute the l2-norm (`U`) of `self`",31,[[["self"]],["u"]]],[8,"ArgminTranspose","","Transposing a type",null,null],[10,"t","","Transpose",32,[[],["self"]]],[8,"ArgminInv","","Compute the inverse (`T`) of `self`",null,null],[10,"inv","","Compute the inverse",33,[[["self"]],[["error"],["result",["error"]]]]],[8,"ArgminRandom","","Create a random number",null,null],[10,"rand_from_range","","Get a random element between min and max,",34,[[["self"]],["self"]]],[8,"ArgminMinMax","","Minimum and Maximum of type `T`",null,null],[10,"min","","Select piecewise minimum",35,[[["self"]],["self"]]],[10,"max","","Select piecewise maximum",35,[[["self"]],["self"]]],[8,"Observe","","Defines the interface every Observer needs to expose",null,null],[11,"observe_init","","Called once at the beginning of the execution of the solver.",36,[[["str"],["self"],["argminkv"]],[["result",["error"]],["error"]]]],[11,"observe_iter","","Called at every iteration of the solver",36,[[["self"],["iterstate"],["argminkv"]],[["result",["error"]],["error"]]]],[8,"ArgminOp","","This trait needs to be implemented for every operator/cost…",null,null],[16,"Param","","Type of the parameter vector",37,null],[16,"Output","","Output of the operator",37,null],[16,"Hessian","","Type of Hessian",37,null],[16,"Jacobian","","Type of Jacobian",37,null],[11,"apply","","Applies the operator/cost function to parameters",37,[[["self"]],[["error"],["result",["error"]]]]],[11,"gradient","","Computes the gradient at the given parameters",37,[[["self"]],[["error"],["result",["error"]]]]],[11,"hessian","","Computes the Hessian at the given parameters",37,[[["self"]],[["result",["error"]],["error"]]]],[11,"jacobian","","Computes the Hessian at the given parameters",37,[[["self"]],[["result",["error"]],["error"]]]],[11,"modify","","Modifies a parameter vector. Comes with a variable that…",37,[[["f64"],["self"]],[["error"],["result",["error"]]]]],[8,"Solver","","Solver",null,null],[18,"NAME","","Name of the solver",38,null],[10,"next_iter","","Computes one iteration of the algorithm.",38,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"init","","Initializes the algorithm",38,[[["self"],["iterstate"],["opwrapper"]],[["option",["argminiterdata"]],["error"],["result",["option","error"]]]]],[11,"terminate_internal","","Checks whether basic termination reasons apply.",38,[[["self"],["iterstate"]],["terminationreason"]]],[11,"terminate","","Checks whether the algorithm must be terminated",38,[[["self"],["iterstate"]],["terminationreason"]]],[8,"ArgminLineSearch","","Defines a common interface for line search methods.",null,null],[10,"set_search_direction","","Set the search direction",39,[[["self"],["p"]]]],[10,"set_init_alpha","","Set the initial step length",39,[[["self"],["f64"]],[["result",["error"]],["error"]]]],[8,"ArgminTrustRegion","","Defines a common interface to methods which calculate…",null,null],[10,"set_radius","","Set the initial step length",40,[[["self"],["f64"]]]],[8,"ArgminNLCGBetaUpdate","","Common interface for beta update methods (Nonlinear-CG)",null,null],[10,"update","","Update beta Parameter 1: \\nabla f_k Parameter 2: \\nabla…",41,[[["t"],["self"]],["f64"]]],[11,"new","","Constructor",42,[[],["self"]]],[11,"param","","Set parameter vector",42,[[],["self"]]],[11,"cost","","Set cost function value",42,[[["f64"]],["self"]]],[11,"grad","","Set gradient",42,[[],["self"]]],[11,"hessian","","Set Hessian",42,[[],["self"]]],[11,"jacobian","","Set Jacobian",42,[[],["self"]]],[11,"population","","Set Population",42,[[["vec"]],["self"]]],[11,"kv","","Adds an `ArgminKV`",42,[[["argminkv"]],["self"]]],[11,"termination_reason","","Set termination reason",42,[[["terminationreason"]],["self"]]],[11,"get_param","","Get parameter vector",42,[[["self"]],["option"]]],[11,"get_cost","","Get cost function value",42,[[["self"]],[["option",["f64"]],["f64"]]]],[11,"get_grad","","Get gradient",42,[[["self"]],["option"]]],[11,"get_hessian","","Get Hessian",42,[[["self"]],["option"]]],[11,"get_jacobian","","Get Jacobian",42,[[["self"]],["option"]]],[11,"get_population","","Get reference to population",42,[[["self"]],[["option",["vec"]],["vec"]]]],[11,"get_termination_reason","","Get termination reason",42,[[["self"]],[["option",["terminationreason"]],["terminationreason"]]]],[11,"get_kv","","Return KV",42,[[["self"]],["argminkv"]]],[0,"prelude","argmin","Definition of all relevant traits and types # Re-export of…",null,null],[0,"solver","","Solvers",null,null],[0,"brent","argmin::solver","Brent's method",null,null],[3,"Brent","argmin::solver::brent","Brent's method",null,null],[4,"BrentError","","Error to be thrown if Brent is initialized with improper…",null,null],[13,"WrongSign","","f(min) and f(max) must have different signs",43,null],[11,"new","","Constructor The values `min` and `max` must bracketing the…",44,[[["f64"]],["brent"]]],[0,"conjugategradient","argmin::solver","Conjugate Gradient methods",null,null],[0,"cg","argmin::solver::conjugategradient","Conjugate gradient method # References:",null,null],[3,"ConjugateGradient","argmin::solver::conjugategradient::cg","The conjugate gradient method is a solver for systems of…",null,null],[11,"new","","Constructor",45,[[["p"]],[["error"],["result",["error"]]]]],[11,"p","","Return the current search direction (This is needed by…",45,[[["self"]],["p"]]],[11,"p_prev","","Return the previous search direction (This is needed by…",45,[[["self"]],["p"]]],[11,"residual","","Return the current residual (This is needed by NewtonCG…",45,[[["self"]],["p"]]],[0,"nonlinear_cg","argmin::solver::conjugategradient","Nonlinear conjugate gradient method Important TODO: Find…",null,null],[3,"NonlinearConjugateGradient","argmin::solver::conjugategradient::nonlinear_cg","The nonlinear conjugate gradient is a generalization of…",null,null],[11,"new","","Constructor (Polak Ribiere Conjugate Gradient (PR-CG))",46,[[["b"],["l"]],[["error"],["result",["error"]]]]],[11,"restart_iters","","Specifiy the number of iterations after which a restart…",46,[[["u64"]],["self"]]],[11,"restart_orthogonality","","Set the value for the orthogonality measure. Setting this…",46,[[["f64"]],["self"]]],[0,"beta","argmin::solver::conjugategradient","Beta update methods for nonlinear CG # Beta update methods",null,null],[3,"FletcherReeves","argmin::solver::conjugategradient::beta","Fletcher and Reeves (FR) method TODO: Reference",null,null],[3,"PolakRibiere","","Polak and Ribiere (PR) method TODO: Reference",null,null],[3,"PolakRibierePlus","","Polak and Ribiere Plus (PR+) method TODO: Reference",null,null],[3,"HestenesStiefel","","Hestenes and Stiefel (HS) method TODO: Reference",null,null],[11,"new","","Constructor",47,[[],["self"]]],[11,"new","","Constructor",48,[[],["self"]]],[11,"new","","Constructor",49,[[],["self"]]],[11,"new","","Constructor",50,[[],["self"]]],[0,"gaussnewton","argmin::solver","Newton Methods",null,null],[0,"gaussnewton_linesearch","argmin::solver::gaussnewton","Gauss-Newton method with linesearch # References:",null,null],[3,"GaussNewtonLS","argmin::solver::gaussnewton::gaussnewton_linesearch","Gauss-Newton method with linesearch",null,null],[11,"new","","Constructor",51,[[["l"]],["self"]]],[11,"with_tol","","Set tolerance for the stopping criterion based on cost…",51,[[["f64"]],[["error"],["result",["error"]]]]],[0,"gaussnewton_method","argmin::solver::gaussnewton","Gauss-Newton method # References:",null,null],[3,"GaussNewton","argmin::solver::gaussnewton::gaussnewton_method","Gauss-Newton method",null,null],[11,"new","","Constructor",52,[[],["self"]]],[11,"with_gamma","","set gamma",52,[[["f64"]],[["error"],["result",["error"]]]]],[11,"with_tol","","Set tolerance for the stopping criterion based on cost…",52,[[["f64"]],[["error"],["result",["error"]]]]],[0,"gradientdescent","argmin::solver","Gradient descent methods",null,null],[0,"steepestdescent","argmin::solver::gradientdescent","Steepest Descent method",null,null],[3,"SteepestDescent","argmin::solver::gradientdescent::steepestdescent","Steepest descent iteratively takes steps in the direction…",null,null],[11,"new","","Constructor",53,[[["l"]],["self"]]],[0,"landweber","argmin::solver","Landweber iteration",null,null],[3,"Landweber","argmin::solver::landweber","The Landweber iteration is a solver for ill-posed linear…",null,null],[11,"new","","Constructor",54,[[["f64"]],["self"]]],[0,"linesearch","argmin::solver","Line search methods",null,null],[0,"backtracking","argmin::solver::linesearch","Backtracking line search algorithm * Backtracking line…",null,null],[3,"BacktrackingLineSearch","argmin::solver::linesearch::backtracking","The Backtracking line search is a simple method to find a…",null,null],[11,"new","","Constructor",55,[[["l"]],["self"]]],[11,"rho","","Set rho",55,[[["f64"]],[["error"],["result",["error"]]]]],[0,"condition","argmin::solver::linesearch","Acceptance conditions # References:",null,null],[3,"ArmijoCondition","argmin::solver::linesearch::condition","Armijo Condition",null,null],[3,"WolfeCondition","","Wolfe Condition",null,null],[3,"StrongWolfeCondition","","Strong Wolfe conditions",null,null],[3,"GoldsteinCondition","","Goldstein conditions",null,null],[8,"LineSearchCondition","","Needs to be implemented by everything that wants to be a…",null,null],[10,"eval","","Evaluate the condition",56,[[["f64"],["self"],["t"]],["bool"]]],[10,"requires_cur_grad","","Indicates whether this condition requires the computation…",56,[[["self"]],["bool"]]],[11,"new","","Constructor",57,[[["f64"]],[["error"],["result",["error"]]]]],[11,"new","","Constructor",58,[[["f64"]],[["error"],["result",["error"]]]]],[11,"new","","Constructor",59,[[["f64"]],[["error"],["result",["error"]]]]],[11,"new","","Constructor",60,[[["f64"]],[["error"],["result",["error"]]]]],[0,"hagerzhang","argmin::solver::linesearch","Hager-Zhang line search algorithm * Hager-Zhang line search",null,null],[3,"HagerZhangLineSearch","argmin::solver::linesearch::hagerzhang","The Hager-Zhang line search is a method to find a step…",null,null],[11,"new","","Constructor",61,[[],["self"]]],[11,"delta","","set delta",61,[[["f64"]],[["error"],["result",["error"]]]]],[11,"sigma","","set sigma",61,[[["f64"]],[["error"],["result",["error"]]]]],[11,"epsilon","","set epsilon",61,[[["f64"]],[["error"],["result",["error"]]]]],[11,"theta","","set theta",61,[[["f64"]],[["error"],["result",["error"]]]]],[11,"gamma","","set gamma",61,[[["f64"]],[["error"],["result",["error"]]]]],[11,"eta","","set eta",61,[[["f64"]],[["error"],["result",["error"]]]]],[11,"alpha","","set alpha limits",61,[[["f64"]],[["error"],["result",["error"]]]]],[0,"morethuente","argmin::solver::linesearch","More-Thuente line search algorithm * More-Thuente line…",null,null],[3,"MoreThuenteLineSearch","argmin::solver::linesearch::morethuente","The More-Thuente line search is a method to find a step…",null,null],[11,"new","","Constructor",62,[[],["self"]]],[11,"c","","Set c1 and c2 where 0 < c1 < c2 < 1.",62,[[["f64"]],[["error"],["result",["error"]]]]],[11,"alpha","","set alpha limits",62,[[["f64"]],[["error"],["result",["error"]]]]],[0,"neldermead","argmin::solver","References:",null,null],[3,"NelderMead","argmin::solver::neldermead","Nelder-Mead method",null,null],[11,"new","","Constructor",63,[[],["self"]]],[11,"with_initial_params","","Add initial parameters",63,[[["vec"]],["self"]]],[11,"sd_tolerance","","Set Sample standard deviation tolerance",63,[[["f64"]],["self"]]],[11,"alpha","","set alpha",63,[[["f64"]],[["error"],["result",["error"]]]]],[11,"gamma","","set gamma",63,[[["f64"]],[["error"],["result",["error"]]]]],[11,"rho","","set rho",63,[[["f64"]],[["error"],["result",["error"]]]]],[11,"sigma","","set sigma",63,[[["f64"]],[["error"],["result",["error"]]]]],[0,"newton","argmin::solver","Newton Methods",null,null],[0,"newton_cg","argmin::solver::newton","Newton-CG method TODO: Stop when search direction is close…",null,null],[3,"NewtonCG","argmin::solver::newton::newton_cg","The Newton-CG method (also called truncated Newton method)…",null,null],[11,"new","","Constructor",64,[[["l"]],["self"]]],[11,"curvature_threshold","","Set curvature threshold",64,[[["f64"]],["self"]]],[11,"with_tol","","Set tolerance for the stopping criterion based on cost…",64,[[["f64"]],[["error"],["result",["error"]]]]],[0,"newton_method","argmin::solver::newton","Newton's method # References:",null,null],[3,"Newton","argmin::solver::newton::newton_method","Newton's method iteratively finds the stationary points of…",null,null],[11,"new","","Constructor",65,[[],["self"]]],[11,"set_gamma","","set gamma",65,[[["f64"]],[["error"],["result",["error"]]]]],[0,"particleswarm","argmin::solver","References:",null,null],[3,"ParticleSwarm","argmin::solver::particleswarm","Particle Swarm Optimization (PSO)",null,null],[3,"Particle","","A single particle",null,null],[12,"position","","Position of particle",66,null],[12,"cost","","Cost of particle",66,null],[8,"Position","","",null,null],[11,"new","","Constructor",67,[[["usize"],["f64"]],[["error"],["result",["error"]]]]],[0,"quasinewton","argmin::solver","Quasi-Newton methods",null,null],[0,"bfgs","argmin::solver::quasinewton","References:",null,null],[3,"BFGS","argmin::solver::quasinewton::bfgs","BFGS method",null,null],[11,"new","","Constructor",68,[[["l"],["h"]],["self"]]],[11,"with_tol_grad","","Sets tolerance for the stopping criterion based on the…",68,[[["f64"]],["self"]]],[11,"with_tol_cost","","Sets tolerance for the stopping criterion based on the…",68,[[["f64"]],["self"]]],[0,"dfp","argmin::solver::quasinewton","References:",null,null],[3,"DFP","argmin::solver::quasinewton::dfp","DFP method",null,null],[11,"new","","Constructor",69,[[["l"],["h"]],["self"]]],[11,"with_tol_grad","","Sets tolerance for the stopping criterion based on the…",69,[[["f64"]],["self"]]],[0,"lbfgs","argmin::solver::quasinewton","References:",null,null],[3,"LBFGS","argmin::solver::quasinewton::lbfgs","L-BFGS method",null,null],[11,"new","","Constructor",70,[[["usize"],["l"]],["self"]]],[11,"with_tol_grad","","Sets tolerance for the stopping criterion based on the…",70,[[["f64"]],["self"]]],[11,"with_tol_cost","","Sets tolerance for the stopping criterion based on the…",70,[[["f64"]],["self"]]],[0,"sr1","argmin::solver::quasinewton","References:",null,null],[3,"SR1","argmin::solver::quasinewton::sr1","SR1 method (broken!)",null,null],[11,"new","","Constructor",71,[[["l"],["h"]],["self"]]],[11,"r","","Set r",71,[[["f64"]],[["error"],["result",["error"]]]]],[11,"with_tol_grad","","Sets tolerance for the stopping criterion based on the…",71,[[["f64"]],["self"]]],[11,"with_tol_cost","","Sets tolerance for the stopping criterion based on the…",71,[[["f64"]],["self"]]],[0,"sr1_trustregion","argmin::solver::quasinewton","References:",null,null],[3,"SR1TrustRegion","argmin::solver::quasinewton::sr1_trustregion","SR1 Trust Region method",null,null],[11,"new","","Constructor",72,[[["r"]],["self"]]],[11,"hessian","","provide initial Hessian (if not provided, the algorithm…",72,[[["b"]],["self"]]],[11,"r","","Set r",72,[[["f64"]],[["error"],["result",["error"]]]]],[11,"radius","","set radius",72,[[["f64"]],["self"]]],[11,"eta","","Set eta",72,[[["f64"]],[["error"],["result",["error"]]]]],[11,"with_tol_grad","","Sets tolerance for the stopping criterion based on the…",72,[[["f64"]],["self"]]],[0,"simulatedannealing","argmin::solver","",null,null],[3,"SimulatedAnnealing","argmin::solver::simulatedannealing","Simulated Annealing",null,null],[4,"SATempFunc","","Temperature functions for Simulated Annealing.",null,null],[13,"TemperatureFast","","`t_i = t_init / i`",73,null],[13,"Boltzmann","","`t_i = t_init / ln(i)`",73,null],[13,"Exponential","","`t_i = t_init * x^i`",73,null],[11,"new","","Constructor",74,[[["f64"]],[["error"],["result",["error"]]]]],[11,"temp_func","","Set temperature function to one of the options in…",74,[[["satempfunc"]],["self"]]],[11,"stall_accepted","","The optimization stops after there has been no accepted…",74,[[["u64"]],["self"]]],[11,"stall_best","","The optimization stops after there has been no new best…",74,[[["u64"]],["self"]]],[11,"reannealing_fixed","","Start reannealing after `iter` iterations",74,[[["u64"]],["self"]]],[11,"reannealing_accepted","","Start reannealing after no accepted solution has been…",74,[[["u64"]],["self"]]],[11,"reannealing_best","","Start reannealing after no new best solution has been…",74,[[["u64"]],["self"]]],[0,"trustregion","argmin::solver","Argmin Trust region methods",null,null],[5,"reduction_ratio","argmin::solver::trustregion","Computes reduction ratio",null,[[["f64"]],["f64"]]],[0,"cauchypoint","","Cauchy Point # References:",null,null],[3,"CauchyPoint","argmin::solver::trustregion::cauchypoint","The Cauchy point is the minimum of the quadratic…",null,null],[11,"new","","Constructor",75,[[],["self"]]],[0,"dogleg","argmin::solver::trustregion","Dogleg method # References:",null,null],[3,"Dogleg","argmin::solver::trustregion::dogleg","The Dogleg method computes the intersection of the trust…",null,null],[11,"new","","Constructor",76,[[],["self"]]],[0,"steihaug","argmin::solver::trustregion","Steihaug method # References:",null,null],[3,"Steihaug","argmin::solver::trustregion::steihaug","The Steihaug method is a conjugate gradients based…",null,null],[11,"new","","Constructor",77,[[],["self"]]],[11,"epsilon","","Set epsilon",77,[[["f64"]],[["error"],["result",["error"]]]]],[11,"max_iters","","set maximum number of iterations",77,[[["u64"]],["self"]]],[0,"trustregion_method","argmin::solver::trustregion","Trust region solver # References:",null,null],[3,"TrustRegion","argmin::solver::trustregion::trustregion_method","The trust region method approximates the cost function…",null,null],[11,"new","","Constructor",78,[[["r"]],["self"]]],[11,"radius","","set radius",78,[[["f64"]],["self"]]],[11,"max_radius","","Set maximum radius",78,[[["f64"]],["self"]]],[11,"eta","","Set eta",78,[[["f64"]],[["error"],["result",["error"]]]]],[14,"make_kv","argmin","Creates an `ArgminKV` at compile time in order to avoid…",null,null],[14,"check_param","","Release an `T` from an `Option<T>` if it is not `None`. If…",null,null],[14,"trait_bound","","Reuse a list of trait bounds by giving it a name, e.g.…",null,null],[11,"from","argmin::core","",79,[[["t"]],["t"]]],[11,"from","","",79,[[],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_string","","",79,[[["self"]],["string"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"vzip","","",79,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","argmin::core::executor","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","argmin::solver::brent","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_string","","",43,[[["self"]],["string"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","argmin::solver::conjugategradient::cg","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","argmin::solver::conjugategradient::nonlinear_cg","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","argmin::solver::conjugategradient::beta","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"vzip","","",47,[[],["v"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"vzip","","",48,[[],["v"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"vzip","","",49,[[],["v"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"vzip","","",50,[[],["v"]]],[11,"from","argmin::solver::gaussnewton::gaussnewton_linesearch","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"vzip","","",51,[[],["v"]]],[11,"from","argmin::solver::gaussnewton::gaussnewton_method","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"vzip","","",52,[[],["v"]]],[11,"from","argmin::solver::gradientdescent::steepestdescent","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"vzip","","",53,[[],["v"]]],[11,"from","argmin::solver::landweber","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"vzip","","",54,[[],["v"]]],[11,"from","argmin::solver::linesearch::backtracking","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"vzip","","",55,[[],["v"]]],[11,"from","argmin::solver::linesearch::condition","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"vzip","","",57,[[],["v"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"vzip","","",58,[[],["v"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"vzip","","",59,[[],["v"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"vzip","","",60,[[],["v"]]],[11,"from","argmin::solver::linesearch::hagerzhang","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"vzip","","",61,[[],["v"]]],[11,"from","argmin::solver::linesearch::morethuente","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"vzip","","",62,[[],["v"]]],[11,"from","argmin::solver::neldermead","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"vzip","","",63,[[],["v"]]],[11,"from","argmin::solver::newton::newton_cg","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"vzip","","",64,[[],["v"]]],[11,"from","argmin::solver::newton::newton_method","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"vzip","","",65,[[],["v"]]],[11,"from","argmin::solver::particleswarm","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"vzip","","",67,[[],["v"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"vzip","","",66,[[],["v"]]],[11,"from","argmin::solver::quasinewton::bfgs","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"vzip","","",68,[[],["v"]]],[11,"from","argmin::solver::quasinewton::dfp","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"vzip","","",69,[[],["v"]]],[11,"from","argmin::solver::quasinewton::lbfgs","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"vzip","","",70,[[],["v"]]],[11,"from","argmin::solver::quasinewton::sr1","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"vzip","","",71,[[],["v"]]],[11,"from","argmin::solver::quasinewton::sr1_trustregion","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"vzip","","",72,[[],["v"]]],[11,"from","argmin::solver::simulatedannealing","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"vzip","","",74,[[],["v"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"vzip","","",73,[[],["v"]]],[11,"from","argmin::solver::trustregion::cauchypoint","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"vzip","","",75,[[],["v"]]],[11,"from","argmin::solver::trustregion::dogleg","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"vzip","","",76,[[],["v"]]],[11,"from","argmin::solver::trustregion::steihaug","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"vzip","","",77,[[],["v"]]],[11,"from","argmin::solver::trustregion::trustregion_method","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"vzip","","",78,[[],["v"]]],[11,"fmt","argmin::core","",79,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"deref","","",79,[[["self"]]]],[11,"as_ref","","",79,[[["self"]],["error"]]],[11,"as_ref","","",79,[[["self"]],["error"]]],[11,"from","","",79,[[["e"]],["error"]]],[11,"fmt","","",79,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"drop","","",79,[[["self"]]]],[11,"deref_mut","","",79,[[["self"]]]],[11,"observe_iter","","",13,[[["self"],["iterstate"],["argminkv"]],[["result",["error"]],["error"]]]],[11,"observe_init","","Log general info",14,[[["str"],["self"],["argminkv"]],[["result",["error"]],["error"]]]],[11,"observe_iter","","This should be used to log iteration data only (because…",14,[[["self"],["iterstate"],["argminkv"]],[["result",["error"]],["error"]]]],[11,"observe_iter","","",15,[[["self"],["iterstate"],["argminkv"]],[["result",["error"]],["error"]]]],[11,"observe_init","","Initial observation This is called after the…",17,[[["str"],["self"],["argminkv"]],[["result",["error"]],["error"]]]],[11,"observe_iter","","This is called after every iteration and gets the current…",17,[[["self"],["iterstate"],["argminkv"]],[["result",["error"]],["error"]]]],[11,"apply","","Do nothing, really.",11,[[["self"]],[["error"],["result",["error"]]]]],[11,"gradient","","Do nothing, really.",11,[[["self"]],[["error"],["result",["error"]]]]],[11,"hessian","","Do nothing, really.",11,[[["self"]],[["result",["error"]],["error"]]]],[11,"modify","","Do nothing, really.",11,[[["f64"],["self"]],[["error"],["result",["error"]]]]],[11,"apply","","Do nothing, really.",12,[[["self"]],[["error"],["result",["error"]]]]],[11,"gradient","","Do nothing, really.",12,[[["self"]],[["error"],["result",["error"]]]]],[11,"hessian","","Do nothing, really.",12,[[["self"]],[["result",["error"]],["error"]]]],[11,"modify","","Do nothing, really.",12,[[["f64"],["self"]],[["error"],["result",["error"]]]]],[11,"apply","","",3,[[["self"]],[["error"],["result",["error"]]]]],[11,"gradient","","",3,[[["self"]],[["error"],["result",["error"]]]]],[11,"hessian","","",3,[[["self"]],[["result",["error"]],["error"]]]],[11,"jacobian","","",3,[[["self"]],[["result",["error"]],["error"]]]],[11,"modify","","",3,[[["f64"],["self"]],[["error"],["result",["error"]]]]],[11,"init","argmin::solver::brent","",44,[[["self"],["iterstate"],["opwrapper"]],[["option",["argminiterdata"]],["error"],["result",["option","error"]]]]],[11,"next_iter","","",44,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"init","argmin::solver::conjugategradient::cg","",45,[[["self"],["iterstate"],["opwrapper"]],[["option",["argminiterdata"]],["error"],["result",["option","error"]]]]],[11,"next_iter","","Perform one iteration of CG algorithm",45,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"init","argmin::solver::conjugategradient::nonlinear_cg","",46,[[["self"],["iterstate"],["opwrapper"]],[["option",["argminiterdata"]],["error"],["result",["option","error"]]]]],[11,"next_iter","","",46,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"next_iter","argmin::solver::gaussnewton::gaussnewton_linesearch","",51,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"terminate","","",51,[[["self"],["iterstate"]],["terminationreason"]]],[11,"next_iter","argmin::solver::gaussnewton::gaussnewton_method","",52,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"terminate","","",52,[[["self"],["iterstate"]],["terminationreason"]]],[11,"next_iter","argmin::solver::gradientdescent::steepestdescent","",53,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"next_iter","argmin::solver::landweber","",54,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"init","argmin::solver::linesearch::backtracking","",55,[[["self"],["iterstate"],["opwrapper"]],[["option",["argminiterdata"]],["error"],["result",["option","error"]]]]],[11,"next_iter","","",55,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"terminate","","",55,[[["self"],["iterstate"]],["terminationreason"]]],[11,"init","argmin::solver::linesearch::hagerzhang","",61,[[["self"],["iterstate"],["opwrapper"]],[["option",["argminiterdata"]],["error"],["result",["option","error"]]]]],[11,"next_iter","","",61,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"terminate","","",61,[[["self"],["iterstate"]],["terminationreason"]]],[11,"init","argmin::solver::linesearch::morethuente","",62,[[["self"],["iterstate"],["opwrapper"]],[["option",["argminiterdata"]],["error"],["result",["option","error"]]]]],[11,"next_iter","","",62,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"init","argmin::solver::neldermead","",63,[[["self"],["iterstate"],["opwrapper"]],[["option",["argminiterdata"]],["error"],["result",["option","error"]]]]],[11,"next_iter","","",63,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"terminate","","",63,[[["self"],["iterstate"]],["terminationreason"]]],[11,"next_iter","argmin::solver::newton::newton_cg","",64,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"terminate","","",64,[[["self"],["iterstate"]],["terminationreason"]]],[11,"next_iter","argmin::solver::newton::newton_method","",65,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"init","argmin::solver::particleswarm","",67,[[["self"],["iterstate"],["opwrapper"]],[["option",["argminiterdata"]],["error"],["result",["option","error"]]]]],[11,"next_iter","","Perform one iteration of algorithm",67,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"init","argmin::solver::quasinewton::bfgs","",68,[[["self"],["iterstate"],["opwrapper"]],[["option",["argminiterdata"]],["error"],["result",["option","error"]]]]],[11,"next_iter","","",68,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"terminate","","",68,[[["self"],["iterstate"]],["terminationreason"]]],[11,"init","argmin::solver::quasinewton::dfp","",69,[[["self"],["iterstate"],["opwrapper"]],[["option",["argminiterdata"]],["error"],["result",["option","error"]]]]],[11,"next_iter","","",69,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"terminate","","",69,[[["self"],["iterstate"]],["terminationreason"]]],[11,"init","argmin::solver::quasinewton::lbfgs","",70,[[["self"],["iterstate"],["opwrapper"]],[["option",["argminiterdata"]],["error"],["result",["option","error"]]]]],[11,"next_iter","","",70,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"terminate","","",70,[[["self"],["iterstate"]],["terminationreason"]]],[11,"init","argmin::solver::quasinewton::sr1","",71,[[["self"],["iterstate"],["opwrapper"]],[["option",["argminiterdata"]],["error"],["result",["option","error"]]]]],[11,"next_iter","","",71,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"terminate","","",71,[[["self"],["iterstate"]],["terminationreason"]]],[11,"init","argmin::solver::quasinewton::sr1_trustregion","",72,[[["self"],["iterstate"],["opwrapper"]],[["option",["argminiterdata"]],["error"],["result",["option","error"]]]]],[11,"next_iter","","",72,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"terminate","","",72,[[["self"],["iterstate"]],["terminationreason"]]],[11,"init","argmin::solver::simulatedannealing","",74,[[["self"],["iterstate"],["opwrapper"]],[["option",["argminiterdata"]],["error"],["result",["option","error"]]]]],[11,"next_iter","","Perform one iteration of SA algorithm",74,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"terminate","","",74,[[["self"],["iterstate"]],["terminationreason"]]],[11,"next_iter","argmin::solver::trustregion::cauchypoint","",75,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"terminate","","",75,[[["self"],["iterstate"]],["terminationreason"]]],[11,"next_iter","argmin::solver::trustregion::dogleg","",76,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"terminate","","",76,[[["self"],["iterstate"]],["terminationreason"]]],[11,"init","argmin::solver::trustregion::steihaug","",77,[[["self"],["iterstate"],["opwrapper"]],[["option",["argminiterdata"]],["error"],["result",["option","error"]]]]],[11,"next_iter","","",77,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"terminate","","",77,[[["self"],["iterstate"]],["terminationreason"]]],[11,"init","argmin::solver::trustregion::trustregion_method","",78,[[["self"],["iterstate"],["opwrapper"]],[["option",["argminiterdata"]],["error"],["result",["option","error"]]]]],[11,"next_iter","","",78,[[["self"],["iterstate"],["opwrapper"]],[["error"],["argminiterdata"],["result",["argminiterdata","error"]]]]],[11,"terminate","","",78,[[["self"],["iterstate"]],["terminationreason"]]],[11,"set_search_direction","argmin::solver::linesearch::backtracking","Set search direction",55,[[["self"],["p"]]]],[11,"set_init_alpha","","Set initial alpha value",55,[[["self"],["f64"]],[["result",["error"]],["error"]]]],[11,"set_search_direction","argmin::solver::linesearch::hagerzhang","Set search direction",61,[[["self"],["p"]]]],[11,"set_init_alpha","","Set initial alpha value",61,[[["self"],["f64"]],[["result",["error"]],["error"]]]],[11,"set_search_direction","argmin::solver::linesearch::morethuente","Set search direction",62,[[["self"],["p"]]]],[11,"set_init_alpha","","Set initial alpha value",62,[[["self"],["f64"]],[["result",["error"]],["error"]]]],[11,"set_radius","argmin::solver::trustregion::cauchypoint","",75,[[["self"],["f64"]]]],[11,"set_radius","argmin::solver::trustregion::dogleg","",76,[[["self"],["f64"]]]],[11,"set_radius","argmin::solver::trustregion::steihaug","",77,[[["self"],["f64"]]]],[11,"update","argmin::solver::conjugategradient::beta","",47,[[["t"],["self"]],["f64"]]],[11,"update","","",48,[[["t"],["self"]],["f64"]]],[11,"update","","",49,[[["t"],["self"]],["f64"]]],[11,"update","","",50,[[["t"],["self"]],["f64"]]],[11,"eval","argmin::solver::linesearch::condition","",57,[[["f64"],["self"],["t"]],["bool"]]],[11,"requires_cur_grad","","",57,[[["self"]],["bool"]]],[11,"eval","","",58,[[["f64"],["self"],["t"]],["bool"]]],[11,"requires_cur_grad","","",58,[[["self"]],["bool"]]],[11,"eval","","",59,[[["f64"],["self"],["t"]],["bool"]]],[11,"requires_cur_grad","","",59,[[["self"]],["bool"]]],[11,"eval","","",60,[[["f64"],["self"],["t"]],["bool"]]],[11,"requires_cur_grad","","",60,[[["self"]],["bool"]]],[11,"from","argmin::core","",2,[[["argminkv"]],["argminslogkv"]]],[11,"extend","","",1,[[["self"],["intoiterator"]]]],[11,"clone","argmin::core::executor","",10,[[["self"]],["executor"]]],[11,"clone","argmin::core","",0,[[["self"]],["iterstate"]]],[11,"clone","","",1,[[["self"]],["argminkv"]]],[11,"clone","","",11,[[["self"]],["nooperator"]]],[11,"clone","","",12,[[["self"]],["minimalnooperator"]]],[11,"clone","","",6,[[["self"]],["writetofileserializer"]]],[11,"clone","","",13,[[["self"]],["writetofile"]]],[11,"clone","","",14,[[["self"]],["argminsloglogger"]]],[11,"clone","","",17,[[["self"]],["observer"]]],[11,"clone","","",7,[[["self"]],["observermode"]]],[11,"clone","","",3,[[["self"]],["opwrapper"]]],[11,"clone","","",4,[[["self"]],["argminresult"]]],[11,"clone","","",8,[[["self"]],["checkpointmode"]]],[11,"clone","","",18,[[["self"]],["argmincheckpoint"]]],[11,"clone","","",9,[[["self"]],["terminationreason"]]],[11,"clone","","",42,[[["self"]],["argminiterdata"]]],[11,"clone","argmin::solver::brent","",44,[[["self"]],["brent"]]],[11,"clone","argmin::solver::conjugategradient::cg","",45,[[["self"]],["conjugategradient"]]],[11,"clone","argmin::solver::conjugategradient::nonlinear_cg","",46,[[["self"]],["nonlinearconjugategradient"]]],[11,"clone","argmin::solver::conjugategradient::beta","",47,[[["self"]],["fletcherreeves"]]],[11,"clone","","",48,[[["self"]],["polakribiere"]]],[11,"clone","","",49,[[["self"]],["polakribiereplus"]]],[11,"clone","","",50,[[["self"]],["hestenesstiefel"]]],[11,"clone","argmin::solver::gaussnewton::gaussnewton_linesearch","",51,[[["self"]],["gaussnewtonls"]]],[11,"clone","argmin::solver::gaussnewton::gaussnewton_method","",52,[[["self"]],["gaussnewton"]]],[11,"clone","argmin::solver::gradientdescent::steepestdescent","",53,[[["self"]],["steepestdescent"]]],[11,"clone","argmin::solver::landweber","",54,[[["self"]],["landweber"]]],[11,"clone","argmin::solver::linesearch::backtracking","",55,[[["self"]],["backtrackinglinesearch"]]],[11,"clone","argmin::solver::linesearch::condition","",57,[[["self"]],["armijocondition"]]],[11,"clone","","",58,[[["self"]],["wolfecondition"]]],[11,"clone","","",59,[[["self"]],["strongwolfecondition"]]],[11,"clone","","",60,[[["self"]],["goldsteincondition"]]],[11,"clone","argmin::solver::linesearch::hagerzhang","",61,[[["self"]],["hagerzhanglinesearch"]]],[11,"clone","argmin::solver::linesearch::morethuente","",62,[[["self"]],["morethuentelinesearch"]]],[11,"clone","argmin::solver::neldermead","",63,[[["self"]],["neldermead"]]],[11,"clone","argmin::solver::newton::newton_cg","",64,[[["self"]],["newtoncg"]]],[11,"clone","argmin::solver::newton::newton_method","",65,[[["self"]],["newton"]]],[11,"clone","argmin::solver::particleswarm","",66,[[["self"]],["particle"]]],[11,"clone","argmin::solver::quasinewton::bfgs","",68,[[["self"]],["bfgs"]]],[11,"clone","argmin::solver::quasinewton::dfp","",69,[[["self"]],["dfp"]]],[11,"clone","argmin::solver::quasinewton::lbfgs","",70,[[["self"]],["lbfgs"]]],[11,"clone","argmin::solver::quasinewton::sr1","",71,[[["self"]],["sr1"]]],[11,"clone","argmin::solver::quasinewton::sr1_trustregion","",72,[[["self"]],["sr1trustregion"]]],[11,"clone","argmin::solver::simulatedannealing","",73,[[["self"]],["satempfunc"]]],[11,"clone","","",74,[[["self"]],["simulatedannealing"]]],[11,"clone","argmin::solver::trustregion::cauchypoint","",75,[[["self"]],["cauchypoint"]]],[11,"clone","argmin::solver::trustregion::dogleg","",76,[[["self"]],["dogleg"]]],[11,"clone","argmin::solver::trustregion::steihaug","",77,[[["self"]],["steihaug"]]],[11,"clone","argmin::solver::trustregion::trustregion_method","",78,[[["self"]],["trustregion"]]],[11,"default","argmin::core","",0,[[],["self"]]],[11,"default","","",1,[[],["argminkv"]]],[11,"default","","",11,[[],["nooperator"]]],[11,"default","","",12,[[],["minimalnooperator"]]],[11,"default","","",6,[[],["self"]]],[11,"default","","",17,[[],["observer"]]],[11,"default","","The default is `Always`",7,[[],["observermode"]]],[11,"default","","",3,[[],["opwrapper"]]],[11,"default","","",8,[[],["checkpointmode"]]],[11,"default","","",18,[[],["argmincheckpoint"]]],[11,"default","","",9,[[],["self"]]],[11,"default","","",42,[[],["argminiterdata"]]],[11,"default","argmin::solver::conjugategradient::beta","",47,[[],["fletcherreeves"]]],[11,"default","","",48,[[],["polakribiere"]]],[11,"default","","",49,[[],["polakribiereplus"]]],[11,"default","","",50,[[],["hestenesstiefel"]]],[11,"default","argmin::solver::gaussnewton::gaussnewton_method","",52,[[],["gaussnewton"]]],[11,"default","argmin::solver::linesearch::condition","",57,[[],["armijocondition"]]],[11,"default","","",58,[[],["wolfecondition"]]],[11,"default","","",59,[[],["strongwolfecondition"]]],[11,"default","","",60,[[],["goldsteincondition"]]],[11,"default","argmin::solver::linesearch::hagerzhang","",61,[[],["self"]]],[11,"default","argmin::solver::linesearch::morethuente","",62,[[],["self"]]],[11,"default","argmin::solver::neldermead","",63,[[],["neldermead"]]],[11,"default","argmin::solver::newton::newton_method","",65,[[],["newton"]]],[11,"default","argmin::solver::simulatedannealing","",73,[[],["self"]]],[11,"default","argmin::solver::trustregion::cauchypoint","",75,[[],["cauchypoint"]]],[11,"default","argmin::solver::trustregion::dogleg","",76,[[],["dogleg"]]],[11,"default","argmin::solver::trustregion::steihaug","",77,[[],["steihaug"]]],[11,"cmp","argmin::core","",1,[[["self"],["argminkv"]],["ordering"]]],[11,"cmp","","",11,[[["self"],["nooperator"]],["ordering"]]],[11,"cmp","","",12,[[["self"],["minimalnooperator"]],["ordering"]]],[11,"cmp","","",6,[[["self"],["writetofileserializer"]],["ordering"]]],[11,"cmp","","",13,[[["self"],["writetofile"]],["ordering"]]],[11,"cmp","","",7,[[["self"],["observermode"]],["ordering"]]],[11,"cmp","","",4,[[["argminresult"],["self"]],["ordering"]]],[11,"cmp","","",8,[[["self"],["checkpointmode"]],["ordering"]]],[11,"cmp","","",18,[[["argmincheckpoint"],["self"]],["ordering"]]],[11,"cmp","","",9,[[["self"],["terminationreason"]],["ordering"]]],[11,"cmp","argmin::solver::conjugategradient::beta","",47,[[["self"],["fletcherreeves"]],["ordering"]]],[11,"cmp","","",48,[[["polakribiere"],["self"]],["ordering"]]],[11,"cmp","","",49,[[["self"],["polakribiereplus"]],["ordering"]]],[11,"cmp","","",50,[[["hestenesstiefel"],["self"]],["ordering"]]],[11,"eq","argmin::core","",1,[[["self"],["argminkv"]],["bool"]]],[11,"ne","","",1,[[["self"],["argminkv"]],["bool"]]],[11,"eq","","",11,[[["self"],["nooperator"]],["bool"]]],[11,"ne","","",11,[[["self"],["nooperator"]],["bool"]]],[11,"eq","","",12,[[["self"],["minimalnooperator"]],["bool"]]],[11,"eq","","",6,[[["self"],["writetofileserializer"]],["bool"]]],[11,"eq","","",13,[[["self"],["writetofile"]],["bool"]]],[11,"ne","","",13,[[["self"],["writetofile"]],["bool"]]],[11,"eq","","",7,[[["self"],["observermode"]],["bool"]]],[11,"ne","","",7,[[["self"],["observermode"]],["bool"]]],[11,"eq","","",4,[[["argminresult"],["self"]],["bool"]]],[11,"eq","","",8,[[["self"],["checkpointmode"]],["bool"]]],[11,"ne","","",8,[[["self"],["checkpointmode"]],["bool"]]],[11,"eq","","",18,[[["argmincheckpoint"],["self"]],["bool"]]],[11,"ne","","",18,[[["argmincheckpoint"],["self"]],["bool"]]],[11,"eq","","",9,[[["self"],["terminationreason"]],["bool"]]],[11,"eq","argmin::solver::conjugategradient::beta","",47,[[["self"],["fletcherreeves"]],["bool"]]],[11,"eq","","",48,[[["polakribiere"],["self"]],["bool"]]],[11,"eq","","",49,[[["self"],["polakribiereplus"]],["bool"]]],[11,"eq","","",50,[[["hestenesstiefel"],["self"]],["bool"]]],[11,"eq","argmin::solver::trustregion::cauchypoint","",75,[[["self"],["cauchypoint"]],["bool"]]],[11,"ne","","",75,[[["self"],["cauchypoint"]],["bool"]]],[11,"eq","argmin::solver::trustregion::dogleg","",76,[[["self"],["dogleg"]],["bool"]]],[11,"ne","","",76,[[["self"],["dogleg"]],["bool"]]],[11,"eq","argmin::solver::trustregion::steihaug","",77,[[["steihaug"],["self"]],["bool"]]],[11,"ne","","",77,[[["steihaug"],["self"]],["bool"]]],[11,"partial_cmp","argmin::core","",1,[[["self"],["argminkv"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",1,[[["self"],["argminkv"]],["bool"]]],[11,"le","","",1,[[["self"],["argminkv"]],["bool"]]],[11,"gt","","",1,[[["self"],["argminkv"]],["bool"]]],[11,"ge","","",1,[[["self"],["argminkv"]],["bool"]]],[11,"partial_cmp","","",11,[[["self"],["nooperator"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",11,[[["self"],["nooperator"]],["bool"]]],[11,"le","","",11,[[["self"],["nooperator"]],["bool"]]],[11,"gt","","",11,[[["self"],["nooperator"]],["bool"]]],[11,"ge","","",11,[[["self"],["nooperator"]],["bool"]]],[11,"partial_cmp","","",12,[[["self"],["minimalnooperator"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",6,[[["self"],["writetofileserializer"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",13,[[["self"],["writetofile"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",13,[[["self"],["writetofile"]],["bool"]]],[11,"le","","",13,[[["self"],["writetofile"]],["bool"]]],[11,"gt","","",13,[[["self"],["writetofile"]],["bool"]]],[11,"ge","","",13,[[["self"],["writetofile"]],["bool"]]],[11,"partial_cmp","","",7,[[["self"],["observermode"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",7,[[["self"],["observermode"]],["bool"]]],[11,"le","","",7,[[["self"],["observermode"]],["bool"]]],[11,"gt","","",7,[[["self"],["observermode"]],["bool"]]],[11,"ge","","",7,[[["self"],["observermode"]],["bool"]]],[11,"partial_cmp","","",4,[[["argminresult"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",8,[[["self"],["checkpointmode"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",8,[[["self"],["checkpointmode"]],["bool"]]],[11,"le","","",8,[[["self"],["checkpointmode"]],["bool"]]],[11,"gt","","",8,[[["self"],["checkpointmode"]],["bool"]]],[11,"ge","","",8,[[["self"],["checkpointmode"]],["bool"]]],[11,"partial_cmp","","",18,[[["argmincheckpoint"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",18,[[["argmincheckpoint"],["self"]],["bool"]]],[11,"le","","",18,[[["argmincheckpoint"],["self"]],["bool"]]],[11,"gt","","",18,[[["argmincheckpoint"],["self"]],["bool"]]],[11,"ge","","",18,[[["argmincheckpoint"],["self"]],["bool"]]],[11,"partial_cmp","","",9,[[["self"],["terminationreason"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","argmin::solver::conjugategradient::beta","",47,[[["self"],["fletcherreeves"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",48,[[["polakribiere"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",49,[[["self"],["polakribiereplus"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",50,[[["hestenesstiefel"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","argmin::solver::trustregion::cauchypoint","",75,[[["self"],["cauchypoint"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",75,[[["self"],["cauchypoint"]],["bool"]]],[11,"le","","",75,[[["self"],["cauchypoint"]],["bool"]]],[11,"gt","","",75,[[["self"],["cauchypoint"]],["bool"]]],[11,"ge","","",75,[[["self"],["cauchypoint"]],["bool"]]],[11,"partial_cmp","argmin::solver::trustregion::dogleg","",76,[[["self"],["dogleg"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",76,[[["self"],["dogleg"]],["bool"]]],[11,"le","","",76,[[["self"],["dogleg"]],["bool"]]],[11,"gt","","",76,[[["self"],["dogleg"]],["bool"]]],[11,"ge","","",76,[[["self"],["dogleg"]],["bool"]]],[11,"partial_cmp","argmin::solver::trustregion::steihaug","",77,[[["steihaug"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",77,[[["steihaug"],["self"]],["bool"]]],[11,"le","","",77,[[["steihaug"],["self"]],["bool"]]],[11,"gt","","",77,[[["steihaug"],["self"]],["bool"]]],[11,"ge","","",77,[[["steihaug"],["self"]],["bool"]]],[11,"fmt","argmin::core","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","argmin::solver::brent","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","argmin::solver::conjugategradient::beta","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","argmin::solver::linesearch::condition","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","argmin::solver::particleswarm","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","argmin::solver::simulatedannealing","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","argmin::solver::trustregion::cauchypoint","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","argmin::solver::trustregion::dogleg","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","argmin::solver::trustregion::steihaug","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","argmin::core","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","argmin::solver::brent","",43,[[["self"],["formatter"]],["result"]]],[11,"hash","argmin::core","",1,[[["self"],["__h"]]]],[11,"hash","","",11,[[["self"],["__h"]]]],[11,"hash","","",12,[[["self"],["__h"]]]],[11,"hash","","",8,[[["self"],["__h"]]]],[11,"hash","","",18,[[["self"],["__h"]]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"hash","argmin::solver::conjugategradient::beta","",47,[[["self"],["__h"]]]],[11,"hash","","",48,[[["self"],["__h"]]]],[11,"hash","","",49,[[["self"],["__h"]]]],[11,"hash","","",50,[[["self"],["__h"]]]],[11,"from_iter","argmin::core","",1,[[["intoiterator"]],["self"]]],[11,"serialize","argmin::core::executor","",10,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::core","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","","",11,[[["self"],["__s"]],["result"]]],[11,"serialize","","",12,[[["self"],["__s"]],["result"]]],[11,"serialize","","",6,[[["self"],["__s"]],["result"]]],[11,"serialize","","",13,[[["self"],["__s"]],["result"]]],[11,"serialize","","",7,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",8,[[["self"],["__s"]],["result"]]],[11,"serialize","","",18,[[["self"],["__s"]],["result"]]],[11,"serialize","","",9,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::brent","",44,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::conjugategradient::cg","",45,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::conjugategradient::nonlinear_cg","",46,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::conjugategradient::beta","",47,[[["self"],["__s"]],["result"]]],[11,"serialize","","",48,[[["self"],["__s"]],["result"]]],[11,"serialize","","",49,[[["self"],["__s"]],["result"]]],[11,"serialize","","",50,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::gaussnewton::gaussnewton_linesearch","",51,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::gaussnewton::gaussnewton_method","",52,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::gradientdescent::steepestdescent","",53,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::landweber","",54,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::linesearch::backtracking","",55,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::linesearch::condition","",57,[[["self"],["__s"]],["result"]]],[11,"serialize","","",58,[[["self"],["__s"]],["result"]]],[11,"serialize","","",59,[[["self"],["__s"]],["result"]]],[11,"serialize","","",60,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::linesearch::hagerzhang","",61,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::linesearch::morethuente","",62,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::neldermead","",63,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::newton::newton_cg","",64,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::newton::newton_method","",65,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::particleswarm","",67,[[["self"],["__s"]],["result"]]],[11,"serialize","","",66,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::quasinewton::bfgs","",68,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::quasinewton::dfp","",69,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::quasinewton::lbfgs","",70,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::quasinewton::sr1","",71,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::quasinewton::sr1_trustregion","",72,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::simulatedannealing","",73,[[["self"],["__s"]],["result"]]],[11,"serialize","","",74,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::trustregion::cauchypoint","",75,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::trustregion::dogleg","",76,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::trustregion::steihaug","",77,[[["self"],["__s"]],["result"]]],[11,"serialize","argmin::solver::trustregion::trustregion_method","",78,[[["self"],["__s"]],["result"]]],[11,"deserialize","argmin::core::executor","",10,[[["__d"]],["result"]]],[11,"deserialize","argmin::core","",0,[[["__d"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"deserialize","","",11,[[["__d"]],["result"]]],[11,"deserialize","","",12,[[["__d"]],["result"]]],[11,"deserialize","","",6,[[["__d"]],["result"]]],[11,"deserialize","","",13,[[["__d"]],["result"]]],[11,"deserialize","","",7,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"deserialize","","",8,[[["__d"]],["result"]]],[11,"deserialize","","",18,[[["__d"]],["result"]]],[11,"deserialize","","",9,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::brent","",44,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::conjugategradient::cg","",45,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::conjugategradient::nonlinear_cg","",46,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::conjugategradient::beta","",47,[[["__d"]],["result"]]],[11,"deserialize","","",48,[[["__d"]],["result"]]],[11,"deserialize","","",49,[[["__d"]],["result"]]],[11,"deserialize","","",50,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::gaussnewton::gaussnewton_linesearch","",51,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::gaussnewton::gaussnewton_method","",52,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::gradientdescent::steepestdescent","",53,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::landweber","",54,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::linesearch::backtracking","",55,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::linesearch::condition","",57,[[["__d"]],["result"]]],[11,"deserialize","","",58,[[["__d"]],["result"]]],[11,"deserialize","","",59,[[["__d"]],["result"]]],[11,"deserialize","","",60,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::linesearch::hagerzhang","",61,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::linesearch::morethuente","",62,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::neldermead","",63,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::newton::newton_cg","",64,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::newton::newton_method","",65,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::particleswarm","",67,[[["__d"]],["result"]]],[11,"deserialize","","",66,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::quasinewton::bfgs","",68,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::quasinewton::dfp","",69,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::quasinewton::lbfgs","",70,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::quasinewton::sr1","",71,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::quasinewton::sr1_trustregion","",72,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::simulatedannealing","",73,[[["__d"]],["result"]]],[11,"deserialize","","",74,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::trustregion::cauchypoint","",75,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::trustregion::dogleg","",76,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::trustregion::steihaug","",77,[[["__d"]],["result"]]],[11,"deserialize","argmin::solver::trustregion::trustregion_method","",78,[[["__d"]],["result"]]],[11,"serialize","argmin::core","",2,[[["record"],["self"],["serializer"]],["result"]]],[11,"serialize","","",0,[[["record"],["self"],["serializer"]],["result"]]],[11,"new","","Create a new error object from any error type.",79,[[["e"]],["error"]]],[11,"msg","","Create a new error object from a printable error message.",79,[[["m"]],["error"]]],[11,"context","","Wrap the error value with additional context.",79,[[["c"]],["error"]]],[11,"chain","","An iterator of the chain of source errors contained by…",79,[[["self"]],["chain"]]],[11,"root_cause","","The lowest level cause of this error — this error's…",79,[[["self"]],["error"]]],[11,"is","","Returns true if `E` is the type held by this error object.",79,[[["self"]],["bool"]]],[11,"downcast","","Attempt to downcast the error object to a concrete type.",79,[[],[["result",["error"]],["error"]]]],[11,"downcast_ref","","Downcast this error object by reference.",79,[[["self"]],[["option"],["e"]]]],[11,"downcast_mut","","Downcast this error object by mutable reference.",79,[[["self"]],[["option"],["e"]]]],[11,"observe_init","","Called once at the beginning of the execution of the solver.",36,[[["str"],["self"],["argminkv"]],[["result",["error"]],["error"]]]],[11,"observe_iter","","Called at every iteration of the solver",36,[[["self"],["iterstate"],["argminkv"]],[["result",["error"]],["error"]]]]],"p":[[3,"IterState"],[3,"ArgminKV"],[3,"ArgminSlogKV"],[3,"OpWrapper"],[3,"ArgminResult"],[4,"ArgminError"],[4,"WriteToFileSerializer"],[4,"ObserverMode"],[4,"CheckpointMode"],[4,"TerminationReason"],[3,"Executor"],[3,"NoOperator"],[3,"MinimalNoOperator"],[3,"WriteToFile"],[3,"ArgminSlogLogger"],[3,"Visualizer3d"],[3,"Surface"],[3,"Observer"],[3,"ArgminCheckpoint"],[8,"ArgminDot"],[8,"ArgminWeightedDot"],[8,"ArgminZero"],[8,"ArgminConj"],[8,"ArgminZeroLike"],[8,"ArgminEye"],[8,"ArgminAdd"],[8,"ArgminSub"],[8,"ArgminMul"],[8,"ArgminDiv"],[8,"ArgminScaledAdd"],[8,"ArgminScaledSub"],[8,"ArgminNorm"],[8,"ArgminTranspose"],[8,"ArgminInv"],[8,"ArgminRandom"],[8,"ArgminMinMax"],[8,"Observe"],[8,"ArgminOp"],[8,"Solver"],[8,"ArgminLineSearch"],[8,"ArgminTrustRegion"],[8,"ArgminNLCGBetaUpdate"],[3,"ArgminIterData"],[4,"BrentError"],[3,"Brent"],[3,"ConjugateGradient"],[3,"NonlinearConjugateGradient"],[3,"FletcherReeves"],[3,"PolakRibiere"],[3,"PolakRibierePlus"],[3,"HestenesStiefel"],[3,"GaussNewtonLS"],[3,"GaussNewton"],[3,"SteepestDescent"],[3,"Landweber"],[3,"BacktrackingLineSearch"],[8,"LineSearchCondition"],[3,"ArmijoCondition"],[3,"WolfeCondition"],[3,"StrongWolfeCondition"],[3,"GoldsteinCondition"],[3,"HagerZhangLineSearch"],[3,"MoreThuenteLineSearch"],[3,"NelderMead"],[3,"NewtonCG"],[3,"Newton"],[3,"Particle"],[3,"ParticleSwarm"],[3,"BFGS"],[3,"DFP"],[3,"LBFGS"],[3,"SR1"],[3,"SR1TrustRegion"],[4,"SATempFunc"],[3,"SimulatedAnnealing"],[3,"CauchyPoint"],[3,"Dogleg"],[3,"Steihaug"],[3,"TrustRegion"],[3,"Error"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);