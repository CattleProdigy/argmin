var N=null,E="",T="t",U="u",searchIndex={};
var R=["argmin","Executor","argmin::prelude","Calculation of the Jacobian J(x) of a vector function `fs`…","Calculation of the product of the Jacobian J(x) of a…","Calculation of the product of the Hessian H(x) of a…","Hessian","opwrapper","iterstate","result","terminationreason","Set the initial step length","Compute the l2-norm (`U`) of `self`","operator","arraybase","argmin::prelude::modcholesky","decomposition","Subtract a `T` from `self`","Dot/scalar product of `T` and `self`","(Pointwise) Divide a `T` by `self`","argmin::prelude::ArgminError","Return zero(s)","Number of gradient evaluations so far","Subtract a `T` scaled by an `U` from `self`","Add a `T` to `self`","(Pointwise) Multiply a `T` with `self`","Add a `T` scaled by an `U` to `self`","argminkv","cost_func_count","grad_func_count","hessian_func_count","modify_func_count","argmin::solver::conjugategradient","Constructor","argmin::solver","argmin::solver::linesearch","set alpha limits","argmin::solver::newton","set gamma","argmin::solver::quasinewton","References:","argmin::solver::trustregion","max_iters","Rastrigin test function","Ackley test function","argmin::prelude::executor","argmin::prelude::finitediff","try_from","borrow_mut","try_into","to_owned","clone_into","type_id","borrow","typeid","to_string","string","argmin::prelude::slog_logger","argmin::prelude::file","argmin::solver::conjugategradient::cg","argmin::solver::conjugategradient::nonlinear_cg","argmin::solver::conjugategradient::beta","argmin::solver::gradientdescent::steepestdescent","argmin::solver::landweber","argmin::solver::linesearch::backtracking","argmin::solver::linesearch::condition","argmin::solver::linesearch::hagerzhang","argmin::solver::linesearch::morethuente","argmin::solver::newton::newton_cg","argmin::solver::newton::newton_method","argmin::solver::quasinewton::bfgs","argmin::solver::quasinewton::dfp","argmin::solver::quasinewton::sr1","argmin::solver::simulatedannealing","argmin::solver::trustregion::cauchypoint","argmin::solver::trustregion::dogleg","argmin::solver::trustregion::steihaug","argmin::solver::trustregion::trustregion_method","gradient","Do nothing, really.","hessian","nooperator","writetofile","checkpointmode","argmincheckpoint","observermode","argminresult","argminiterdata","writetofileserializer","minimalnooperator","serialize","formatter","observe_iter","observe_init","deserialize","executor","partial_cmp","ordering","option","backtrace","serializer","default","perturbationvector","requires_cur_grad","cauchypoint","steihaug","fletcherreeves","polakribiere","polakribiereplus","hestenesstiefel","conjugategradient","armijocondition","wolfecondition","strongwolfecondition","goldsteincondition","satempfunc","next_iter","terminate","Perform one iteration of SA algorithm","set_search_direction","set_init_alpha","Set search direction","Set initial alpha value","set_radius","target_cost","termination_reason","Attempts to downcast this `Error` to a particular `Fail`…","argminsloglogger","observer","best_param","best_cost","last_best_iter","get_param","get_termination_reason","get_hessian","terminated","FiniteDiff","PerturbationVector","ArgminLineSearch","ArgminTrustRegion","ArgminNLCGBetaUpdate","ArgminNorm","ArgminZero","ArgminResult","ModCholeskyGMW81","Decomposition","GershgorinCircles","ModCholeskySE99","ModCholeskySE90","ArgminSub","ArgminDot","ArgminDiv","ArgminInv","ArgminError","ObserverMode","ArgminZeroLike","ArgminWeightedDot","ArgminSlogKV","ArgminMinMax","IterState","ArgminScaledSub","ArgminAdd","ArgminMul","ArgminTranspose","ArgminScaledAdd","ArgminRandom","WriteToFileSerializer","ArgminEye","TerminationReason","OpWrapper","CheckpointMode","ConjugateGradient","NonlinearConjugateGradient","FletcherReeves","PolakRibiere","PolakRibierePlus","HestenesStiefel","SteepestDescent","Landweber","BacktrackingLineSearch","LineSearchCondition","ArmijoCondition","WolfeCondition","StrongWolfeCondition","GoldsteinCondition","HagerZhangLineSearch","MoreThuenteLineSearch","SATempFunc","SimulatedAnnealing","CauchyPoint","TrustRegion","ArgminIterData","ArgminCheckpoint","WriteToFile","MinimalNoOperator","ArgminSlogLogger","NoOperator"];

searchIndex[R[0]]={"doc":"A pure Rust optimization framework","i":[[0,"prelude",R[0],"Definition of all relevant traits and types # Re-export of…",N,N],[0,"macros",R[2],"Macros # Macros",N,N],[0,R[95],E,R[1],N,N],[3,R[1],R[45],E,N,N],[0,"finitediff",R[2],"Finite Differentiation",N,N],[8,R[136],R[46],E,N,N],[16,"Jacobian",E,E,0,N],[16,R[6],E,E,0,N],[16,"OperatorOutput",E,E,0,N],[10,"forward_diff",E,"Forward difference calculated as",0,[[["self"],["fn"]],["self"]]],[10,"central_diff",E,"Central difference calculated as",0,[[["self"],["fn"]],["self"]]],[10,"forward_jacobian",E,R[3],0,N],[10,"central_jacobian",E,R[3],0,N],[10,"forward_jacobian_vec_prod",E,R[4],0,[[["self"],["fn"],["self"]],["self"]]],[10,"central_jacobian_vec_prod",E,R[4],0,[[["self"],["fn"],["self"]],["self"]]],[10,"forward_jacobian_pert",E,E,0,N],[10,"central_jacobian_pert",E,E,0,N],[10,"forward_hessian",E,"Calculation of the Hessian using forward differences",0,N],[10,"central_hessian",E,"Calculation of the Hessian using central differences",0,N],[10,"forward_hessian_vec_prod",E,R[5],0,[[["self"],["fn"],["self"]],["self"]]],[10,"central_hessian_vec_prod",E,R[5],0,[[["self"],["fn"],["self"]],["self"]]],[10,"forward_hessian_nograd",E,"Calculation of the Hessian using forward differences…",0,N],[10,"forward_hessian_nograd_sparse",E,"Calculation of a sparse Hessian using forward differences…",0,N],[3,R[137],E,"Perturbation Vector for the accelerated computation of the…",N,N],[12,"x_idx",E,"x indices",1,N],[12,"r_idx",E,"correspoding function indices",1,N],[6,"PerturbationVectors",E,"A collection of `PerturbationVector`s",N,N],[8,"ArgminOp",R[2],"This trait needs to be implemented for every operator/cost…",N,N],[16,"Param",E,"Type of the parameter vector",2,N],[16,"Output",E,"Output of the operator",2,N],[16,R[6],E,"Type of Hessian",2,N],[11,"apply",E,"Applies the operator/cost function to parameters",2,N],[11,R[78],E,"Computes the gradient at the given parameters",2,N],[11,R[80],E,"Computes the hessian at the given parameters",2,N],[11,"modify",E,"Modifies a parameter vector. Comes with a variable that…",2,N],[8,"Solver",E,E,N,N],[18,"NAME",E,E,3,N],[10,R[116],E,"Computes one iteration of the algorithm.",3,[[["self"],[R[7]],[R[8]]],[R[9],[R[87],"error"]]]],[11,"init",E,"Initializes the algorithm",3,[[["self"],[R[7]],[R[8]]],[R[9],[R[98],"error"]]]],[11,"terminate_internal",E,"Checks whether basic termination reasons apply.",3,[[["self"],[R[8]]],[R[10]]]],[11,R[117],E,"Checks whether the algorithm must be terminated",3,[[["self"],[R[8]]],[R[10]]]],[3,R[191],E,"The datastructure which is returned by the `next_iter`…",N,N],[8,R[138],E,"Defines a common interface for line search methods.",N,N],[10,R[119],E,"Set the search direction",4,N],[10,R[120],E,R[11],4,[[["self"],["f64"]],[R[9],["error"]]]],[8,R[139],E,"Defines a common interface to methods which calculate…",N,N],[10,R[123],E,R[11],5,N],[8,R[140],E,"Common interface for beta update methods (Nonlinear-CG)",N,N],[10,"update",E,"Update beta Parameter 1: \\nabla f_k Parameter 2: \\nabla…",6,[[["self"],[T],[T],[T]],["f64"]]],[8,R[141],E,R[12],N,N],[10,"norm",E,R[12],7,[[["self"]],[U]]],[8,R[142],E,"Return param vector of all zeros (for now, this is a hack.…",N,N],[10,"zero",E,R[21],8,[[],["self"]]],[3,R[192],E,E,N,N],[3,R[193],E,E,N,N],[3,R[143],E,"This is returned by the `Executor` after the solver is run…",N,N],[12,R[13],E,R[13],9,N],[12,"state",E,"iteration state",9,N],[0,"modcholesky",E,"Modified Cholesky decompositions Modified Cholesky…",N,N],[8,R[144],R[15],"Gill, Murray and Wright (1981)",N,N],[11,"mod_cholesky_gmw81",E,"Computes the modified Cholesky decomposition with the…",10,[[["self"]],[R[16]]]],[3,R[145],E,E,N,N],[12,"l",E,E,11,N],[12,"e",E,E,11,N],[12,"p",E,E,11,N],[8,R[146],E,"Gershgorin circles",N,N],[10,"gershgorin_circles",E,"Computes the Gershgorin Circles of a matrix",12,[[["self"]],["vec"]]],[0,"utils",E,"Utility functions",N,N],[5,"eigenvalues_2x2","argmin::prelude::modcholesky::utils","Computes the Eigenvalues of a 2x2 matrix",N,N],[5,"swap_columns",E,"Swaps columns `idx1` and `idx2` of matrix `mat`",N,N],[5,"swap_rows",E,"Swaps rows `idx1` and `idx2` of matrix `mat`",N,N],[5,"index_of_largest",E,"Returns the index of the largest element in a 1D array",N,[[[R[14]]],["usize"]]],[5,"index_of_largest_abs",E,"Returns the index of the element with the largest absolute…",N,[[[R[14]]],["usize"]]],[5,"index_to_permutation_mat",E,"Returns the permutation matrix for a vector of permuted…",N,N],[5,"diag_mat_from_arr",E,"Builds a diagonal matrix from a 1D slice",N,N],[5,"random_householder",E,"Returns a random Householder matrix of dimension `dim` and…",N,[[["usize"],["u8"]],[R[14],["ownedrepr","dim"]]]],[5,"random_diagonal",E,"Returns a random diagonal matrix with Eigenvalues…",N,N],[8,R[147],R[15],"Schnabel & Eskow algorithm (1999)",N,N],[11,"mod_cholesky_se99",E,"Computes the modified Cholesky decomposition with the SE99…",13,[[["self"]],[R[16]]]],[8,R[148],E,"Schnabel & Eskow algorithm (1990)",N,N],[11,"mod_cholesky_se90",E,"Computes the modified Cholesky decomposition with the SE90…",14,[[["self"]],[R[16]]]],[8,R[149],R[2],R[17],N,N],[10,"sub",E,R[17],15,[[["self"],[T]],[U]]],[8,R[150],E,R[18],N,N],[10,"dot",E,R[18],16,[[["self"],[T]],[U]]],[3,R[194],E,E,N,N],[14,"check_param",E,"Release an `T` from an `Option<T>` if it is not `None`. If…",N,N],[8,R[151],E,R[19],N,N],[10,"div",E,R[19],17,[[["self"],[T]],[U]]],[3,"ArgminKV",E,"A simple key-value storage",N,N],[12,"kv",E,"The actual key value storage",18,N],[8,R[152],E,"Compute the inverse (`T`) of `self`",N,N],[10,"inv",E,E,19,[[["self"]],[R[9],["error"]]]],[4,R[153],E,E,N,N],[13,"InvalidParameter",E,"Indicates and invalid parameter",20,N],[12,"text",R[20],E,20,N],[13,"NotImplemented",R[2],"Indicates that a function is not implemented",20,N],[12,"text",R[20],E,20,N],[13,"NotInitialized",R[2],"Indicates that a function is not initialized",20,N],[12,"text",R[20],E,20,N],[13,"ConditionViolated",R[2],"Indicates that a condition is violated",20,N],[12,"text",R[20],E,20,N],[13,"CheckpointNotFound",R[2],"Checkpoint was not found",20,N],[12,"text",R[20],E,20,N],[13,"ImpossibleError",R[2],"Indicates an impossible error",20,N],[12,"text",R[20],E,20,N],[4,R[154],R[2],"This is used to indicate how often the observer will…",N,N],[13,"Never",E,E,21,N],[13,"Always",E,E,21,N],[13,"Every",E,E,21,N],[13,"NewBest",E,E,21,N],[3,"Error",E,"The `Error` type, which can contain any failure.",N,N],[8,R[155],E,"Zero for dynamically sized objects",N,N],[10,"zero_like",E,R[21],22,[[["self"]],["self"]]],[8,R[156],E,"Dot/scalar product of `T` and `self` weighted by W (p^TWv)",N,N],[10,"weighted_dot",E,R[18],23,[[["self"],["v"],[T]],[U]]],[0,"slog_logger",E,"Loggers based on the `slog` crate",N,N],[3,R[195],R[57],"A logger based on `slog`",N,N],[3,R[157],E,"This type is necessary in order to be able to implement…",N,N],[12,"kv",E,E,24,N],[3,R[196],R[2],"Fake Operators for testing No-op operator with free choice…",N,N],[14,"make_kv",E,"Creates an `ArgminKV` at compile time in order to avoid…",N,N],[5,"load_checkpoint",E,E,N,[[["p"]],[R[9],["error"]]]],[3,"Observer",E,"Container for observers which acts just like a single…",N,N],[8,R[158],E,E,N,N],[10,"min",E,"Select piecewise minimum / maximum",25,[[["self"],["self"]],["self"]]],[10,"max",E,E,25,[[["self"],["self"]],["self"]]],[3,R[159],E,E,N,N],[12,"param",E,"Current parameter vector",26,N],[12,"prev_param",E,"Previous parameter vector",26,N],[12,R[129],E,"Current best parameter vector",26,N],[12,"prev_best_param",E,"Previous best parameter vector",26,N],[12,"cost",E,"Current cost function value",26,N],[12,"prev_cost",E,"Previous cost function value",26,N],[12,R[130],E,"Current best cost function value",26,N],[12,"prev_best_cost",E,"Previous best cost function value",26,N],[12,R[124],E,"Target cost function value",26,N],[12,"grad",E,"Current gradient",26,N],[12,"prev_grad",E,"Previous gradient",26,N],[12,R[80],E,"Current Hessian",26,N],[12,"prev_hessian",E,"Previous Hessian",26,N],[12,"iter",E,"Current iteration",26,N],[12,R[131],E,"Iteration number of last best cost",26,N],[12,R[42],E,"Maximum number of iterations",26,N],[12,R[28],E,"Number of cost function evaluations so far",26,N],[12,R[29],E,R[22],26,N],[12,R[30],E,R[22],26,N],[12,R[31],E,"Number of modify evaluations so far",26,N],[12,"time",E,"Time required so far",26,N],[12,R[125],E,"Reason of termination",26,N],[8,R[160],E,R[23],N,N],[10,"scaled_sub",E,R[23],27,[[["self"],[U],[T]],["v"]]],[8,R[161],E,R[24],N,N],[10,"add",E,R[24],28,[[["self"],[T]],[U]]],[8,R[162],E,R[25],N,N],[10,"mul",E,R[25],29,[[["self"],[T]],[U]]],[14,"trait_bound",E,"Reuse a list of trait bounds by giving it a name, e.g.…",N,N],[8,R[163],E,E,N,N],[10,T,E,E,30,[[["self"]],["self"]]],[8,R[164],E,R[26],N,N],[10,"scaled_add",E,R[26],31,[[["self"],[U],[T]],["v"]]],[8,"Observe",E,"Defines the interface every Observer needs to expose",N,N],[11,R[93],E,"Called once at the beginning of the execution of the solver.",32,[[["self"],["str"],[R[27]]],[R[9],["error"]]]],[11,R[92],E,"Called at every iteration of the solver",32,[[["self"],[R[8]],[R[27]]],[R[9],["error"]]]],[8,R[165],E,E,N,N],[10,"rand_from_range",E,"Get a random element between min and max,",33,[[["self"],["self"]],["self"]]],[0,"file",E,"Output parameter vectors to file",N,N],[4,R[166],R[58],E,N,N],[13,"Bincode",E,E,34,N],[13,"JSON",E,E,34,N],[8,R[167],R[2],E,N,N],[10,"eye",E,E,35,[[["usize"]],["self"]]],[10,"eye_like",E,E,35,[[["self"]],["self"]]],[4,R[168],E,"Indicates why the optimization algorithm stopped",N,N],[13,"NotTerminated",E,"In case it has not terminated yet",36,N],[13,"MaxItersReached",E,"Maximum number of iterations reached",36,N],[13,"TargetCostReached",E,"Target cost function value reached",36,N],[13,"TargetPrecisionReached",E,"Target precision reached",36,N],[13,"NoChangeInCost",E,"Cost function value did not change",36,N],[13,"AcceptedStallIterExceeded",E,"Acceped stall iter exceeded",36,N],[13,"BestStallIterExceeded",E,"Best stall iter exceeded",36,N],[13,"LineSearchConditionMet",E,"Condition for Line search met",36,N],[13,"Aborted",E,"Aborted",36,N],[3,R[169],E,"This wraps an operator and keeps track of how often the…",N,N],[12,R[28],E,E,37,N],[12,R[29],E,E,37,N],[12,R[30],E,E,37,N],[12,R[31],E,E,37,N],[4,R[170],E,E,N,N],[13,"Never",E,E,38,N],[13,"Every",E,E,38,N],[13,"Always",E,E,38,N],[0,"solver",R[0],"Solvers",N,N],[0,R[110],R[34],"Conjugate Gradient methods",N,N],[0,"cg",R[32],"Conjugate gradient method # References:",N,N],[3,R[171],R[59],"The conjugate gradient method is a solver for systems of…",N,N],[11,"new",E,R[33],39,[[["p"]],[R[9],["error"]]]],[11,"p",E,"Return the current search direction (This is needed by…",39,[[["self"]],["p"]]],[11,"p_prev",E,"Return the previous search direction (This is needed by…",39,[[["self"]],["p"]]],[11,"residual",E,"Return the current residual (This is needed by NewtonCG…",39,[[["self"]],["p"]]],[0,"nonlinear_cg",R[32],"Nonlinear conjugate gradient method Important TODO: Find…",N,N],[3,R[172],R[60],"The nonlinear conjugate gradient is a generalization of…",N,N],[11,"new",E,"Constructor (Polak Ribiere Conjugate Gradient (PR-CG))",40,[[["l"],["b"]],[R[9],["error"]]]],[11,"restart_iters",E,"Specifiy the number of iterations after which a restart…",40,[[["self"],["u64"]],["self"]]],[11,"restart_orthogonality",E,"Set the value for the orthogonality measure. Setting this…",40,[[["self"],["f64"]],["self"]]],[0,"beta",R[32],"Beta update methods for nonlinear CG # Beta update methods",N,N],[3,R[173],R[61],"Fletcher and Reeves (FR) method TODO: Reference",N,N],[3,R[174],E,"Polak and Ribiere (PR) method TODO: Reference",N,N],[3,R[175],E,"Polak and Ribiere Plus (PR+) method TODO: Reference",N,N],[3,R[176],E,"Hestenes and Stiefel (HS) method TODO: Reference",N,N],[11,"new",E,R[33],41,[[],["self"]]],[11,"new",E,R[33],42,[[],["self"]]],[11,"new",E,R[33],43,[[],["self"]]],[11,"new",E,R[33],44,[[],["self"]]],[0,"gradientdescent",R[34],"Gradient descent methods",N,N],[0,"steepestdescent","argmin::solver::gradientdescent","Steepest Descent method",N,N],[3,R[177],R[62],"Steepest descent iteratively takes steps in the direction…",N,N],[11,"new",E,R[33],45,[[["l"]],["self"]]],[0,"landweber",R[34],"Landweber iteration",N,N],[3,R[178],R[63],"The Landweber iteration is a solver for ill-posed linear…",N,N],[11,"new",E,R[33],46,[[["f64"]],["self"]]],[0,"linesearch",R[34],"Line search methods",N,N],[0,"backtracking",R[35],"Backtracking line search algorithm * Backtracking line…",N,N],[3,R[179],R[64],"The Backtracking line search is a simple method to find a…",N,N],[11,"new",E,R[33],47,[[["l"]],["self"]]],[11,"rho",E,"Set rho",47,[[["self"],["f64"]],[R[9],["error"]]]],[0,"condition",R[35],"Acceptance conditions # References:",N,N],[3,R[181],R[65],"Armijo Condition",N,N],[3,R[182],E,"Wolfe Condition",N,N],[3,R[183],E,"Strong Wolfe conditions",N,N],[3,R[184],E,"Goldstein conditions",N,N],[8,R[180],E,"Needs to be implemented by everything that wants to be a…",N,N],[10,"eval",E,"Evaluate the condition",48,[[["self"],["f64"],[T],["f64"],[T],[T],["f64"]],["bool"]]],[10,R[103],E,"Indicates whether this condition requires the computation…",48,[[["self"]],["bool"]]],[11,"new",E,R[33],49,[[["f64"]],[R[9],["error"]]]],[11,"new",E,R[33],50,[[["f64"],["f64"]],[R[9],["error"]]]],[11,"new",E,R[33],51,[[["f64"],["f64"]],[R[9],["error"]]]],[11,"new",E,R[33],52,[[["f64"]],[R[9],["error"]]]],[0,"hagerzhang",R[35],"Hager-Zhang line search algorithm * Hager-Zhang line search",N,N],[3,R[185],R[66],"The Hager-Zhang line search is a method to find a step…",N,N],[11,"new",E,R[33],53,[[],["self"]]],[11,"delta",E,"set delta",53,[[["self"],["f64"]],[R[9],["error"]]]],[11,"sigma",E,"set sigma",53,[[["self"],["f64"]],[R[9],["error"]]]],[11,"epsilon",E,"set epsilon",53,[[["self"],["f64"]],[R[9],["error"]]]],[11,"theta",E,"set theta",53,[[["self"],["f64"]],[R[9],["error"]]]],[11,"gamma",E,R[38],53,[[["self"],["f64"]],[R[9],["error"]]]],[11,"eta",E,"set eta",53,[[["self"],["f64"]],[R[9],["error"]]]],[11,"alpha",E,R[36],53,[[["self"],["f64"],["f64"]],[R[9],["error"]]]],[0,"morethuente",R[35],"More-Thuente line search algorithm * More-Thuente line…",N,N],[3,R[186],R[67],"The More-Thuente line search is a method to find a step…",N,N],[11,"new",E,R[33],54,[[],["self"]]],[11,"c",E,"Set c1 and c2 where 0 < c1 < c2 < 1.",54,[[["self"],["f64"],["f64"]],[R[9],["error"]]]],[11,"alpha",E,R[36],54,[[["self"],["f64"],["f64"]],[R[9],["error"]]]],[0,"newton",R[34],"Newton Methods",N,N],[0,"newton_cg",R[37],"Newton-CG method TODO: Stop when search direction is close…",N,N],[3,"NewtonCG",R[68],"The Newton-CG method (also called truncated Newton method)…",N,N],[11,"new",E,R[33],55,[[["l"]],["self"]]],[11,"curvature_threshold",E,"Set curvature threshold",55,[[["self"],["f64"]],["self"]]],[0,"newton_method",R[37],"Newton's method # References:",N,N],[3,"Newton",R[69],"Newton's method iteratively finds the stationary points of…",N,N],[11,"new",E,R[33],56,[[],["self"]]],[11,"set_gamma",E,R[38],56,[[["self"],["f64"]],[R[9],["error"]]]],[0,"quasinewton",R[34],"Quasi-Newton methods",N,N],[0,"bfgs",R[39],R[40],N,N],[3,"BFGS",R[70],"BFGS method",N,N],[11,"new",E,R[33],57,[[["h"],["l"]],["self"]]],[0,"dfp",R[39],R[40],N,N],[3,"DFP",R[71],"DFP method",N,N],[11,"new",E,R[33],58,[[["h"],["l"]],["self"]]],[0,"sr1",R[39],R[40],N,N],[3,"SR1",R[72],"SR1 method",N,N],[11,"new",E,R[33],59,[[["h"],["l"]],["self"]]],[0,"simulatedannealing",R[34],E,N,N],[3,R[188],R[73],"Simulated Annealing",N,N],[4,R[187],E,"Temperature functions for Simulated Annealing.",N,N],[13,"TemperatureFast",E,"`t_i = t_init / i`",60,N],[13,"Boltzmann",E,"`t_i = t_init / ln(i)`",60,N],[13,"Exponential",E,"`t_i = t_init * x^i`",60,N],[11,"new",E,R[33],61,[[["f64"]],[R[9],["error"]]]],[11,"temp_func",E,"Set temperature function to one of the options in…",61,[[["self"],[R[115]]],["self"]]],[11,"stall_accepted",E,"The optimization stops after there has been no accepted…",61,[[["self"],["u64"]],["self"]]],[11,"stall_best",E,"The optimization stops after there has been no new best…",61,[[["self"],["u64"]],["self"]]],[11,"reannealing_fixed",E,"Start reannealing after `iter` iterations",61,[[["self"],["u64"]],["self"]]],[11,"reannealing_accepted",E,"Start reannealing after no accepted solution has been…",61,[[["self"],["u64"]],["self"]]],[11,"reannealing_best",E,"Start reannealing after no new best solution has been…",61,[[["self"],["u64"]],["self"]]],[0,"trustregion",R[34],"Argmin Trust region methods",N,N],[5,"reduction_ratio",R[41],"Computes reduction ratio",N,[[["f64"],["f64"],["f64"],["f64"]],["f64"]]],[0,R[104],E,"Cauchy Point # References:",N,N],[3,R[189],R[74],"The Cauchy point is the minimum of the quadratic…",N,N],[11,"new",E,R[33],62,[[],["self"]]],[0,"dogleg",R[41],"Dogleg method # References:",N,N],[3,"Dogleg",R[75],"The Dogleg method computes the intersection of the trust…",N,N],[11,"new",E,R[33],63,[[],["self"]]],[0,R[105],R[41],"Steihaug method # References:",N,N],[3,"Steihaug",R[76],"The Steihaug method is a conjugate gradients based…",N,N],[11,"new",E,R[33],64,[[],["self"]]],[11,"epsilon",E,"Set epsilon",64,[[["self"],["f64"]],[R[9],["error"]]]],[11,R[42],E,"set maximum number of iterations",64,[[["self"],["u64"]],["self"]]],[0,"trustregion_method",R[41],"Trust region solver # References:",N,N],[3,R[190],R[77],"The trust region method approximates the cost function…",N,N],[11,"new",E,R[33],65,[[["r"]],["self"]]],[11,"radius",E,"set radius",65,[[["self"],["f64"]],["self"]]],[11,"max_radius",E,"Set maximum radius",65,[[["self"],["f64"]],["self"]]],[11,"eta",E,"Set eta",65,[[["self"],["f64"]],[R[9],["error"]]]],[0,"testfunctions",R[0],"Testfunctions # Testfunctions",N,N],[5,"mccorminck","argmin::testfunctions","McCorminck test function",N,N],[5,"himmelblau",E,"Himmelblau test function",N,N],[5,"sphere_derivative",E,"Derivative of sphere test function",N,N],[5,"schaffer_n2",E,"Schaffer test function No. 2",N,N],[5,"holder_table",E,"Holder table test function",N,N],[5,"rosenbrock_2d_hessian",E,"Hessian of 2D Rosenbrock function",N,N],[5,"rastrigin",E,R[43],N,N],[5,"rosenbrock_2d",E,"2D Rosenbrock test function",N,N],[5,"ackley",E,R[44],N,N],[5,"zero",E,"Zero test function",N,N],[5,"goldsteinprice",E,"Goldstein-Price test function",N,N],[5,"matyas",E,"Matyas test function",N,N],[5,"schaffer_n4",E,"Schaffer test function No. 4",N,N],[5,"booth",E,"Booth test function",N,N],[5,"eggholder",E,"Eggholder test function",N,N],[5,"picheny",E,"Picheny test function",N,N],[5,"rastrigin_a",E,R[43],N,N],[5,"levy_n13",E,"Levy test function No. 13",N,N],[5,"cross_in_tray",E,"Cross-in-tray test function",N,N],[5,"sphere",E,"Sphere test function",N,N],[5,"zero_derivative",E,"Derivative of zero test function",N,N],[5,"threehumpcamel",E,"Three-hump camel test function",N,N],[5,"styblinski_tang",E,"Styblinski-Tang test function",N,N],[5,"levy",E,"Levy test function",N,N],[5,"rosenbrock_2d_derivative",E,"Derivative of 2D Rosenbrock function",N,N],[5,"easom",E,"Easom test function",N,N],[5,"rosenbrock",E,"Multidimensional Rosenbrock test function",N,N],[5,"ackley_param",E,R[44],N,N],[5,"bukin_n6",E,"Bukin test function No. 6",N,N],[5,"beale",E,"Beale test function",N,N],[11,"into",R[45],E,66,[[["self"]],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[47],E,E,66,[[[U]],[R[9]]]],[11,R[53],E,E,66,[[["self"]],[T]]],[11,R[52],E,E,66,[[["self"]],[R[54]]]],[11,R[48],E,E,66,[[["self"]],[T]]],[11,R[49],E,E,66,[[["self"]],[R[9]]]],[11,"into",R[46],E,1,[[["self"]],[U]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[51],E,E,1,N],[11,"from",E,E,1,[[[T]],[T]]],[11,R[47],E,E,1,[[[U]],[R[9]]]],[11,R[53],E,E,1,[[["self"]],[T]]],[11,R[52],E,E,1,[[["self"]],[R[54]]]],[11,R[48],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[["self"]],[R[9]]]],[11,"into",R[2],E,67,[[["self"]],[U]]],[11,R[50],E,E,67,[[["self"]],[T]]],[11,R[51],E,E,67,N],[11,"from",E,E,67,[[[T]],[T]]],[11,R[47],E,E,67,[[[U]],[R[9]]]],[11,R[53],E,E,67,[[["self"]],[T]]],[11,R[52],E,E,67,[[["self"]],[R[54]]]],[11,R[48],E,E,67,[[["self"]],[T]]],[11,R[49],E,E,67,[[["self"]],[R[9]]]],[11,"into",E,E,68,[[["self"]],[U]]],[11,R[50],E,E,68,[[["self"]],[T]]],[11,R[51],E,E,68,N],[11,"from",E,E,68,[[[T]],[T]]],[11,R[47],E,E,68,[[[U]],[R[9]]]],[11,R[53],E,E,68,[[["self"]],[T]]],[11,R[52],E,E,68,[[["self"]],[R[54]]]],[11,R[48],E,E,68,[[["self"]],[T]]],[11,R[49],E,E,68,[[["self"]],[R[9]]]],[11,"into",E,E,69,[[["self"]],[U]]],[11,R[50],E,E,69,[[["self"]],[T]]],[11,R[51],E,E,69,N],[11,"from",E,E,69,[[[T]],[T]]],[11,R[47],E,E,69,[[[U]],[R[9]]]],[11,R[53],E,E,69,[[["self"]],[T]]],[11,R[52],E,E,69,[[["self"]],[R[54]]]],[11,R[48],E,E,69,[[["self"]],[T]]],[11,R[49],E,E,69,[[["self"]],[R[9]]]],[11,"into",E,E,9,[[["self"]],[U]]],[11,R[50],E,E,9,[[["self"]],[T]]],[11,R[51],E,E,9,N],[11,R[55],E,E,9,[[["self"]],[R[56]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[47],E,E,9,[[[U]],[R[9]]]],[11,R[53],E,E,9,[[["self"]],[T]]],[11,R[52],E,E,9,[[["self"]],[R[54]]]],[11,R[48],E,E,9,[[["self"]],[T]]],[11,R[49],E,E,9,[[["self"]],[R[9]]]],[11,"into",R[15],E,11,[[["self"]],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[47],E,E,11,[[[U]],[R[9]]]],[11,R[53],E,E,11,[[["self"]],[T]]],[11,R[52],E,E,11,[[["self"]],[R[54]]]],[11,R[48],E,E,11,[[["self"]],[T]]],[11,R[49],E,E,11,[[["self"]],[R[9]]]],[11,"into",R[2],E,70,[[["self"]],[U]]],[11,R[50],E,E,70,[[["self"]],[T]]],[11,R[51],E,E,70,N],[11,R[55],E,E,70,[[["self"]],[R[56]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[47],E,E,70,[[[U]],[R[9]]]],[11,R[53],E,E,70,[[["self"]],[T]]],[11,R[52],E,E,70,[[["self"]],[R[54]]]],[11,R[48],E,E,70,[[["self"]],[T]]],[11,R[49],E,E,70,[[["self"]],[R[9]]]],[11,"into",E,E,18,[[["self"]],[U]]],[11,R[50],E,E,18,[[["self"]],[T]]],[11,R[51],E,E,18,N],[11,R[55],E,E,18,[[["self"]],[R[56]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[47],E,E,18,[[[U]],[R[9]]]],[11,R[53],E,E,18,[[["self"]],[T]]],[11,R[52],E,E,18,[[["self"]],[R[54]]]],[11,R[48],E,E,18,[[["self"]],[T]]],[11,R[49],E,E,18,[[["self"]],[R[9]]]],[11,"into",E,E,20,[[["self"]],[U]]],[11,R[55],E,E,20,[[["self"]],[R[56]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[47],E,E,20,[[[U]],[R[9]]]],[11,R[53],E,E,20,[[["self"]],[T]]],[11,R[52],E,E,20,[[["self"]],[R[54]]]],[11,R[48],E,E,20,[[["self"]],[T]]],[11,R[49],E,E,20,[[["self"]],[R[9]]]],[11,"as_fail",E,E,20,[[["self"]],["fail"]]],[11,"into",E,E,21,[[["self"]],[U]]],[11,R[50],E,E,21,[[["self"]],[T]]],[11,R[51],E,E,21,N],[11,"from",E,E,21,[[[T]],[T]]],[11,R[47],E,E,21,[[[U]],[R[9]]]],[11,R[53],E,E,21,[[["self"]],[T]]],[11,R[52],E,E,21,[[["self"]],[R[54]]]],[11,R[48],E,E,21,[[["self"]],[T]]],[11,R[49],E,E,21,[[["self"]],[R[9]]]],[11,"into",E,E,71,[[["self"]],[U]]],[11,R[55],E,E,71,[[["self"]],[R[56]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[47],E,E,71,[[[U]],[R[9]]]],[11,R[53],E,E,71,[[["self"]],[T]]],[11,R[52],E,E,71,[[["self"]],[R[54]]]],[11,R[48],E,E,71,[[["self"]],[T]]],[11,R[49],E,E,71,[[["self"]],[R[9]]]],[11,"as_fail",E,E,71,[[["self"]],["fail"]]],[11,"into",R[57],E,72,[[["self"]],[U]]],[11,R[50],E,E,72,[[["self"]],[T]]],[11,R[51],E,E,72,N],[11,"from",E,E,72,[[[T]],[T]]],[11,R[47],E,E,72,[[[U]],[R[9]]]],[11,R[53],E,E,72,[[["self"]],[T]]],[11,R[52],E,E,72,[[["self"]],[R[54]]]],[11,R[48],E,E,72,[[["self"]],[T]]],[11,R[49],E,E,72,[[["self"]],[R[9]]]],[11,"into",E,E,24,[[["self"]],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[47],E,E,24,[[[U]],[R[9]]]],[11,R[53],E,E,24,[[["self"]],[T]]],[11,R[52],E,E,24,[[["self"]],[R[54]]]],[11,R[48],E,E,24,[[["self"]],[T]]],[11,R[49],E,E,24,[[["self"]],[R[9]]]],[11,"into",R[2],E,73,[[["self"]],[U]]],[11,R[50],E,E,73,[[["self"]],[T]]],[11,R[51],E,E,73,N],[11,R[55],E,E,73,[[["self"]],[R[56]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[47],E,E,73,[[[U]],[R[9]]]],[11,R[53],E,E,73,[[["self"]],[T]]],[11,R[52],E,E,73,[[["self"]],[R[54]]]],[11,R[48],E,E,73,[[["self"]],[T]]],[11,R[49],E,E,73,[[["self"]],[R[9]]]],[11,"into",E,E,74,[[["self"]],[U]]],[11,R[50],E,E,74,[[["self"]],[T]]],[11,R[51],E,E,74,N],[11,"from",E,E,74,[[[T]],[T]]],[11,R[47],E,E,74,[[[U]],[R[9]]]],[11,R[53],E,E,74,[[["self"]],[T]]],[11,R[52],E,E,74,[[["self"]],[R[54]]]],[11,R[48],E,E,74,[[["self"]],[T]]],[11,R[49],E,E,74,[[["self"]],[R[9]]]],[11,"into",E,E,26,[[["self"]],[U]]],[11,R[50],E,E,26,[[["self"]],[T]]],[11,R[51],E,E,26,N],[11,"from",E,E,26,[[[T]],[T]]],[11,R[47],E,E,26,[[[U]],[R[9]]]],[11,R[53],E,E,26,[[["self"]],[T]]],[11,R[52],E,E,26,[[["self"]],[R[54]]]],[11,R[48],E,E,26,[[["self"]],[T]]],[11,R[49],E,E,26,[[["self"]],[R[9]]]],[11,"into",R[58],E,34,[[["self"]],[U]]],[11,R[50],E,E,34,[[["self"]],[T]]],[11,R[51],E,E,34,N],[11,"from",E,E,34,[[[T]],[T]]],[11,R[47],E,E,34,[[[U]],[R[9]]]],[11,R[53],E,E,34,[[["self"]],[T]]],[11,R[52],E,E,34,[[["self"]],[R[54]]]],[11,R[48],E,E,34,[[["self"]],[T]]],[11,R[49],E,E,34,[[["self"]],[R[9]]]],[11,"into",R[2],E,36,[[["self"]],[U]]],[11,R[50],E,E,36,[[["self"]],[T]]],[11,R[51],E,E,36,N],[11,R[55],E,E,36,[[["self"]],[R[56]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[47],E,E,36,[[[U]],[R[9]]]],[11,R[53],E,E,36,[[["self"]],[T]]],[11,R[52],E,E,36,[[["self"]],[R[54]]]],[11,R[48],E,E,36,[[["self"]],[T]]],[11,R[49],E,E,36,[[["self"]],[R[9]]]],[11,"into",E,E,37,[[["self"]],[U]]],[11,R[50],E,E,37,[[["self"]],[T]]],[11,R[51],E,E,37,N],[11,"from",E,E,37,[[[T]],[T]]],[11,R[47],E,E,37,[[[U]],[R[9]]]],[11,R[53],E,E,37,[[["self"]],[T]]],[11,R[52],E,E,37,[[["self"]],[R[54]]]],[11,R[48],E,E,37,[[["self"]],[T]]],[11,R[49],E,E,37,[[["self"]],[R[9]]]],[11,"into",E,E,38,[[["self"]],[U]]],[11,R[50],E,E,38,[[["self"]],[T]]],[11,R[51],E,E,38,N],[11,R[55],E,E,38,[[["self"]],[R[56]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[47],E,E,38,[[[U]],[R[9]]]],[11,R[53],E,E,38,[[["self"]],[T]]],[11,R[52],E,E,38,[[["self"]],[R[54]]]],[11,R[48],E,E,38,[[["self"]],[T]]],[11,R[49],E,E,38,[[["self"]],[R[9]]]],[11,"into",R[59],E,39,[[["self"]],[U]]],[11,R[50],E,E,39,[[["self"]],[T]]],[11,R[51],E,E,39,N],[11,"from",E,E,39,[[[T]],[T]]],[11,R[47],E,E,39,[[[U]],[R[9]]]],[11,R[53],E,E,39,[[["self"]],[T]]],[11,R[52],E,E,39,[[["self"]],[R[54]]]],[11,R[48],E,E,39,[[["self"]],[T]]],[11,R[49],E,E,39,[[["self"]],[R[9]]]],[11,"into",R[60],E,40,[[["self"]],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[47],E,E,40,[[[U]],[R[9]]]],[11,R[53],E,E,40,[[["self"]],[T]]],[11,R[52],E,E,40,[[["self"]],[R[54]]]],[11,R[48],E,E,40,[[["self"]],[T]]],[11,R[49],E,E,40,[[["self"]],[R[9]]]],[11,"into",R[61],E,41,[[["self"]],[U]]],[11,R[50],E,E,41,[[["self"]],[T]]],[11,R[51],E,E,41,N],[11,"from",E,E,41,[[[T]],[T]]],[11,R[47],E,E,41,[[[U]],[R[9]]]],[11,R[53],E,E,41,[[["self"]],[T]]],[11,R[52],E,E,41,[[["self"]],[R[54]]]],[11,R[48],E,E,41,[[["self"]],[T]]],[11,R[49],E,E,41,[[["self"]],[R[9]]]],[11,"into",E,E,42,[[["self"]],[U]]],[11,R[50],E,E,42,[[["self"]],[T]]],[11,R[51],E,E,42,N],[11,"from",E,E,42,[[[T]],[T]]],[11,R[47],E,E,42,[[[U]],[R[9]]]],[11,R[53],E,E,42,[[["self"]],[T]]],[11,R[52],E,E,42,[[["self"]],[R[54]]]],[11,R[48],E,E,42,[[["self"]],[T]]],[11,R[49],E,E,42,[[["self"]],[R[9]]]],[11,"into",E,E,43,[[["self"]],[U]]],[11,R[50],E,E,43,[[["self"]],[T]]],[11,R[51],E,E,43,N],[11,"from",E,E,43,[[[T]],[T]]],[11,R[47],E,E,43,[[[U]],[R[9]]]],[11,R[53],E,E,43,[[["self"]],[T]]],[11,R[52],E,E,43,[[["self"]],[R[54]]]],[11,R[48],E,E,43,[[["self"]],[T]]],[11,R[49],E,E,43,[[["self"]],[R[9]]]],[11,"into",E,E,44,[[["self"]],[U]]],[11,R[50],E,E,44,[[["self"]],[T]]],[11,R[51],E,E,44,N],[11,"from",E,E,44,[[[T]],[T]]],[11,R[47],E,E,44,[[[U]],[R[9]]]],[11,R[53],E,E,44,[[["self"]],[T]]],[11,R[52],E,E,44,[[["self"]],[R[54]]]],[11,R[48],E,E,44,[[["self"]],[T]]],[11,R[49],E,E,44,[[["self"]],[R[9]]]],[11,"into",R[62],E,45,[[["self"]],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[47],E,E,45,[[[U]],[R[9]]]],[11,R[53],E,E,45,[[["self"]],[T]]],[11,R[52],E,E,45,[[["self"]],[R[54]]]],[11,R[48],E,E,45,[[["self"]],[T]]],[11,R[49],E,E,45,[[["self"]],[R[9]]]],[11,"into",R[63],E,46,[[["self"]],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[47],E,E,46,[[[U]],[R[9]]]],[11,R[53],E,E,46,[[["self"]],[T]]],[11,R[52],E,E,46,[[["self"]],[R[54]]]],[11,R[48],E,E,46,[[["self"]],[T]]],[11,R[49],E,E,46,[[["self"]],[R[9]]]],[11,"into",R[64],E,47,[[["self"]],[U]]],[11,R[50],E,E,47,[[["self"]],[T]]],[11,R[51],E,E,47,N],[11,"from",E,E,47,[[[T]],[T]]],[11,R[47],E,E,47,[[[U]],[R[9]]]],[11,R[53],E,E,47,[[["self"]],[T]]],[11,R[52],E,E,47,[[["self"]],[R[54]]]],[11,R[48],E,E,47,[[["self"]],[T]]],[11,R[49],E,E,47,[[["self"]],[R[9]]]],[11,"into",R[65],E,49,[[["self"]],[U]]],[11,R[50],E,E,49,[[["self"]],[T]]],[11,R[51],E,E,49,N],[11,"from",E,E,49,[[[T]],[T]]],[11,R[47],E,E,49,[[[U]],[R[9]]]],[11,R[53],E,E,49,[[["self"]],[T]]],[11,R[52],E,E,49,[[["self"]],[R[54]]]],[11,R[48],E,E,49,[[["self"]],[T]]],[11,R[49],E,E,49,[[["self"]],[R[9]]]],[11,"into",E,E,50,[[["self"]],[U]]],[11,R[50],E,E,50,[[["self"]],[T]]],[11,R[51],E,E,50,N],[11,"from",E,E,50,[[[T]],[T]]],[11,R[47],E,E,50,[[[U]],[R[9]]]],[11,R[53],E,E,50,[[["self"]],[T]]],[11,R[52],E,E,50,[[["self"]],[R[54]]]],[11,R[48],E,E,50,[[["self"]],[T]]],[11,R[49],E,E,50,[[["self"]],[R[9]]]],[11,"into",E,E,51,[[["self"]],[U]]],[11,R[50],E,E,51,[[["self"]],[T]]],[11,R[51],E,E,51,N],[11,"from",E,E,51,[[[T]],[T]]],[11,R[47],E,E,51,[[[U]],[R[9]]]],[11,R[53],E,E,51,[[["self"]],[T]]],[11,R[52],E,E,51,[[["self"]],[R[54]]]],[11,R[48],E,E,51,[[["self"]],[T]]],[11,R[49],E,E,51,[[["self"]],[R[9]]]],[11,"into",E,E,52,[[["self"]],[U]]],[11,R[50],E,E,52,[[["self"]],[T]]],[11,R[51],E,E,52,N],[11,"from",E,E,52,[[[T]],[T]]],[11,R[47],E,E,52,[[[U]],[R[9]]]],[11,R[53],E,E,52,[[["self"]],[T]]],[11,R[52],E,E,52,[[["self"]],[R[54]]]],[11,R[48],E,E,52,[[["self"]],[T]]],[11,R[49],E,E,52,[[["self"]],[R[9]]]],[11,"into",R[66],E,53,[[["self"]],[U]]],[11,R[50],E,E,53,[[["self"]],[T]]],[11,R[51],E,E,53,N],[11,"from",E,E,53,[[[T]],[T]]],[11,R[47],E,E,53,[[[U]],[R[9]]]],[11,R[53],E,E,53,[[["self"]],[T]]],[11,R[52],E,E,53,[[["self"]],[R[54]]]],[11,R[48],E,E,53,[[["self"]],[T]]],[11,R[49],E,E,53,[[["self"]],[R[9]]]],[11,"into",R[67],E,54,[[["self"]],[U]]],[11,R[50],E,E,54,[[["self"]],[T]]],[11,R[51],E,E,54,N],[11,"from",E,E,54,[[[T]],[T]]],[11,R[47],E,E,54,[[[U]],[R[9]]]],[11,R[53],E,E,54,[[["self"]],[T]]],[11,R[52],E,E,54,[[["self"]],[R[54]]]],[11,R[48],E,E,54,[[["self"]],[T]]],[11,R[49],E,E,54,[[["self"]],[R[9]]]],[11,"into",R[68],E,55,[[["self"]],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[47],E,E,55,[[[U]],[R[9]]]],[11,R[53],E,E,55,[[["self"]],[T]]],[11,R[52],E,E,55,[[["self"]],[R[54]]]],[11,R[48],E,E,55,[[["self"]],[T]]],[11,R[49],E,E,55,[[["self"]],[R[9]]]],[11,"into",R[69],E,56,[[["self"]],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[47],E,E,56,[[[U]],[R[9]]]],[11,R[53],E,E,56,[[["self"]],[T]]],[11,R[52],E,E,56,[[["self"]],[R[54]]]],[11,R[48],E,E,56,[[["self"]],[T]]],[11,R[49],E,E,56,[[["self"]],[R[9]]]],[11,"into",R[70],E,57,[[["self"]],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[47],E,E,57,[[[U]],[R[9]]]],[11,R[53],E,E,57,[[["self"]],[T]]],[11,R[52],E,E,57,[[["self"]],[R[54]]]],[11,R[48],E,E,57,[[["self"]],[T]]],[11,R[49],E,E,57,[[["self"]],[R[9]]]],[11,"into",R[71],E,58,[[["self"]],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[47],E,E,58,[[[U]],[R[9]]]],[11,R[53],E,E,58,[[["self"]],[T]]],[11,R[52],E,E,58,[[["self"]],[R[54]]]],[11,R[48],E,E,58,[[["self"]],[T]]],[11,R[49],E,E,58,[[["self"]],[R[9]]]],[11,"into",R[72],E,59,[[["self"]],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[47],E,E,59,[[[U]],[R[9]]]],[11,R[53],E,E,59,[[["self"]],[T]]],[11,R[52],E,E,59,[[["self"]],[R[54]]]],[11,R[48],E,E,59,[[["self"]],[T]]],[11,R[49],E,E,59,[[["self"]],[R[9]]]],[11,"into",R[73],E,61,[[["self"]],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[47],E,E,61,[[[U]],[R[9]]]],[11,R[53],E,E,61,[[["self"]],[T]]],[11,R[52],E,E,61,[[["self"]],[R[54]]]],[11,R[48],E,E,61,[[["self"]],[T]]],[11,R[49],E,E,61,[[["self"]],[R[9]]]],[11,"into",E,E,60,[[["self"]],[U]]],[11,R[50],E,E,60,[[["self"]],[T]]],[11,R[51],E,E,60,N],[11,"from",E,E,60,[[[T]],[T]]],[11,R[47],E,E,60,[[[U]],[R[9]]]],[11,R[53],E,E,60,[[["self"]],[T]]],[11,R[52],E,E,60,[[["self"]],[R[54]]]],[11,R[48],E,E,60,[[["self"]],[T]]],[11,R[49],E,E,60,[[["self"]],[R[9]]]],[11,"into",R[74],E,62,[[["self"]],[U]]],[11,R[50],E,E,62,[[["self"]],[T]]],[11,R[51],E,E,62,N],[11,"from",E,E,62,[[[T]],[T]]],[11,R[47],E,E,62,[[[U]],[R[9]]]],[11,R[53],E,E,62,[[["self"]],[T]]],[11,R[52],E,E,62,[[["self"]],[R[54]]]],[11,R[48],E,E,62,[[["self"]],[T]]],[11,R[49],E,E,62,[[["self"]],[R[9]]]],[11,"into",R[75],E,63,[[["self"]],[U]]],[11,R[50],E,E,63,[[["self"]],[T]]],[11,R[51],E,E,63,N],[11,"from",E,E,63,[[[T]],[T]]],[11,R[47],E,E,63,[[[U]],[R[9]]]],[11,R[53],E,E,63,[[["self"]],[T]]],[11,R[52],E,E,63,[[["self"]],[R[54]]]],[11,R[48],E,E,63,[[["self"]],[T]]],[11,R[49],E,E,63,[[["self"]],[R[9]]]],[11,"into",R[76],E,64,[[["self"]],[U]]],[11,R[50],E,E,64,[[["self"]],[T]]],[11,R[51],E,E,64,N],[11,"from",E,E,64,[[[T]],[T]]],[11,R[47],E,E,64,[[[U]],[R[9]]]],[11,R[53],E,E,64,[[["self"]],[T]]],[11,R[52],E,E,64,[[["self"]],[R[54]]]],[11,R[48],E,E,64,[[["self"]],[T]]],[11,R[49],E,E,64,[[["self"]],[R[9]]]],[11,"into",R[77],E,65,[[["self"]],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[47],E,E,65,[[[U]],[R[9]]]],[11,R[53],E,E,65,[[["self"]],[T]]],[11,R[52],E,E,65,[[["self"]],[R[54]]]],[11,R[48],E,E,65,[[["self"]],[T]]],[11,R[49],E,E,65,[[["self"]],[R[9]]]],[11,"apply",R[2],R[79],73,N],[11,R[78],E,R[79],73,N],[11,R[80],E,R[79],73,N],[11,"modify",E,R[79],73,N],[11,"apply",E,R[79],70,N],[11,R[78],E,R[79],70,N],[11,R[80],E,R[79],70,N],[11,"modify",E,R[79],70,N],[11,"apply",E,E,37,N],[11,R[78],E,E,37,N],[11,R[80],E,E,37,N],[11,"modify",E,E,37,N],[11,"eq",E,E,73,[[["self"],[R[81]]],["bool"]]],[11,"ne",E,E,73,[[["self"],[R[81]]],["bool"]]],[11,"eq",E,E,69,[[["self"],[R[82]]],["bool"]]],[11,"ne",E,E,69,[[["self"],[R[82]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[86]]],["bool"]]],[11,"eq",E,E,36,[[["self"],[R[10]]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[27]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[27]]],["bool"]]],[11,"eq",R[58],E,34,[[["self"],[R[88]]],["bool"]]],[11,"eq",R[2],E,38,[[["self"],[R[83]]],["bool"]]],[11,"ne",E,E,38,[[["self"],[R[83]]],["bool"]]],[11,"eq",E,E,68,[[["self"],[R[84]]],["bool"]]],[11,"ne",E,E,68,[[["self"],[R[84]]],["bool"]]],[11,"eq",E,E,21,[[["self"],[R[85]]],["bool"]]],[11,"ne",E,E,21,[[["self"],[R[85]]],["bool"]]],[11,"eq",E,E,70,[[["self"],[R[89]]],["bool"]]],[11,"hash",E,E,73,N],[11,"hash",E,E,68,N],[11,"hash",E,E,38,N],[11,"hash",E,E,36,N],[11,"hash",E,E,18,N],[11,"hash",E,E,70,N],[11,"clone",E,E,21,[[["self"]],[R[85]]]],[11,"clone",E,E,26,[[["self"]],[R[8]]]],[11,"clone",E,E,18,[[["self"]],[R[27]]]],[11,"clone",E,E,74,[[["self"]],[R[128]]]],[11,"clone",E,E,9,[[["self"]],[R[86]]]],[11,"clone",E,E,38,[[["self"]],[R[83]]]],[11,"clone",E,E,67,[[["self"]],[R[87]]]],[11,"clone",E,E,37,[[["self"]],[R[7]]]],[11,"clone",R[57],E,72,[[["self"]],[R[127]]]],[11,"clone",R[58],E,34,[[["self"]],[R[88]]]],[11,"clone",R[2],E,68,[[["self"]],[R[84]]]],[11,"clone",E,E,70,[[["self"]],[R[89]]]],[11,"clone",E,E,69,[[["self"]],[R[82]]]],[11,"clone",E,E,73,[[["self"]],[R[81]]]],[11,"clone",E,E,36,[[["self"]],[R[10]]]],[11,R[90],E,E,73,[[["self"],["__s"]],[R[9]]]],[11,R[90],E,E,67,[[["self"],["__s"]],[R[9]]]],[11,R[90],E,E,9,[[["self"],["__s"]],[R[9]]]],[11,R[90],E,E,18,[[["self"],["__s"]],[R[9]]]],[11,R[90],E,E,37,[[["self"],["__s"]],[R[9]]]],[11,R[90],E,E,70,[[["self"],["__s"]],[R[9]]]],[11,R[90],E,E,38,[[["self"],["__s"]],[R[9]]]],[11,R[90],R[58],E,34,[[["self"],["__s"]],[R[9]]]],[11,R[90],R[2],E,68,[[["self"],["__s"]],[R[9]]]],[11,R[90],E,E,26,[[["self"],["__s"]],[R[9]]]],[11,R[90],E,E,21,[[["self"],["__s"]],[R[9]]]],[11,R[90],E,E,69,[[["self"],["__s"]],[R[9]]]],[11,R[90],R[45],E,66,[[["self"],["__s"]],[R[9]]]],[11,R[90],R[2],E,36,[[["self"],["__s"]],[R[9]]]],[11,"fmt",E,E,73,[[["self"],[R[91]]],[R[9],["error"]]]],[11,"fmt",E,E,38,[[["self"],[R[91]]],[R[9],["error"]]]],[11,"fmt",E,E,9,[[["self"],[R[91]]],[R[9],["error"]]]],[11,"fmt",E,E,36,[[["self"],[R[91]]],[R[9],["error"]]]],[11,"fmt",E,E,18,[[["self"],[R[91]]],[R[9],["error"]]]],[11,"fmt",E,E,20,[[["self"],[R[91]]],[R[9],["error"]]]],[11,"fmt",E,E,70,[[["self"],[R[91]]],[R[9],["error"]]]],[11,R[92],E,E,69,[[["self"],[R[8]],[R[27]]],[R[9],["error"]]]],[11,R[93],R[57],"Log general info",72,[[["self"],["str"],[R[27]]],[R[9],["error"]]]],[11,R[92],E,"This should be used to log iteration data only (because…",72,[[["self"],[R[8]],[R[27]]],[R[9],["error"]]]],[11,R[93],R[2],"Initial observation This is called after the…",74,[[["self"],["str"],[R[27]]],[R[9],["error"]]]],[11,R[92],E,"This is called after every iteration and gets the current…",74,[[["self"],[R[8]],[R[27]]],[R[9],["error"]]]],[11,"from_iter",E,E,18,[[["i"]],[R[27]]]],[11,"extend",E,E,18,N],[11,R[94],E,E,68,[[["__d"]],[R[9],[R[84]]]]],[11,R[94],E,E,38,[[["__d"]],[R[9],[R[83]]]]],[11,R[94],E,E,37,[[["__d"]],[R[9],[R[7]]]]],[11,R[94],R[58],E,34,[[["__d"]],[R[9],[R[88]]]]],[11,R[94],R[2],E,70,[[["__d"]],[R[9],[R[89]]]]],[11,R[94],E,E,36,[[["__d"]],[R[9],[R[10]]]]],[11,R[94],E,E,18,[[["__d"]],[R[9],[R[27]]]]],[11,R[94],R[45],E,66,[[["__d"]],[R[9],[R[95]]]]],[11,R[94],R[2],E,21,[[["__d"]],[R[9],[R[85]]]]],[11,R[94],E,E,9,[[["__d"]],[R[9],[R[86]]]]],[11,R[94],E,E,73,[[["__d"]],[R[9],[R[81]]]]],[11,R[94],E,E,26,[[["__d"]],[R[9],[R[8]]]]],[11,R[94],E,E,69,[[["__d"]],[R[9],[R[82]]]]],[11,R[96],E,E,38,[[["self"],[R[83]]],[R[98],[R[97]]]]],[11,"lt",E,E,38,[[["self"],[R[83]]],["bool"]]],[11,"le",E,E,38,[[["self"],[R[83]]],["bool"]]],[11,"gt",E,E,38,[[["self"],[R[83]]],["bool"]]],[11,"ge",E,E,38,[[["self"],[R[83]]],["bool"]]],[11,R[96],E,E,21,[[["self"],[R[85]]],[R[98],[R[97]]]]],[11,"lt",E,E,21,[[["self"],[R[85]]],["bool"]]],[11,"le",E,E,21,[[["self"],[R[85]]],["bool"]]],[11,"gt",E,E,21,[[["self"],[R[85]]],["bool"]]],[11,"ge",E,E,21,[[["self"],[R[85]]],["bool"]]],[11,R[96],E,E,68,[[["self"],[R[84]]],[R[98],[R[97]]]]],[11,"lt",E,E,68,[[["self"],[R[84]]],["bool"]]],[11,"le",E,E,68,[[["self"],[R[84]]],["bool"]]],[11,"gt",E,E,68,[[["self"],[R[84]]],["bool"]]],[11,"ge",E,E,68,[[["self"],[R[84]]],["bool"]]],[11,R[96],E,E,18,[[["self"],[R[27]]],[R[98],[R[97]]]]],[11,"lt",E,E,18,[[["self"],[R[27]]],["bool"]]],[11,"le",E,E,18,[[["self"],[R[27]]],["bool"]]],[11,"gt",E,E,18,[[["self"],[R[27]]],["bool"]]],[11,"ge",E,E,18,[[["self"],[R[27]]],["bool"]]],[11,R[96],R[58],E,34,[[["self"],[R[88]]],[R[98],[R[97]]]]],[11,R[96],R[2],E,9,[[["self"],[R[86]]],[R[98],[R[97]]]]],[11,R[96],E,E,36,[[["self"],[R[10]]],[R[98],[R[97]]]]],[11,R[96],E,E,70,[[["self"],[R[89]]],[R[98],[R[97]]]]],[11,R[96],E,E,69,[[["self"],[R[82]]],[R[98],[R[97]]]]],[11,"lt",E,E,69,[[["self"],[R[82]]],["bool"]]],[11,"le",E,E,69,[[["self"],[R[82]]],["bool"]]],[11,"gt",E,E,69,[[["self"],[R[82]]],["bool"]]],[11,"ge",E,E,69,[[["self"],[R[82]]],["bool"]]],[11,R[96],E,E,73,[[["self"],[R[81]]],[R[98],[R[97]]]]],[11,"lt",E,E,73,[[["self"],[R[81]]],["bool"]]],[11,"le",E,E,73,[[["self"],[R[81]]],["bool"]]],[11,"gt",E,E,73,[[["self"],[R[81]]],["bool"]]],[11,"ge",E,E,73,[[["self"],[R[81]]],["bool"]]],[11,"from",R[57],E,24,[[[R[27]]],["argminslogkv"]]],[11,"fmt",R[2],E,20,[[["self"],[R[91]]],[R[9],["error"]]]],[11,"fmt",E,E,38,[[["self"],[R[91]]],[R[9],["error"]]]],[11,"fmt",E,E,26,[[["self"],[R[91]]],[R[9],["error"]]]],[11,"fmt",E,E,36,[[["self"],[R[91]]],[R[9],["error"]]]],[11,"fmt",E,E,70,[[["self"],[R[91]]],[R[9],["error"]]]],[11,"fmt",E,E,67,[[["self"],[R[91]]],[R[9],["error"]]]],[11,"fmt",E,E,18,[[["self"],[R[91]]],[R[9],["error"]]]],[11,"fmt",E,E,21,[[["self"],[R[91]]],[R[9],["error"]]]],[11,"fmt",E,E,37,[[["self"],[R[91]]],[R[9],["error"]]]],[11,"fmt",R[58],E,34,[[["self"],[R[91]]],[R[9],["error"]]]],[11,"fmt",R[2],E,68,[[["self"],[R[91]]],[R[9],["error"]]]],[11,"fmt",E,E,73,[[["self"],[R[91]]],[R[9],["error"]]]],[11,"fmt",E,E,69,[[["self"],[R[91]]],[R[9],["error"]]]],[11,"name",E,E,20,[[["self"]],[R[98],["str"]]]],[11,"cause",E,E,20,[[["self"]],[R[98],["fail"]]]],[11,R[99],E,E,20,[[["self"]],[R[98],[R[99]]]]],[11,R[90],E,E,26,[[["self"],["record"],[R[100]]],[R[9],["error"]]]],[11,R[90],R[57],E,24,[[["self"],["record"],[R[100]]],[R[9],["error"]]]],[11,R[101],R[2],E,74,[[],[R[128]]]],[11,R[101],E,E,26,[[],[R[8]]]],[11,R[101],R[58],E,34,[[],[R[88]]]],[11,R[101],R[2],E,73,[[],[R[81]]]],[11,R[101],E,"The default is `Always`",21,[[],[R[85]]]],[11,R[101],E,E,70,[[],[R[89]]]],[11,R[101],E,E,36,[[],[R[10]]]],[11,R[101],E,E,38,[[],[R[83]]]],[11,R[101],E,E,18,[[],[R[27]]]],[11,R[101],E,E,68,[[],[R[84]]]],[11,R[101],E,E,67,[[],[R[87]]]],[11,"cmp",E,E,38,[[["self"],[R[83]]],[R[97]]]],[11,"cmp",R[58],E,34,[[["self"],[R[88]]],[R[97]]]],[11,"cmp",R[2],E,70,[[["self"],[R[89]]],[R[97]]]],[11,"cmp",E,E,18,[[["self"],[R[27]]],[R[97]]]],[11,"cmp",E,E,36,[[["self"],[R[10]]],[R[97]]]],[11,"cmp",E,E,69,[[["self"],[R[82]]],[R[97]]]],[11,"cmp",E,E,68,[[["self"],[R[84]]],[R[97]]]],[11,"cmp",E,E,21,[[["self"],[R[85]]],[R[97]]]],[11,"cmp",E,E,9,[[["self"],[R[86]]],[R[97]]]],[11,"cmp",E,E,73,[[["self"],[R[81]]],[R[97]]]],[11,"fmt",E,E,71,[[["self"],[R[91]]],[R[9],["error"]]]],[11,"as_fail",E,E,71,[[["self"]],["fail"]]],[11,"from",E,E,71,[[["f"]],["error"]]],[11,"fmt",E,E,71,[[["self"],[R[91]]],[R[9],["error"]]]],[11,"as_ref",E,E,71,[[["self"]],["fail"]]],[11,"clone",R[46],E,1,[[["self"]],[R[102]]]],[11,R[101],E,E,1,[[],[R[102]]]],[11,"eval",R[65],E,49,[[["self"],["f64"],[T],["f64"],[T],[T],["f64"]],["bool"]]],[11,R[103],E,E,49,[[["self"]],["bool"]]],[11,"eval",E,E,50,[[["self"],["f64"],[T],["f64"],[T],[T],["f64"]],["bool"]]],[11,R[103],E,E,50,[[["self"]],["bool"]]],[11,"eval",E,E,51,[[["self"],["f64"],[T],["f64"],[T],[T],["f64"]],["bool"]]],[11,R[103],E,E,51,[[["self"]],["bool"]]],[11,"eval",E,E,52,[[["self"],["f64"],[T],["f64"],[T],[T],["f64"]],["bool"]]],[11,R[103],E,E,52,[[["self"]],["bool"]]],[11,R[96],R[61],E,41,[[["self"],[R[106]]],[R[98],[R[97]]]]],[11,R[96],E,E,42,[[["self"],[R[107]]],[R[98],[R[97]]]]],[11,R[96],E,E,43,[[["self"],[R[108]]],[R[98],[R[97]]]]],[11,R[96],E,E,44,[[["self"],[R[109]]],[R[98],[R[97]]]]],[11,R[96],R[74],E,62,[[["self"],[R[104]]],[R[98],[R[97]]]]],[11,"lt",E,E,62,[[["self"],[R[104]]],["bool"]]],[11,"le",E,E,62,[[["self"],[R[104]]],["bool"]]],[11,"gt",E,E,62,[[["self"],[R[104]]],["bool"]]],[11,"ge",E,E,62,[[["self"],[R[104]]],["bool"]]],[11,R[96],R[75],E,63,[[["self"],["dogleg"]],[R[98],[R[97]]]]],[11,"lt",E,E,63,[[["self"],["dogleg"]],["bool"]]],[11,"le",E,E,63,[[["self"],["dogleg"]],["bool"]]],[11,"gt",E,E,63,[[["self"],["dogleg"]],["bool"]]],[11,"ge",E,E,63,[[["self"],["dogleg"]],["bool"]]],[11,R[96],R[76],E,64,[[["self"],[R[105]]],[R[98],[R[97]]]]],[11,"lt",E,E,64,[[["self"],[R[105]]],["bool"]]],[11,"le",E,E,64,[[["self"],[R[105]]],["bool"]]],[11,"gt",E,E,64,[[["self"],[R[105]]],["bool"]]],[11,"ge",E,E,64,[[["self"],[R[105]]],["bool"]]],[11,"eq",R[61],E,41,[[["self"],[R[106]]],["bool"]]],[11,"eq",E,E,42,[[["self"],[R[107]]],["bool"]]],[11,"eq",E,E,43,[[["self"],[R[108]]],["bool"]]],[11,"eq",E,E,44,[[["self"],[R[109]]],["bool"]]],[11,"eq",R[74],E,62,[[["self"],[R[104]]],["bool"]]],[11,"ne",E,E,62,[[["self"],[R[104]]],["bool"]]],[11,"eq",R[75],E,63,[[["self"],["dogleg"]],["bool"]]],[11,"ne",E,E,63,[[["self"],["dogleg"]],["bool"]]],[11,"eq",R[76],E,64,[[["self"],[R[105]]],["bool"]]],[11,"ne",E,E,64,[[["self"],[R[105]]],["bool"]]],[11,R[101],R[61],E,41,[[],[R[106]]]],[11,R[101],E,E,42,[[],[R[107]]]],[11,R[101],E,E,43,[[],[R[108]]]],[11,R[101],E,E,44,[[],[R[109]]]],[11,R[101],R[65],E,49,[[],[R[111]]]],[11,R[101],E,E,50,[[],[R[112]]]],[11,R[101],E,E,51,[[],[R[113]]]],[11,R[101],E,E,52,[[],[R[114]]]],[11,R[101],R[66],E,53,[[],["self"]]],[11,R[101],R[67],E,54,[[],["self"]]],[11,R[101],R[69],E,56,[[],["newton"]]],[11,R[101],R[73],E,60,[[],["self"]]],[11,R[101],R[74],E,62,[[],[R[104]]]],[11,R[101],R[75],E,63,[[],["dogleg"]]],[11,R[101],R[76],E,64,[[],[R[105]]]],[11,"clone",R[59],E,39,[[["self"]],[R[110]]]],[11,"clone",R[61],E,41,[[["self"]],[R[106]]]],[11,"clone",E,E,42,[[["self"]],[R[107]]]],[11,"clone",E,E,43,[[["self"]],[R[108]]]],[11,"clone",E,E,44,[[["self"]],[R[109]]]],[11,"clone",R[64],E,47,[[["self"]],["backtrackinglinesearch"]]],[11,"clone",R[65],E,49,[[["self"]],[R[111]]]],[11,"clone",E,E,50,[[["self"]],[R[112]]]],[11,"clone",E,E,51,[[["self"]],[R[113]]]],[11,"clone",E,E,52,[[["self"]],[R[114]]]],[11,"clone",R[66],E,53,[[["self"]],["hagerzhanglinesearch"]]],[11,"clone",R[67],E,54,[[["self"]],["morethuentelinesearch"]]],[11,"clone",R[73],E,60,[[["self"]],[R[115]]]],[11,"clone",R[74],E,62,[[["self"]],[R[104]]]],[11,"clone",R[75],E,63,[[["self"]],["dogleg"]]],[11,"clone",R[76],E,64,[[["self"]],[R[105]]]],[11,"cmp",R[61],E,41,[[["self"],[R[106]]],[R[97]]]],[11,"cmp",E,E,42,[[["self"],[R[107]]],[R[97]]]],[11,"cmp",E,E,43,[[["self"],[R[108]]],[R[97]]]],[11,"cmp",E,E,44,[[["self"],[R[109]]],[R[97]]]],[11,"fmt",E,E,41,[[["self"],[R[91]]],[R[9]]]],[11,"fmt",E,E,42,[[["self"],[R[91]]],[R[9]]]],[11,"fmt",E,E,43,[[["self"],[R[91]]],[R[9]]]],[11,"fmt",E,E,44,[[["self"],[R[91]]],[R[9]]]],[11,"fmt",R[65],E,49,[[["self"],[R[91]]],[R[9]]]],[11,"fmt",E,E,50,[[["self"],[R[91]]],[R[9]]]],[11,"fmt",E,E,51,[[["self"],[R[91]]],[R[9]]]],[11,"fmt",E,E,52,[[["self"],[R[91]]],[R[9]]]],[11,"fmt",R[73],E,60,[[["self"],[R[91]]],[R[9]]]],[11,"fmt",R[74],E,62,[[["self"],[R[91]]],[R[9]]]],[11,"fmt",R[75],E,63,[[["self"],[R[91]]],[R[9]]]],[11,"fmt",R[76],E,64,[[["self"],[R[91]]],[R[9]]]],[11,"hash",R[61],E,41,N],[11,"hash",E,E,42,N],[11,"hash",E,E,43,N],[11,"hash",E,E,44,N],[11,R[90],R[59],E,39,[[["self"],["__s"]],[R[9]]]],[11,R[90],R[60],E,40,[[["self"],["__s"]],[R[9]]]],[11,R[90],R[61],E,41,[[["self"],["__s"]],[R[9]]]],[11,R[90],E,E,42,[[["self"],["__s"]],[R[9]]]],[11,R[90],E,E,43,[[["self"],["__s"]],[R[9]]]],[11,R[90],E,E,44,[[["self"],["__s"]],[R[9]]]],[11,R[90],R[62],E,45,[[["self"],["__s"]],[R[9]]]],[11,R[90],R[63],E,46,[[["self"],["__s"]],[R[9]]]],[11,R[90],R[64],E,47,[[["self"],["__s"]],[R[9]]]],[11,R[90],R[65],E,49,[[["self"],["__s"]],[R[9]]]],[11,R[90],E,E,50,[[["self"],["__s"]],[R[9]]]],[11,R[90],E,E,51,[[["self"],["__s"]],[R[9]]]],[11,R[90],E,E,52,[[["self"],["__s"]],[R[9]]]],[11,R[90],R[66],E,53,[[["self"],["__s"]],[R[9]]]],[11,R[90],R[67],E,54,[[["self"],["__s"]],[R[9]]]],[11,R[90],R[68],E,55,[[["self"],["__s"]],[R[9]]]],[11,R[90],R[69],E,56,[[["self"],["__s"]],[R[9]]]],[11,R[90],R[70],E,57,[[["self"],["__s"]],[R[9]]]],[11,R[90],R[71],E,58,[[["self"],["__s"]],[R[9]]]],[11,R[90],R[72],E,59,[[["self"],["__s"]],[R[9]]]],[11,R[90],R[73],E,60,[[["self"],["__s"]],[R[9]]]],[11,R[90],E,E,61,[[["self"],["__s"]],[R[9]]]],[11,R[90],R[74],E,62,[[["self"],["__s"]],[R[9]]]],[11,R[90],R[75],E,63,[[["self"],["__s"]],[R[9]]]],[11,R[90],R[76],E,64,[[["self"],["__s"]],[R[9]]]],[11,R[90],R[77],E,65,[[["self"],["__s"]],[R[9]]]],[11,R[94],R[59],E,39,[[["__d"]],[R[9]]]],[11,R[94],R[60],E,40,[[["__d"]],[R[9]]]],[11,R[94],R[61],E,41,[[["__d"]],[R[9]]]],[11,R[94],E,E,42,[[["__d"]],[R[9]]]],[11,R[94],E,E,43,[[["__d"]],[R[9]]]],[11,R[94],E,E,44,[[["__d"]],[R[9]]]],[11,R[94],R[62],E,45,[[["__d"]],[R[9]]]],[11,R[94],R[63],E,46,[[["__d"]],[R[9]]]],[11,R[94],R[64],E,47,[[["__d"]],[R[9]]]],[11,R[94],R[65],E,49,[[["__d"]],[R[9]]]],[11,R[94],E,E,50,[[["__d"]],[R[9]]]],[11,R[94],E,E,51,[[["__d"]],[R[9]]]],[11,R[94],E,E,52,[[["__d"]],[R[9]]]],[11,R[94],R[66],E,53,[[["__d"]],[R[9]]]],[11,R[94],R[67],E,54,[[["__d"]],[R[9]]]],[11,R[94],R[68],E,55,[[["__d"]],[R[9]]]],[11,R[94],R[69],E,56,[[["__d"]],[R[9]]]],[11,R[94],R[70],E,57,[[["__d"]],[R[9]]]],[11,R[94],R[71],E,58,[[["__d"]],[R[9]]]],[11,R[94],R[72],E,59,[[["__d"]],[R[9]]]],[11,R[94],R[73],E,60,[[["__d"]],[R[9]]]],[11,R[94],E,E,61,[[["__d"]],[R[9]]]],[11,R[94],R[74],E,62,[[["__d"]],[R[9]]]],[11,R[94],R[75],E,63,[[["__d"]],[R[9]]]],[11,R[94],R[76],E,64,[[["__d"]],[R[9]]]],[11,R[94],R[77],E,65,[[["__d"]],[R[9]]]],[11,"init",R[59],E,39,[[["self"],[R[7]],[R[8]]],[R[9],[R[98],"error"]]]],[11,R[116],E,R[118],39,[[["self"],[R[7]],[R[8]]],[R[9],[R[87],"error"]]]],[11,"init",R[60],E,40,[[["self"],[R[7]],[R[8]]],[R[9],[R[98],"error"]]]],[11,R[116],E,E,40,[[["self"],[R[7]],[R[8]]],[R[9],[R[87],"error"]]]],[11,R[116],R[62],E,45,[[["self"],[R[7]],[R[8]]],[R[9],[R[87],"error"]]]],[11,R[116],R[63],E,46,[[["self"],[R[7]],[R[8]]],[R[9],[R[87],"error"]]]],[11,"init",R[64],E,47,[[["self"],[R[7]],[R[8]]],[R[9],[R[98],"error"]]]],[11,R[116],E,E,47,[[["self"],[R[7]],[R[8]]],[R[9],[R[87],"error"]]]],[11,R[117],E,E,47,[[["self"],[R[8]]],[R[10]]]],[11,"init",R[66],E,53,[[["self"],[R[7]],[R[8]]],[R[9],[R[98],"error"]]]],[11,R[116],E,E,53,[[["self"],[R[7]],[R[8]]],[R[9],[R[87],"error"]]]],[11,R[117],E,E,53,[[["self"],[R[8]]],[R[10]]]],[11,"init",R[67],E,54,[[["self"],[R[7]],[R[8]]],[R[9],[R[98],"error"]]]],[11,R[116],E,E,54,[[["self"],[R[7]],[R[8]]],[R[9],[R[87],"error"]]]],[11,R[116],R[68],E,55,[[["self"],[R[7]],[R[8]]],[R[9],[R[87],"error"]]]],[11,R[117],E,E,55,[[["self"],[R[8]]],[R[10]]]],[11,R[116],R[69],E,56,[[["self"],[R[7]],[R[8]]],[R[9],[R[87],"error"]]]],[11,"init",R[70],E,57,[[["self"],[R[7]],[R[8]]],[R[9],[R[98],"error"]]]],[11,R[116],E,E,57,[[["self"],[R[7]],[R[8]]],[R[9],[R[87],"error"]]]],[11,R[117],E,E,57,[[["self"],[R[8]]],[R[10]]]],[11,"init",R[71],E,58,[[["self"],[R[7]],[R[8]]],[R[9],[R[98],"error"]]]],[11,R[116],E,E,58,[[["self"],[R[7]],[R[8]]],[R[9],[R[87],"error"]]]],[11,R[117],E,E,58,[[["self"],[R[8]]],[R[10]]]],[11,"init",R[72],E,59,[[["self"],[R[7]],[R[8]]],[R[9],[R[98],"error"]]]],[11,R[116],E,E,59,[[["self"],[R[7]],[R[8]]],[R[9],[R[87],"error"]]]],[11,R[117],E,E,59,[[["self"],[R[8]]],[R[10]]]],[11,"init",R[73],E,61,[[["self"],[R[7]],[R[8]]],[R[9],[R[98],"error"]]]],[11,R[116],E,R[118],61,[[["self"],[R[7]],[R[8]]],[R[9],[R[87],"error"]]]],[11,R[117],E,E,61,[[["self"],[R[8]]],[R[10]]]],[11,R[116],R[74],E,62,[[["self"],[R[7]],[R[8]]],[R[9],[R[87],"error"]]]],[11,R[117],E,E,62,[[["self"],[R[8]]],[R[10]]]],[11,R[116],R[75],E,63,[[["self"],[R[7]],[R[8]]],[R[9],[R[87],"error"]]]],[11,R[117],E,E,63,[[["self"],[R[8]]],[R[10]]]],[11,"init",R[76],E,64,[[["self"],[R[7]],[R[8]]],[R[9],[R[98],"error"]]]],[11,R[116],E,E,64,[[["self"],[R[7]],[R[8]]],[R[9],[R[87],"error"]]]],[11,R[117],E,E,64,[[["self"],[R[8]]],[R[10]]]],[11,"init",R[77],E,65,[[["self"],[R[7]],[R[8]]],[R[9],[R[98],"error"]]]],[11,R[116],E,E,65,[[["self"],[R[7]],[R[8]]],[R[9],[R[87],"error"]]]],[11,R[117],E,E,65,[[["self"],[R[8]]],[R[10]]]],[11,R[119],R[64],R[121],47,[[["self"],["p"]]]],[11,R[120],E,R[122],47,[[["self"],["f64"]],[R[9],["error"]]]],[11,R[119],R[66],R[121],53,[[["self"],["p"]]]],[11,R[120],E,R[122],53,[[["self"],["f64"]],[R[9],["error"]]]],[11,R[119],R[67],R[121],54,[[["self"],["p"]]]],[11,R[120],E,R[122],54,[[["self"],["f64"]],[R[9],["error"]]]],[11,R[123],R[74],E,62,[[["self"],["f64"]]]],[11,R[123],R[75],E,63,[[["self"],["f64"]]]],[11,R[123],R[76],E,64,[[["self"],["f64"]]]],[11,"update",R[61],E,41,[[["self"],[T],[T],[T]],["f64"]]],[11,"update",E,E,42,[[["self"],[T],[T],[T]],["f64"]]],[11,"update",E,E,43,[[["self"],[T],[T],[T]],["f64"]]],[11,"update",E,E,44,[[["self"],[T],[T],[T]],["f64"]]],[11,"new",R[45],E,66,N],[11,"from_checkpoint",E,E,66,[[["p"]],[R[9],[R[95],"error"]]]],[11,"run",E,E,66,[[["self"]],[R[9],[R[86],"error"]]]],[11,"add_observer",E,"Attaches a observer which implements `ArgminLog` to the…",66,[[["self"],["obs"],[R[85]]],[R[95]]]],[11,R[42],E,"Set maximum number of iterations",66,[[["self"],["u64"]],[R[95]]]],[11,R[124],E,"Set target cost value",66,[[["self"],["f64"]],[R[95]]]],[11,"cost",E,"Set cost value",66,[[["self"],["f64"]],[R[95]]]],[11,"grad",E,"Set Gradient",66,N],[11,R[80],E,"Set Hessian",66,N],[11,"checkpoint_dir",E,"Set checkpoint directory",66,[[["self"],["str"]],[R[95]]]],[11,"checkpoint_name",E,"Set checkpoint name",66,[[["self"],["str"]],[R[95]]]],[11,"checkpoint_mode",E,E,66,[[["self"],[R[83]]],[R[95]]]],[11,"ctrlc",E,"Turn Ctrl-C handling on or off (default: on)",66,[[["self"],["bool"]],[R[95]]]],[11,"new",R[46],"Create a new empty `PerturbationVector`",1,[[],[R[102]]]],[11,"add",E,"Add an index `x_idx` and the corresponding function…",1,[[["self"],["usize"],["vec",["usize"]]],[R[102]]]],[11,"new",R[2],R[33],67,[[],[R[87]]]],[11,"param",E,"Set parameter vector",67,N],[11,"cost",E,"Set cost function value",67,[[["self"],["f64"]],[R[87]]]],[11,"grad",E,"Set gradient",67,N],[11,R[80],E,"Set hessian",67,N],[11,"kv",E,"Adds an `ArgminKV`",67,[[["self"],[R[27]]],[R[87]]]],[11,R[125],E,"Set termination reason",67,[[["self"],[R[10]]],[R[87]]]],[11,R[132],E,"Get parameter vector",67,[[["self"]],[R[98]]]],[11,"get_cost",E,"Get cost function value",67,[[["self"]],[R[98],["f64"]]]],[11,"get_grad",E,"Get gradient",67,[[["self"]],[R[98]]]],[11,R[134],E,"Get hessian",67,[[["self"]],[R[98]]]],[11,R[133],E,"Get termination reason",67,[[["self"]],[R[98],[R[10]]]]],[11,"get_kv",E,"Return KV",67,[[["self"]],[R[27]]]],[11,"new",E,E,68,[[["str"],[R[83]]],[R[9],[R[84],"error"]]]],[11,"set_dir",E,E,68,N],[11,"dir",E,E,68,[[["self"]],[R[56]]]],[11,"set_name",E,E,68,N],[11,"name",E,E,68,[[["self"]],[R[56]]]],[11,"set_mode",E,E,68,N],[11,"store",E,E,68,[[["self"],[T],[R[56]]],[R[9],["error"]]]],[11,"store_cond",E,E,68,[[["self"],[T],["u64"]],[R[9],["error"]]]],[11,"new",E,E,69,[[["str"],["str"]],[R[82]]]],[11,R[100],E,E,69,[[["self"],[R[88]]],[R[82]]]],[11,"new",E,R[33],9,[[["o"],[R[8]]],[R[86]]]],[11,"new",R[15],E,11,[[["l"],["e"],["p"]],[R[16]]]],[11,"new",R[2],R[33],70,[[],[R[89]]]],[11,"new",E,R[33],18,[[],[R[27]]]],[11,"push",E,"Push a key-value pair to the `kv` vector.",18,[[["self"],["str"],[T]],[R[27]]]],[11,"merge",E,"Merge another `kv` into `self.kv`",18,[[["self"],[R[27]]],[R[27]]]],[11,"from_boxed_compat",E,"Creates an `Error` from `Box<std::error::Error>`.",71,[[["box",["error"]]],["error"]]],[11,"as_fail",E,"Return a reference to the underlying failure that this…",71,[[["self"]],["fail"]]],[11,"name",E,"Returns the name of the underlying fail.",71,[[["self"]],[R[98],["str"]]]],[11,"cause",E,"Returns a reference to the underlying cause of this…",71,[[["self"]],["fail"]]],[11,R[99],E,"Gets a reference to the `Backtrace` for this `Error`.",71,[[["self"]],[R[99]]]],[11,"context",E,"Provides context for this `Error`.",71,[[["self"],["d"]],["context"]]],[11,"compat",E,"Wraps `Error` in a compatibility type.",71,[[["self"]],["compat",["error"]]]],[11,"downcast",E,R[126],71,[[["self"]],[R[9],["error"]]]],[11,"find_root_cause",E,"Returns the \"root cause\" of this error - the last value in…",71,[[["self"]],["fail"]]],[11,"iter_causes",E,"Returns a iterator over the causes of this error with the…",71,[[["self"]],["causes"]]],[11,"iter_chain",E,"Returns a iterator over all fails up the chain from the…",71,[[["self"]],["causes"]]],[11,"downcast_ref",E,R[126],71,[[["self"]],[R[98]]]],[11,"downcast_mut",E,R[126],71,[[["self"]],[R[98]]]],[11,"root_cause",E,"Deprecated alias to `find_root_cause`.",71,[[["self"]],["fail"]]],[11,"causes",E,"Deprecated alias to `iter_causes`.",71,[[["self"]],["causes"]]],[11,"term",R[57],"Log to the terminal in a blocking way",72,[[],[R[127]]]],[11,"term_noblock",E,"Log to the terminal in a non-blocking way (in case of…",72,[[],[R[127]]]],[11,"file",E,"Log JSON to a file in a blocking way",72,[[["str"]],[R[9],[R[127],"error"]]]],[11,"file_noblock",E,"Log JSON to a file in a non-blocking way (in case of…",72,[[["str"]],[R[9],[R[127],"error"]]]],[11,"new",R[2],R[33],73,[[],[R[81]]]],[11,"new",E,R[33],74,[[],[R[128]]]],[11,"push",E,"Push another `Observe` to the `observer` field",74,[[["self"],["obs"],[R[85]]],[R[128]]]],[11,"new",E,"Create new IterState from `param`",26,N],[11,"param",E,"Set parameter vector. This shifts the stored parameter…",26,N],[11,R[129],E,"Set best paramater vector. This shifts the stored best…",26,N],[11,"cost",E,"Set the current cost function value. This shifts the…",26,[[["self"],["f64"]],[R[8]]]],[11,R[130],E,"Set the current best cost function value. This shifts the…",26,[[["self"],["f64"]],[R[8]]]],[11,"grad",E,"Set gradient. This shifts the stored gradient to the…",26,N],[11,R[80],E,"Set Hessian. This shifts the stored Hessian to the…",26,N],[11,R[124],E,E,26,[[["self"],["f64"]],[R[8]]]],[11,R[42],E,E,26,[[["self"],["u64"]],[R[8]]]],[11,R[131],E,E,26,[[["self"],["u64"]],[R[8]]]],[11,R[125],E,E,26,[[["self"],[R[10]]],[R[8]]]],[11,"time",E,E,26,[[["self"],["duration"]],[R[8]]]],[11,R[132],E,E,26,N],[11,"get_prev_param",E,E,26,N],[11,"get_best_param",E,E,26,N],[11,"get_prev_best_param",E,E,26,N],[11,"get_cost",E,E,26,[[["self"]],["f64"]]],[11,"get_prev_cost",E,E,26,[[["self"]],["f64"]]],[11,"get_best_cost",E,E,26,[[["self"]],["f64"]]],[11,"get_prev_best_cost",E,E,26,[[["self"]],["f64"]]],[11,"get_target_cost",E,E,26,[[["self"]],["f64"]]],[11,"get_cost_func_count",E,E,26,[[["self"]],["u64"]]],[11,"get_grad_func_count",E,E,26,[[["self"]],["u64"]]],[11,"get_hessian_func_count",E,E,26,[[["self"]],["u64"]]],[11,"get_modify_func_count",E,E,26,[[["self"]],["u64"]]],[11,"get_last_best_iter",E,E,26,[[["self"]],["u64"]]],[11,R[133],E,E,26,[[["self"]],[R[10]]]],[11,"get_time",E,E,26,[[["self"]],["duration"]]],[11,"get_grad",E,E,26,[[["self"]],[R[98]]]],[11,"get_prev_grad",E,E,26,[[["self"]],[R[98]]]],[11,R[134],E,E,26,[[["self"]],[R[98]]]],[11,"get_prev_hessian",E,E,26,[[["self"]],[R[98]]]],[11,"get_iter",E,E,26,[[["self"]],["u64"]]],[11,"get_max_iters",E,E,26,[[["self"]],["u64"]]],[11,"increment_iter",E,"Increment the number of iterations by one",26,N],[11,"increment_func_counts",E,"Increment all function evaluation counts by the evaluation…",26,N],[11,"set_func_counts",E,"Set all function evaluation counts to the evaluation…",26,N],[11,"increment_cost_func_count",E,"Increment cost function evaluation count by `num`",26,N],[11,"increment_grad_func_count",E,"Increment gradient function evaluation count by `num`",26,N],[11,"increment_hessian_func_count",E,"Increment Hessian function evaluation count by `num`",26,N],[11,"increment_modify_func_count",E,"Increment modify function evaluation count by `num`",26,N],[11,"new_best",E,"Indicate that a new best parameter vector was found",26,N],[11,"is_best",E,"Returns whether the current parameter vector is also the…",26,[[["self"]],["bool"]]],[11,R[135],E,"Return whether the algorithm has terminated or not",26,[[["self"]],["bool"]]],[11,R[135],E,"Returns `true` if a solver terminated and `false` otherwise",36,[[["self"]],["bool"]]],[11,"text",E,"Returns a texual representation of what happened",36,[[["self"]],["str"]]],[11,"new",E,R[33],37,[[["o"]],[R[7]]]],[11,"apply",E,"Calls the `apply` method of `op` and increments…",37,N],[11,R[78],E,"Calls the `gradient` method of `op` and increments…",37,N],[11,R[80],E,"Calls the `hessian` method of `op` and increments…",37,N],[11,"modify",E,"Calls the `modify` method of `op` and increments…",37,N],[11,"consume_op",E,"Consumes an operator by increasing the function call…",37,N],[11,"reset",E,"Reset the cost function counts to zero",37,[[["self"]],[R[7]]]],[11,"get_op",E,"Returns the operator `op` by taking ownership of `self`.",37,[[["self"]],["o"]]],[11,"clone_op",E,"Returns a clone of the operator `op`.",37,[[["self"]],["o"]]],[11,"new_from_op",E,"Creates a new `OpWrapper<O>` from another `OpWrapper<O>`…",37,[[[R[7]]],[R[7]]]]],"p":[[8,R[136]],[3,R[137]],[8,"ArgminOp"],[8,"Solver"],[8,R[138]],[8,R[139]],[8,R[140]],[8,R[141]],[8,R[142]],[3,R[143]],[8,R[144]],[3,R[145]],[8,R[146]],[8,R[147]],[8,R[148]],[8,R[149]],[8,R[150]],[8,R[151]],[3,"ArgminKV"],[8,R[152]],[4,R[153]],[4,R[154]],[8,R[155]],[8,R[156]],[3,R[157]],[8,R[158]],[3,R[159]],[8,R[160]],[8,R[161]],[8,R[162]],[8,R[163]],[8,R[164]],[8,"Observe"],[8,R[165]],[4,R[166]],[8,R[167]],[4,R[168]],[3,R[169]],[4,R[170]],[3,R[171]],[3,R[172]],[3,R[173]],[3,R[174]],[3,R[175]],[3,R[176]],[3,R[177]],[3,R[178]],[3,R[179]],[8,R[180]],[3,R[181]],[3,R[182]],[3,R[183]],[3,R[184]],[3,R[185]],[3,R[186]],[3,"NewtonCG"],[3,"Newton"],[3,"BFGS"],[3,"DFP"],[3,"SR1"],[4,R[187]],[3,R[188]],[3,R[189]],[3,"Dogleg"],[3,"Steihaug"],[3,R[190]],[3,R[1]],[3,R[191]],[3,R[192]],[3,R[193]],[3,R[194]],[3,"Error"],[3,R[195]],[3,R[196]],[3,"Observer"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);