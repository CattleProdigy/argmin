(function() {var implementors = {};
implementors["argmin"] = [{"text":"impl&lt;O:&nbsp;ArgminOp&gt; Default for IterState&lt;O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O::Param: Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Default for ArgminKV","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default, U:&nbsp;Default, H:&nbsp;Default, J:&nbsp;Default, F:&nbsp;Default&gt; Default for NoOperator&lt;T, U, H, J, F&gt;","synthetic":false,"types":[]},{"text":"impl Default for MinimalNoOperator","synthetic":false,"types":[]},{"text":"impl Default for WriteToFileSerializer","synthetic":false,"types":[]},{"text":"impl&lt;O:&nbsp;Default&gt; Default for Observer&lt;O&gt;","synthetic":false,"types":[]},{"text":"impl Default for ObserverMode","synthetic":false,"types":[]},{"text":"impl&lt;O:&nbsp;Default + ArgminOp&gt; Default for OpWrapper&lt;O&gt;","synthetic":false,"types":[]},{"text":"impl Default for CheckpointMode","synthetic":false,"types":[]},{"text":"impl Default for ArgminCheckpoint","synthetic":false,"types":[]},{"text":"impl Default for TerminationReason","synthetic":false,"types":[]},{"text":"impl&lt;O:&nbsp;Default + ArgminOp&gt; Default for ArgminIterData&lt;O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O::Param: Default,<br>&nbsp;&nbsp;&nbsp;&nbsp;O::Float: Default,<br>&nbsp;&nbsp;&nbsp;&nbsp;O::Param: Default,<br>&nbsp;&nbsp;&nbsp;&nbsp;O::Hessian: Default,<br>&nbsp;&nbsp;&nbsp;&nbsp;O::Jacobian: Default,<br>&nbsp;&nbsp;&nbsp;&nbsp;O::Param: Default,<br>&nbsp;&nbsp;&nbsp;&nbsp;O::Float: Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Default for FletcherReeves","synthetic":false,"types":[]},{"text":"impl Default for PolakRibiere","synthetic":false,"types":[]},{"text":"impl Default for PolakRibierePlus","synthetic":false,"types":[]},{"text":"impl Default for HestenesStiefel","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;ArgminFloat&gt; Default for GaussNewton&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Default&gt; Default for ArmijoCondition&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Default&gt; Default for WolfeCondition&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Default&gt; Default for StrongWolfeCondition&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Default&gt; Default for GoldsteinCondition&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Default, F:&nbsp;ArgminFloat&gt; Default for HagerZhangLineSearch&lt;P, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Default, F:&nbsp;ArgminFloat&gt; Default for MoreThuenteLineSearch&lt;P, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P, F&gt; Default for NelderMead&lt;P, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Clone + ArgminAdd&lt;P, P&gt; + ArgminSub&lt;P, P&gt; + ArgminMul&lt;F, P&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: ArgminFloat,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;ArgminFloat&gt; Default for Newton&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F&gt; Default for SATempFunc&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Default&gt; Default for CauchyPoint&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Default&gt; Default for Dogleg&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Default, F:&nbsp;Default&gt; Default for Steihaug&lt;P, F&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()